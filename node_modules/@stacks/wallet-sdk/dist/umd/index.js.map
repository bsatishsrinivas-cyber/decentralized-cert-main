{"version":3,"file":"index.js","mappings":"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","sources":["webpack://StacksWalletSdk/webpack/universalModuleDefinition","webpack://StacksWalletSdk/webpack/runtime/create fake namespace object","webpack://StacksWalletSdk/../../node_modules/@noble/hashes/_assert.js","webpack://StacksWalletSdk/../../node_modules/@noble/hashes/_sha2.js","webpack://StacksWalletSdk/../../node_modules/@noble/hashes/_u64.js","webpack://StacksWalletSdk/../../node_modules/@noble/hashes/cryptoBrowser.js","webpack://StacksWalletSdk/../../node_modules/@noble/hashes/hmac.js","webpack://StacksWalletSdk/../../node_modules/@noble/hashes/pbkdf2.js","webpack://StacksWalletSdk/../../node_modules/@noble/hashes/sha256.js","webpack://StacksWalletSdk/../../node_modules/@noble/hashes/sha512.js","webpack://StacksWalletSdk/../../node_modules/@noble/hashes/utils.js","webpack://StacksWalletSdk/../../node_modules/@noble/secp256k1/lib/index.js","webpack://StacksWalletSdk/../../node_modules/@scure/base/lib/index.js","webpack://StacksWalletSdk/../../node_modules/@scure/bip39/index.js","webpack://StacksWalletSdk/../../node_modules/@scure/bip39/wordlists/english.js","webpack://StacksWalletSdk/../../node_modules/base-x/src/index.js","webpack://StacksWalletSdk/../../node_modules/base64-js/index.js","webpack://StacksWalletSdk/../../node_modules/bs58/index.js","webpack://StacksWalletSdk/../../node_modules/c32check/lib/address.js","webpack://StacksWalletSdk/../../node_modules/c32check/lib/base58check.js","webpack://StacksWalletSdk/../../node_modules/c32check/lib/checksum.js","webpack://StacksWalletSdk/../../node_modules/c32check/lib/encoding.js","webpack://StacksWalletSdk/../../node_modules/c32check/lib/index.js","webpack://StacksWalletSdk/../../node_modules/jsontokens/lib/base64Url.js","webpack://StacksWalletSdk/../../node_modules/jsontokens/lib/cryptoClients/index.js","webpack://StacksWalletSdk/../../node_modules/jsontokens/lib/cryptoClients/secp256k1.js","webpack://StacksWalletSdk/../../node_modules/jsontokens/lib/cryptoClients/sha256.js","webpack://StacksWalletSdk/../../node_modules/jsontokens/lib/decode.js","webpack://StacksWalletSdk/../../node_modules/jsontokens/lib/ecdsaSigFormatter.js","webpack://StacksWalletSdk/../../node_modules/jsontokens/lib/errors.js","webpack://StacksWalletSdk/../../node_modules/jsontokens/lib/index.js","webpack://StacksWalletSdk/../../node_modules/jsontokens/lib/signer.js","webpack://StacksWalletSdk/../../node_modules/jsontokens/lib/verifier.js","webpack://StacksWalletSdk/../../node_modules/lodash.clonedeep/index.js","webpack://StacksWalletSdk/../../node_modules/zone-file/dist/index.js","webpack://StacksWalletSdk/../../node_modules/zone-file/dist/zone-file.cjs.production.min.js","webpack://StacksWalletSdk/webpack/bootstrap","webpack://StacksWalletSdk/webpack/runtime/compat get default export","webpack://StacksWalletSdk/webpack/runtime/define property getters","webpack://StacksWalletSdk/webpack/runtime/global","webpack://StacksWalletSdk/webpack/runtime/hasOwnProperty shorthand","webpack://StacksWalletSdk/webpack/runtime/make namespace object","webpack://StacksWalletSdk/webpack/runtime/node module decorator","webpack://StacksWalletSdk/../../node_modules/@noble/hashes/esm/_assert.js","webpack://StacksWalletSdk/../../node_modules/@noble/hashes/esm/utils.js","webpack://StacksWalletSdk/../../node_modules/@noble/hashes/esm/cryptoBrowser.js","webpack://StacksWalletSdk/../../node_modules/@noble/hashes/esm/hmac.js","webpack://StacksWalletSdk/../../node_modules/@noble/hashes/esm/_sha2.js","webpack://StacksWalletSdk/../../node_modules/@noble/hashes/esm/ripemd160.js","webpack://StacksWalletSdk/../../node_modules/@noble/hashes/esm/sha256.js","webpack://StacksWalletSdk/../../node_modules/@noble/hashes/esm/_u64.js","webpack://StacksWalletSdk/../../node_modules/@noble/hashes/esm/sha512.js","webpack://StacksWalletSdk/../../node_modules/@noble/secp256k1/lib/esm/index.js","webpack://StacksWalletSdk/../../node_modules/@scure/base/lib/esm/index.js","webpack://StacksWalletSdk/../../node_modules/@scure/bip32/lib/esm/index.js","webpack://StacksWalletSdk/../common/dist/esm/utils.js","webpack://StacksWalletSdk/../encryption/dist/esm/cryptoUtils.js","webpack://StacksWalletSdk/../encryption/dist/esm/aesCipher.js","webpack://StacksWalletSdk/../encryption/dist/esm/cryptoRandom.js","webpack://StacksWalletSdk/../common/dist/esm/errors.js","webpack://StacksWalletSdk/../common/dist/esm/keys.js","webpack://StacksWalletSdk/../encryption/dist/esm/sha2Hash.js","webpack://StacksWalletSdk/../encryption/dist/esm/keys.js","webpack://StacksWalletSdk/../encryption/dist/esm/hashRipemd160.js","webpack://StacksWalletSdk/../encryption/dist/esm/ec.js","webpack://StacksWalletSdk/../common/dist/esm/buffer.js","webpack://StacksWalletSdk/../encryption/dist/esm/pbkdf2.js","webpack://StacksWalletSdk/../common/dist/esm/constants.js","webpack://StacksWalletSdk/../common/dist/esm/fetch.js","webpack://StacksWalletSdk/../network/dist/esm/constants.js","webpack://StacksWalletSdk/../network/dist/esm/network.js","webpack://StacksWalletSdk/../transactions/dist/esm/constants.js","webpack://StacksWalletSdk/../transactions/dist/esm/utils.js","webpack://StacksWalletSdk/../transactions/dist/esm/wire/types.js","webpack://StacksWalletSdk/../transactions/dist/esm/keys.js","webpack://StacksWalletSdk/../transactions/dist/esm/address.js","webpack://StacksWalletSdk/../transactions/dist/esm/wire/helpers.js","webpack://StacksWalletSdk/./src/models/common.ts","webpack://StacksWalletSdk/./src/usernames.ts","webpack://StacksWalletSdk/./src/utils.ts","webpack://StacksWalletSdk/./src/derive.ts","webpack://StacksWalletSdk/../auth/dist/esm/profile.js","webpack://StacksWalletSdk/./src/generate.ts","webpack://StacksWalletSdk/../encryption/dist/esm/wallet.js","webpack://StacksWalletSdk/../encryption/dist/esm/encryption.js","webpack://StacksWalletSdk/./src/models/legacy-wallet-config.ts","webpack://StacksWalletSdk/../common/dist/esm/config.js","webpack://StacksWalletSdk/../common/dist/esm/logger.js","webpack://StacksWalletSdk/../storage/dist/esm/hub.js","webpack://StacksWalletSdk/./src/models/wallet-config.ts","webpack://StacksWalletSdk/./src/models/wallet.ts","webpack://StacksWalletSdk/../auth/dist/esm/dids.js","webpack://StacksWalletSdk/../auth/dist/esm/messages.js","webpack://StacksWalletSdk/./src/models/profile.ts","webpack://StacksWalletSdk/../profile/dist/esm/profileTokens.js","webpack://StacksWalletSdk/./src/models/account.ts","webpack://StacksWalletSdk/../encryption/dist/esm/utils.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"StacksWalletSdk\"] = factory();\n\telse\n\t\troot[\"StacksWalletSdk\"] = factory();\n})(this, () => {\nreturn ","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexports.default = assert;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig: exports.toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js_1.default.hash(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js_1.default.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pbkdf2Async = exports.pbkdf2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst hmac_js_1 = require(\"./hmac.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    _assert_js_1.default.hash(hash);\n    const opts = (0, utils_js_1.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    _assert_js_1.default.number(c);\n    _assert_js_1.default.number(dkLen);\n    _assert_js_1.default.number(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = (0, utils_js_1.toBytes)(_password);\n    const salt = (0, utils_js_1.toBytes)(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac_js_1.hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nfunction pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2 = pbkdf2;\nasync function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await (0, utils_js_1.asyncLoop)(c - 1, asyncTick, (i) => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2Async = pbkdf2Async;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha224 = exports.sha256 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\nexports.sha224 = (0, utils_js_1.wrapConstructor)(() => new SHA224());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha384 = exports.sha512_256 = exports.sha512_224 = exports.sha512 = exports.SHA512 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nclass SHA512 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_224 = (0, utils_js_1.wrapConstructor)(() => new SHA512_224());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto.web) {\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto_1.crypto.node) {\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\nexports.randomBytes = randomBytes;\n","\"use strict\";\n/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.utils = exports.schnorr = exports.verify = exports.signSync = exports.sign = exports.getSharedSecret = exports.recoverPublicKey = exports.getPublicKey = exports.Signature = exports.Point = exports.CURVE = void 0;\nconst nodeCrypto = require(\"crypto\");\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nexports.CURVE = CURVE;\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nexports.Point = Point;\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nexports.Signature = Signature;\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return exports.utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nfunction getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexports.getPublicKey = getPublicKey;\nfunction recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nexports.recoverPublicKey = recoverPublicKey;\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nfunction getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nexports.getSharedSecret = getSharedSecret;\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = exports.utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nexports.sign = sign;\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexports.signSync = signSync;\nconst vopts = { strict: true };\nfunction verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nexports.verify = verify;\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = exports.utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = exports.utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = exports.utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await exports.utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(exports.utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexports.schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexports.utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => exports.utils.hashToPrivateKey(exports.utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await exports.utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return exports.utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(exports.utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","\"use strict\";\n/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytes = exports.stringToBytes = exports.str = exports.bytesToString = exports.hex = exports.utf8 = exports.bech32m = exports.bech32 = exports.base58check = exports.base58xmr = exports.base58xrp = exports.base58flickr = exports.base58 = exports.base64url = exports.base64 = exports.base32crockford = exports.base32hex = exports.base32 = exports.base16 = exports.utils = exports.assertNumber = void 0;\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nexports.assertNumber = assertNumber;\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexports.utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexports.base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexports.base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexports.base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexports.base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexports.base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexports.base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexports.base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexports.base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexports.base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexports.base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += exports.base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = exports.base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nconst base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), exports.base58);\nexports.base58check = base58check;\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexports.bech32 = genBech32('bech32');\nexports.bech32m = genBech32('bech32m');\nexports.utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexports.hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8: exports.utf8, hex: exports.hex, base16: exports.base16, base32: exports.base32, base64: exports.base64, base64url: exports.base64url, base58: exports.base58, base58xmr: exports.base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nconst bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexports.bytesToString = bytesToString;\nexports.str = exports.bytesToString;\nconst stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexports.stringToBytes = stringToBytes;\nexports.bytes = exports.stringToBytes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mnemonicToSeedSync = exports.mnemonicToSeed = exports.validateMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.generateMnemonic = void 0;\n/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nconst _assert_1 = require(\"@noble/hashes/_assert\");\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst base_1 = require(\"@scure/base\");\n// Japanese wordlist\nconst isJapanese = (wordlist) => wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093';\n// Normalization replaces equivalent sequences of characters\n// so that any two texts that are equivalent will be reduced\n// to the same sequence of code points, called the normal form of the original text.\nfunction nfkd(str) {\n    if (typeof str !== 'string')\n        throw new TypeError(`Invalid mnemonic type: ${typeof str}`);\n    return str.normalize('NFKD');\n}\nfunction normalize(str) {\n    const norm = nfkd(str);\n    const words = norm.split(' ');\n    if (![12, 15, 18, 21, 24].includes(words.length))\n        throw new Error('Invalid mnemonic');\n    return { nfkd: norm, words };\n}\nfunction assertEntropy(entropy) {\n    _assert_1.default.bytes(entropy, 16, 20, 24, 28, 32);\n}\n/**\n * Generate x random words. Uses Cryptographically-Secure Random Number Generator.\n * @param wordlist imported wordlist for specific language\n * @param strength mnemonic strength 128-256 bits\n * @example\n * generateMnemonic(wordlist, 128)\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction generateMnemonic(wordlist, strength = 128) {\n    _assert_1.default.number(strength);\n    if (strength % 32 !== 0 || strength > 256)\n        throw new TypeError('Invalid entropy');\n    return entropyToMnemonic((0, utils_1.randomBytes)(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nconst calcChecksum = (entropy) => {\n    // Checksum is ent.length/4 bits long\n    const bitsLeft = 8 - entropy.length / 4;\n    // Zero rightmost \"bitsLeft\" bits in byte\n    // For example: bitsLeft=4 val=10111101 -> 10110000\n    return new Uint8Array([((0, sha256_1.sha256)(entropy)[0] >> bitsLeft) << bitsLeft]);\n};\nfunction getCoder(wordlist) {\n    if (!Array.isArray(wordlist) || wordlist.length !== 2 ** 11 || typeof wordlist[0] !== 'string')\n        throw new Error('Worlist: expected array of 2048 strings');\n    wordlist.forEach((i) => {\n        if (typeof i !== 'string')\n            throw new Error(`Wordlist: non-string element: ${i}`);\n    });\n    return base_1.utils.chain(base_1.utils.checksum(1, calcChecksum), base_1.utils.radix2(11, true), base_1.utils.alphabet(wordlist));\n}\n/**\n * Reversible: Converts mnemonic string to raw entropy in form of byte array.\n * @param mnemonic 12-24 words\n * @param wordlist imported wordlist for specific language\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToEntropy(mnem, wordlist)\n * // Produces\n * new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ])\n */\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    const { words } = normalize(mnemonic);\n    const entropy = getCoder(wordlist).decode(words);\n    assertEntropy(entropy);\n    return entropy;\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\n/**\n * Reversible: Converts raw entropy in form of byte array to mnemonic string.\n * @param entropy byte array\n * @param wordlist imported wordlist for specific language\n * @returns 12-24 words\n * @example\n * const ent = new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ]);\n * entropyToMnemonic(ent, wordlist);\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction entropyToMnemonic(entropy, wordlist) {\n    assertEntropy(entropy);\n    const words = getCoder(wordlist).encode(entropy);\n    return words.join(isJapanese(wordlist) ? '\\u3000' : ' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\n/**\n * Validates mnemonic for being 12-24 words contained in `wordlist`.\n */\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nconst salt = (passphrase) => nfkd(`mnemonic${passphrase}`);\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * await mnemonicToSeed(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeed(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeed = mnemonicToSeed;\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToSeedSync(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeedSync(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wordlist = void 0;\nexports.wordlist = `abandon\nability\nable\nabout\nabove\nabsent\nabsorb\nabstract\nabsurd\nabuse\naccess\naccident\naccount\naccuse\nachieve\nacid\nacoustic\nacquire\nacross\nact\naction\nactor\nactress\nactual\nadapt\nadd\naddict\naddress\nadjust\nadmit\nadult\nadvance\nadvice\naerobic\naffair\nafford\nafraid\nagain\nage\nagent\nagree\nahead\naim\nair\nairport\naisle\nalarm\nalbum\nalcohol\nalert\nalien\nall\nalley\nallow\nalmost\nalone\nalpha\nalready\nalso\nalter\nalways\namateur\namazing\namong\namount\namused\nanalyst\nanchor\nancient\nanger\nangle\nangry\nanimal\nankle\nannounce\nannual\nanother\nanswer\nantenna\nantique\nanxiety\nany\napart\napology\nappear\napple\napprove\napril\narch\narctic\narea\narena\nargue\narm\narmed\narmor\narmy\naround\narrange\narrest\narrive\narrow\nart\nartefact\nartist\nartwork\nask\naspect\nassault\nasset\nassist\nassume\nasthma\nathlete\natom\nattack\nattend\nattitude\nattract\nauction\naudit\naugust\naunt\nauthor\nauto\nautumn\naverage\navocado\navoid\nawake\naware\naway\nawesome\nawful\nawkward\naxis\nbaby\nbachelor\nbacon\nbadge\nbag\nbalance\nbalcony\nball\nbamboo\nbanana\nbanner\nbar\nbarely\nbargain\nbarrel\nbase\nbasic\nbasket\nbattle\nbeach\nbean\nbeauty\nbecause\nbecome\nbeef\nbefore\nbegin\nbehave\nbehind\nbelieve\nbelow\nbelt\nbench\nbenefit\nbest\nbetray\nbetter\nbetween\nbeyond\nbicycle\nbid\nbike\nbind\nbiology\nbird\nbirth\nbitter\nblack\nblade\nblame\nblanket\nblast\nbleak\nbless\nblind\nblood\nblossom\nblouse\nblue\nblur\nblush\nboard\nboat\nbody\nboil\nbomb\nbone\nbonus\nbook\nboost\nborder\nboring\nborrow\nboss\nbottom\nbounce\nbox\nboy\nbracket\nbrain\nbrand\nbrass\nbrave\nbread\nbreeze\nbrick\nbridge\nbrief\nbright\nbring\nbrisk\nbroccoli\nbroken\nbronze\nbroom\nbrother\nbrown\nbrush\nbubble\nbuddy\nbudget\nbuffalo\nbuild\nbulb\nbulk\nbullet\nbundle\nbunker\nburden\nburger\nburst\nbus\nbusiness\nbusy\nbutter\nbuyer\nbuzz\ncabbage\ncabin\ncable\ncactus\ncage\ncake\ncall\ncalm\ncamera\ncamp\ncan\ncanal\ncancel\ncandy\ncannon\ncanoe\ncanvas\ncanyon\ncapable\ncapital\ncaptain\ncar\ncarbon\ncard\ncargo\ncarpet\ncarry\ncart\ncase\ncash\ncasino\ncastle\ncasual\ncat\ncatalog\ncatch\ncategory\ncattle\ncaught\ncause\ncaution\ncave\nceiling\ncelery\ncement\ncensus\ncentury\ncereal\ncertain\nchair\nchalk\nchampion\nchange\nchaos\nchapter\ncharge\nchase\nchat\ncheap\ncheck\ncheese\nchef\ncherry\nchest\nchicken\nchief\nchild\nchimney\nchoice\nchoose\nchronic\nchuckle\nchunk\nchurn\ncigar\ncinnamon\ncircle\ncitizen\ncity\ncivil\nclaim\nclap\nclarify\nclaw\nclay\nclean\nclerk\nclever\nclick\nclient\ncliff\nclimb\nclinic\nclip\nclock\nclog\nclose\ncloth\ncloud\nclown\nclub\nclump\ncluster\nclutch\ncoach\ncoast\ncoconut\ncode\ncoffee\ncoil\ncoin\ncollect\ncolor\ncolumn\ncombine\ncome\ncomfort\ncomic\ncommon\ncompany\nconcert\nconduct\nconfirm\ncongress\nconnect\nconsider\ncontrol\nconvince\ncook\ncool\ncopper\ncopy\ncoral\ncore\ncorn\ncorrect\ncost\ncotton\ncouch\ncountry\ncouple\ncourse\ncousin\ncover\ncoyote\ncrack\ncradle\ncraft\ncram\ncrane\ncrash\ncrater\ncrawl\ncrazy\ncream\ncredit\ncreek\ncrew\ncricket\ncrime\ncrisp\ncritic\ncrop\ncross\ncrouch\ncrowd\ncrucial\ncruel\ncruise\ncrumble\ncrunch\ncrush\ncry\ncrystal\ncube\nculture\ncup\ncupboard\ncurious\ncurrent\ncurtain\ncurve\ncushion\ncustom\ncute\ncycle\ndad\ndamage\ndamp\ndance\ndanger\ndaring\ndash\ndaughter\ndawn\nday\ndeal\ndebate\ndebris\ndecade\ndecember\ndecide\ndecline\ndecorate\ndecrease\ndeer\ndefense\ndefine\ndefy\ndegree\ndelay\ndeliver\ndemand\ndemise\ndenial\ndentist\ndeny\ndepart\ndepend\ndeposit\ndepth\ndeputy\nderive\ndescribe\ndesert\ndesign\ndesk\ndespair\ndestroy\ndetail\ndetect\ndevelop\ndevice\ndevote\ndiagram\ndial\ndiamond\ndiary\ndice\ndiesel\ndiet\ndiffer\ndigital\ndignity\ndilemma\ndinner\ndinosaur\ndirect\ndirt\ndisagree\ndiscover\ndisease\ndish\ndismiss\ndisorder\ndisplay\ndistance\ndivert\ndivide\ndivorce\ndizzy\ndoctor\ndocument\ndog\ndoll\ndolphin\ndomain\ndonate\ndonkey\ndonor\ndoor\ndose\ndouble\ndove\ndraft\ndragon\ndrama\ndrastic\ndraw\ndream\ndress\ndrift\ndrill\ndrink\ndrip\ndrive\ndrop\ndrum\ndry\nduck\ndumb\ndune\nduring\ndust\ndutch\nduty\ndwarf\ndynamic\neager\neagle\nearly\nearn\nearth\neasily\neast\neasy\necho\necology\neconomy\nedge\nedit\neducate\neffort\negg\neight\neither\nelbow\nelder\nelectric\nelegant\nelement\nelephant\nelevator\nelite\nelse\nembark\nembody\nembrace\nemerge\nemotion\nemploy\nempower\nempty\nenable\nenact\nend\nendless\nendorse\nenemy\nenergy\nenforce\nengage\nengine\nenhance\nenjoy\nenlist\nenough\nenrich\nenroll\nensure\nenter\nentire\nentry\nenvelope\nepisode\nequal\nequip\nera\nerase\nerode\nerosion\nerror\nerupt\nescape\nessay\nessence\nestate\neternal\nethics\nevidence\nevil\nevoke\nevolve\nexact\nexample\nexcess\nexchange\nexcite\nexclude\nexcuse\nexecute\nexercise\nexhaust\nexhibit\nexile\nexist\nexit\nexotic\nexpand\nexpect\nexpire\nexplain\nexpose\nexpress\nextend\nextra\neye\neyebrow\nfabric\nface\nfaculty\nfade\nfaint\nfaith\nfall\nfalse\nfame\nfamily\nfamous\nfan\nfancy\nfantasy\nfarm\nfashion\nfat\nfatal\nfather\nfatigue\nfault\nfavorite\nfeature\nfebruary\nfederal\nfee\nfeed\nfeel\nfemale\nfence\nfestival\nfetch\nfever\nfew\nfiber\nfiction\nfield\nfigure\nfile\nfilm\nfilter\nfinal\nfind\nfine\nfinger\nfinish\nfire\nfirm\nfirst\nfiscal\nfish\nfit\nfitness\nfix\nflag\nflame\nflash\nflat\nflavor\nflee\nflight\nflip\nfloat\nflock\nfloor\nflower\nfluid\nflush\nfly\nfoam\nfocus\nfog\nfoil\nfold\nfollow\nfood\nfoot\nforce\nforest\nforget\nfork\nfortune\nforum\nforward\nfossil\nfoster\nfound\nfox\nfragile\nframe\nfrequent\nfresh\nfriend\nfringe\nfrog\nfront\nfrost\nfrown\nfrozen\nfruit\nfuel\nfun\nfunny\nfurnace\nfury\nfuture\ngadget\ngain\ngalaxy\ngallery\ngame\ngap\ngarage\ngarbage\ngarden\ngarlic\ngarment\ngas\ngasp\ngate\ngather\ngauge\ngaze\ngeneral\ngenius\ngenre\ngentle\ngenuine\ngesture\nghost\ngiant\ngift\ngiggle\nginger\ngiraffe\ngirl\ngive\nglad\nglance\nglare\nglass\nglide\nglimpse\nglobe\ngloom\nglory\nglove\nglow\nglue\ngoat\ngoddess\ngold\ngood\ngoose\ngorilla\ngospel\ngossip\ngovern\ngown\ngrab\ngrace\ngrain\ngrant\ngrape\ngrass\ngravity\ngreat\ngreen\ngrid\ngrief\ngrit\ngrocery\ngroup\ngrow\ngrunt\nguard\nguess\nguide\nguilt\nguitar\ngun\ngym\nhabit\nhair\nhalf\nhammer\nhamster\nhand\nhappy\nharbor\nhard\nharsh\nharvest\nhat\nhave\nhawk\nhazard\nhead\nhealth\nheart\nheavy\nhedgehog\nheight\nhello\nhelmet\nhelp\nhen\nhero\nhidden\nhigh\nhill\nhint\nhip\nhire\nhistory\nhobby\nhockey\nhold\nhole\nholiday\nhollow\nhome\nhoney\nhood\nhope\nhorn\nhorror\nhorse\nhospital\nhost\nhotel\nhour\nhover\nhub\nhuge\nhuman\nhumble\nhumor\nhundred\nhungry\nhunt\nhurdle\nhurry\nhurt\nhusband\nhybrid\nice\nicon\nidea\nidentify\nidle\nignore\nill\nillegal\nillness\nimage\nimitate\nimmense\nimmune\nimpact\nimpose\nimprove\nimpulse\ninch\ninclude\nincome\nincrease\nindex\nindicate\nindoor\nindustry\ninfant\ninflict\ninform\ninhale\ninherit\ninitial\ninject\ninjury\ninmate\ninner\ninnocent\ninput\ninquiry\ninsane\ninsect\ninside\ninspire\ninstall\nintact\ninterest\ninto\ninvest\ninvite\ninvolve\niron\nisland\nisolate\nissue\nitem\nivory\njacket\njaguar\njar\njazz\njealous\njeans\njelly\njewel\njob\njoin\njoke\njourney\njoy\njudge\njuice\njump\njungle\njunior\njunk\njust\nkangaroo\nkeen\nkeep\nketchup\nkey\nkick\nkid\nkidney\nkind\nkingdom\nkiss\nkit\nkitchen\nkite\nkitten\nkiwi\nknee\nknife\nknock\nknow\nlab\nlabel\nlabor\nladder\nlady\nlake\nlamp\nlanguage\nlaptop\nlarge\nlater\nlatin\nlaugh\nlaundry\nlava\nlaw\nlawn\nlawsuit\nlayer\nlazy\nleader\nleaf\nlearn\nleave\nlecture\nleft\nleg\nlegal\nlegend\nleisure\nlemon\nlend\nlength\nlens\nleopard\nlesson\nletter\nlevel\nliar\nliberty\nlibrary\nlicense\nlife\nlift\nlight\nlike\nlimb\nlimit\nlink\nlion\nliquid\nlist\nlittle\nlive\nlizard\nload\nloan\nlobster\nlocal\nlock\nlogic\nlonely\nlong\nloop\nlottery\nloud\nlounge\nlove\nloyal\nlucky\nluggage\nlumber\nlunar\nlunch\nluxury\nlyrics\nmachine\nmad\nmagic\nmagnet\nmaid\nmail\nmain\nmajor\nmake\nmammal\nman\nmanage\nmandate\nmango\nmansion\nmanual\nmaple\nmarble\nmarch\nmargin\nmarine\nmarket\nmarriage\nmask\nmass\nmaster\nmatch\nmaterial\nmath\nmatrix\nmatter\nmaximum\nmaze\nmeadow\nmean\nmeasure\nmeat\nmechanic\nmedal\nmedia\nmelody\nmelt\nmember\nmemory\nmention\nmenu\nmercy\nmerge\nmerit\nmerry\nmesh\nmessage\nmetal\nmethod\nmiddle\nmidnight\nmilk\nmillion\nmimic\nmind\nminimum\nminor\nminute\nmiracle\nmirror\nmisery\nmiss\nmistake\nmix\nmixed\nmixture\nmobile\nmodel\nmodify\nmom\nmoment\nmonitor\nmonkey\nmonster\nmonth\nmoon\nmoral\nmore\nmorning\nmosquito\nmother\nmotion\nmotor\nmountain\nmouse\nmove\nmovie\nmuch\nmuffin\nmule\nmultiply\nmuscle\nmuseum\nmushroom\nmusic\nmust\nmutual\nmyself\nmystery\nmyth\nnaive\nname\nnapkin\nnarrow\nnasty\nnation\nnature\nnear\nneck\nneed\nnegative\nneglect\nneither\nnephew\nnerve\nnest\nnet\nnetwork\nneutral\nnever\nnews\nnext\nnice\nnight\nnoble\nnoise\nnominee\nnoodle\nnormal\nnorth\nnose\nnotable\nnote\nnothing\nnotice\nnovel\nnow\nnuclear\nnumber\nnurse\nnut\noak\nobey\nobject\noblige\nobscure\nobserve\nobtain\nobvious\noccur\nocean\noctober\nodor\noff\noffer\noffice\noften\noil\nokay\nold\nolive\nolympic\nomit\nonce\none\nonion\nonline\nonly\nopen\nopera\nopinion\noppose\noption\norange\norbit\norchard\norder\nordinary\norgan\norient\noriginal\norphan\nostrich\nother\noutdoor\nouter\noutput\noutside\noval\noven\nover\nown\nowner\noxygen\noyster\nozone\npact\npaddle\npage\npair\npalace\npalm\npanda\npanel\npanic\npanther\npaper\nparade\nparent\npark\nparrot\nparty\npass\npatch\npath\npatient\npatrol\npattern\npause\npave\npayment\npeace\npeanut\npear\npeasant\npelican\npen\npenalty\npencil\npeople\npepper\nperfect\npermit\nperson\npet\nphone\nphoto\nphrase\nphysical\npiano\npicnic\npicture\npiece\npig\npigeon\npill\npilot\npink\npioneer\npipe\npistol\npitch\npizza\nplace\nplanet\nplastic\nplate\nplay\nplease\npledge\npluck\nplug\nplunge\npoem\npoet\npoint\npolar\npole\npolice\npond\npony\npool\npopular\nportion\nposition\npossible\npost\npotato\npottery\npoverty\npowder\npower\npractice\npraise\npredict\nprefer\nprepare\npresent\npretty\nprevent\nprice\npride\nprimary\nprint\npriority\nprison\nprivate\nprize\nproblem\nprocess\nproduce\nprofit\nprogram\nproject\npromote\nproof\nproperty\nprosper\nprotect\nproud\nprovide\npublic\npudding\npull\npulp\npulse\npumpkin\npunch\npupil\npuppy\npurchase\npurity\npurpose\npurse\npush\nput\npuzzle\npyramid\nquality\nquantum\nquarter\nquestion\nquick\nquit\nquiz\nquote\nrabbit\nraccoon\nrace\nrack\nradar\nradio\nrail\nrain\nraise\nrally\nramp\nranch\nrandom\nrange\nrapid\nrare\nrate\nrather\nraven\nraw\nrazor\nready\nreal\nreason\nrebel\nrebuild\nrecall\nreceive\nrecipe\nrecord\nrecycle\nreduce\nreflect\nreform\nrefuse\nregion\nregret\nregular\nreject\nrelax\nrelease\nrelief\nrely\nremain\nremember\nremind\nremove\nrender\nrenew\nrent\nreopen\nrepair\nrepeat\nreplace\nreport\nrequire\nrescue\nresemble\nresist\nresource\nresponse\nresult\nretire\nretreat\nreturn\nreunion\nreveal\nreview\nreward\nrhythm\nrib\nribbon\nrice\nrich\nride\nridge\nrifle\nright\nrigid\nring\nriot\nripple\nrisk\nritual\nrival\nriver\nroad\nroast\nrobot\nrobust\nrocket\nromance\nroof\nrookie\nroom\nrose\nrotate\nrough\nround\nroute\nroyal\nrubber\nrude\nrug\nrule\nrun\nrunway\nrural\nsad\nsaddle\nsadness\nsafe\nsail\nsalad\nsalmon\nsalon\nsalt\nsalute\nsame\nsample\nsand\nsatisfy\nsatoshi\nsauce\nsausage\nsave\nsay\nscale\nscan\nscare\nscatter\nscene\nscheme\nschool\nscience\nscissors\nscorpion\nscout\nscrap\nscreen\nscript\nscrub\nsea\nsearch\nseason\nseat\nsecond\nsecret\nsection\nsecurity\nseed\nseek\nsegment\nselect\nsell\nseminar\nsenior\nsense\nsentence\nseries\nservice\nsession\nsettle\nsetup\nseven\nshadow\nshaft\nshallow\nshare\nshed\nshell\nsheriff\nshield\nshift\nshine\nship\nshiver\nshock\nshoe\nshoot\nshop\nshort\nshoulder\nshove\nshrimp\nshrug\nshuffle\nshy\nsibling\nsick\nside\nsiege\nsight\nsign\nsilent\nsilk\nsilly\nsilver\nsimilar\nsimple\nsince\nsing\nsiren\nsister\nsituate\nsix\nsize\nskate\nsketch\nski\nskill\nskin\nskirt\nskull\nslab\nslam\nsleep\nslender\nslice\nslide\nslight\nslim\nslogan\nslot\nslow\nslush\nsmall\nsmart\nsmile\nsmoke\nsmooth\nsnack\nsnake\nsnap\nsniff\nsnow\nsoap\nsoccer\nsocial\nsock\nsoda\nsoft\nsolar\nsoldier\nsolid\nsolution\nsolve\nsomeone\nsong\nsoon\nsorry\nsort\nsoul\nsound\nsoup\nsource\nsouth\nspace\nspare\nspatial\nspawn\nspeak\nspecial\nspeed\nspell\nspend\nsphere\nspice\nspider\nspike\nspin\nspirit\nsplit\nspoil\nsponsor\nspoon\nsport\nspot\nspray\nspread\nspring\nspy\nsquare\nsqueeze\nsquirrel\nstable\nstadium\nstaff\nstage\nstairs\nstamp\nstand\nstart\nstate\nstay\nsteak\nsteel\nstem\nstep\nstereo\nstick\nstill\nsting\nstock\nstomach\nstone\nstool\nstory\nstove\nstrategy\nstreet\nstrike\nstrong\nstruggle\nstudent\nstuff\nstumble\nstyle\nsubject\nsubmit\nsubway\nsuccess\nsuch\nsudden\nsuffer\nsugar\nsuggest\nsuit\nsummer\nsun\nsunny\nsunset\nsuper\nsupply\nsupreme\nsure\nsurface\nsurge\nsurprise\nsurround\nsurvey\nsuspect\nsustain\nswallow\nswamp\nswap\nswarm\nswear\nsweet\nswift\nswim\nswing\nswitch\nsword\nsymbol\nsymptom\nsyrup\nsystem\ntable\ntackle\ntag\ntail\ntalent\ntalk\ntank\ntape\ntarget\ntask\ntaste\ntattoo\ntaxi\nteach\nteam\ntell\nten\ntenant\ntennis\ntent\nterm\ntest\ntext\nthank\nthat\ntheme\nthen\ntheory\nthere\nthey\nthing\nthis\nthought\nthree\nthrive\nthrow\nthumb\nthunder\nticket\ntide\ntiger\ntilt\ntimber\ntime\ntiny\ntip\ntired\ntissue\ntitle\ntoast\ntobacco\ntoday\ntoddler\ntoe\ntogether\ntoilet\ntoken\ntomato\ntomorrow\ntone\ntongue\ntonight\ntool\ntooth\ntop\ntopic\ntopple\ntorch\ntornado\ntortoise\ntoss\ntotal\ntourist\ntoward\ntower\ntown\ntoy\ntrack\ntrade\ntraffic\ntragic\ntrain\ntransfer\ntrap\ntrash\ntravel\ntray\ntreat\ntree\ntrend\ntrial\ntribe\ntrick\ntrigger\ntrim\ntrip\ntrophy\ntrouble\ntruck\ntrue\ntruly\ntrumpet\ntrust\ntruth\ntry\ntube\ntuition\ntumble\ntuna\ntunnel\nturkey\nturn\nturtle\ntwelve\ntwenty\ntwice\ntwin\ntwist\ntwo\ntype\ntypical\nugly\numbrella\nunable\nunaware\nuncle\nuncover\nunder\nundo\nunfair\nunfold\nunhappy\nuniform\nunique\nunit\nuniverse\nunknown\nunlock\nuntil\nunusual\nunveil\nupdate\nupgrade\nuphold\nupon\nupper\nupset\nurban\nurge\nusage\nuse\nused\nuseful\nuseless\nusual\nutility\nvacant\nvacuum\nvague\nvalid\nvalley\nvalve\nvan\nvanish\nvapor\nvarious\nvast\nvault\nvehicle\nvelvet\nvendor\nventure\nvenue\nverb\nverify\nversion\nvery\nvessel\nveteran\nviable\nvibrant\nvicious\nvictory\nvideo\nview\nvillage\nvintage\nviolin\nvirtual\nvirus\nvisa\nvisit\nvisual\nvital\nvivid\nvocal\nvoice\nvoid\nvolcano\nvolume\nvote\nvoyage\nwage\nwagon\nwait\nwalk\nwall\nwalnut\nwant\nwarfare\nwarm\nwarrior\nwash\nwasp\nwaste\nwater\nwave\nway\nwealth\nweapon\nwear\nweasel\nweather\nweb\nwedding\nweekend\nweird\nwelcome\nwest\nwet\nwhale\nwhat\nwheat\nwheel\nwhen\nwhere\nwhip\nwhisper\nwide\nwidth\nwife\nwild\nwill\nwin\nwindow\nwine\nwing\nwink\nwinner\nwinter\nwire\nwisdom\nwise\nwish\nwitness\nwolf\nwoman\nwonder\nwood\nwool\nword\nwork\nworld\nworry\nworth\nwrap\nwreck\nwrestle\nwrist\nwrite\nwrong\nyard\nyear\nyellow\nyou\nyoung\nyouth\nzebra\nzero\nzone\nzoo`.split('\\n');\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.c32ToB58 = exports.b58ToC32 = exports.c32addressDecode = exports.c32address = exports.versions = void 0;\nconst checksum_1 = require(\"./checksum\");\nconst base58check = require(\"./base58check\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nexports.versions = {\n    mainnet: {\n        p2pkh: 22,\n        p2sh: 20, // 'M'\n    },\n    testnet: {\n        p2pkh: 26,\n        p2sh: 21, // 'N'\n    },\n};\n// address conversion : bitcoin to stacks\nconst ADDR_BITCOIN_TO_STACKS = {};\nADDR_BITCOIN_TO_STACKS[0] = exports.versions.mainnet.p2pkh;\nADDR_BITCOIN_TO_STACKS[5] = exports.versions.mainnet.p2sh;\nADDR_BITCOIN_TO_STACKS[111] = exports.versions.testnet.p2pkh;\nADDR_BITCOIN_TO_STACKS[196] = exports.versions.testnet.p2sh;\n// address conversion : stacks to bitcoin\nconst ADDR_STACKS_TO_BITCOIN = {};\nADDR_STACKS_TO_BITCOIN[exports.versions.mainnet.p2pkh] = 0;\nADDR_STACKS_TO_BITCOIN[exports.versions.mainnet.p2sh] = 5;\nADDR_STACKS_TO_BITCOIN[exports.versions.testnet.p2pkh] = 111;\nADDR_STACKS_TO_BITCOIN[exports.versions.testnet.p2sh] = 196;\n/**\n * Make a c32check address with the given version and hash160\n * The only difference between a c32check string and c32 address\n * is that the letter 'S' is pre-pended.\n * @param {number} version - the address version number\n * @param {string} hash160hex - the hash160 to encode (must be a hash160)\n * @returns {string} the address\n */\nfunction c32address(version, hash160hex) {\n    if (!hash160hex.match(/^[0-9a-fA-F]{40}$/)) {\n        throw new Error('Invalid argument: not a hash160 hex string');\n    }\n    const c32string = (0, checksum_1.c32checkEncode)(version, hash160hex);\n    return `S${c32string}`;\n}\nexports.c32address = c32address;\n/**\n * Decode a c32 address into its version and hash160\n * @param {string} c32addr - the c32check-encoded address\n * @returns {[number, string]} a tuple with the version and hash160\n */\nfunction c32addressDecode(c32addr) {\n    if (c32addr.length <= 5) {\n        throw new Error('Invalid c32 address: invalid length');\n    }\n    if (c32addr[0] != 'S') {\n        throw new Error('Invalid c32 address: must start with \"S\"');\n    }\n    return (0, checksum_1.c32checkDecode)(c32addr.slice(1));\n}\nexports.c32addressDecode = c32addressDecode;\n/*\n * Convert a base58check address to a c32check address.\n * Try to convert the version number if one is not given.\n * @param {string} b58check - the base58check encoded address\n * @param {number} version - the version number, if not inferred from the address\n * @returns {string} the c32 address with the given version number (or the\n *   semantically-equivalent c32 version number, if not given)\n */\nfunction b58ToC32(b58check, version = -1) {\n    const addrInfo = base58check.decode(b58check);\n    const hash160String = (0, utils_1.bytesToHex)(addrInfo.data);\n    const addrVersion = parseInt((0, utils_1.bytesToHex)(addrInfo.prefix), 16);\n    let stacksVersion;\n    if (version < 0) {\n        stacksVersion = addrVersion;\n        if (ADDR_BITCOIN_TO_STACKS[addrVersion] !== undefined) {\n            stacksVersion = ADDR_BITCOIN_TO_STACKS[addrVersion];\n        }\n    }\n    else {\n        stacksVersion = version;\n    }\n    return c32address(stacksVersion, hash160String);\n}\nexports.b58ToC32 = b58ToC32;\n/*\n * Convert a c32check address to a base58check address.\n * @param {string} c32string - the c32check address\n * @param {number} version - the version number, if not inferred from the address\n * @returns {string} the base58 address with the given version number (or the\n *    semantically-equivalent bitcoin version number, if not given)\n */\nfunction c32ToB58(c32string, version = -1) {\n    const addrInfo = c32addressDecode(c32string);\n    const stacksVersion = addrInfo[0];\n    const hash160String = addrInfo[1];\n    let bitcoinVersion;\n    if (version < 0) {\n        bitcoinVersion = stacksVersion;\n        if (ADDR_STACKS_TO_BITCOIN[stacksVersion] !== undefined) {\n            bitcoinVersion = ADDR_STACKS_TO_BITCOIN[stacksVersion];\n        }\n    }\n    else {\n        bitcoinVersion = version;\n    }\n    let prefix = bitcoinVersion.toString(16);\n    if (prefix.length === 1) {\n        prefix = `0${prefix}`;\n    }\n    return base58check.encode(hash160String, prefix);\n}\nexports.c32ToB58 = c32ToB58;\n","/*\n * From https://github.com/wzbg/base58check\n * @Author: zyc\n * @Date:   2016-09-11 23:36:05\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = void 0;\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst basex = require(\"base-x\");\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nfunction encode(data, prefix = '00') {\n    const dataBytes = typeof data === 'string' ? (0, utils_1.hexToBytes)(data) : data;\n    const prefixBytes = typeof prefix === 'string' ? (0, utils_1.hexToBytes)(prefix) : data;\n    if (!(dataBytes instanceof Uint8Array) || !(prefixBytes instanceof Uint8Array)) {\n        throw new TypeError('Argument must be of type Uint8Array or string');\n    }\n    const checksum = (0, sha256_1.sha256)((0, sha256_1.sha256)(new Uint8Array([...prefixBytes, ...dataBytes])));\n    return basex(ALPHABET).encode([...prefixBytes, ...dataBytes, ...checksum.slice(0, 4)]);\n}\nexports.encode = encode;\nfunction decode(string) {\n    const bytes = basex(ALPHABET).decode(string);\n    const prefixBytes = bytes.slice(0, 1);\n    const dataBytes = bytes.slice(1, -4);\n    // todo: for better performance replace spread with `concatBytes` method\n    const checksum = (0, sha256_1.sha256)((0, sha256_1.sha256)(new Uint8Array([...prefixBytes, ...dataBytes])));\n    bytes.slice(-4).forEach((check, index) => {\n        if (check !== checksum[index]) {\n            throw new Error('Invalid checksum');\n        }\n    });\n    return { prefix: prefixBytes, data: dataBytes };\n}\nexports.decode = decode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.c32checkDecode = exports.c32checkEncode = void 0;\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst encoding_1 = require(\"./encoding\");\n/**\n * Get the c32check checksum of a hex-encoded string\n * @param {string} dataHex - the hex string\n * @returns {string} the c32 checksum, as a bin-encoded string\n */\nfunction c32checksum(dataHex) {\n    const dataHash = (0, sha256_1.sha256)((0, sha256_1.sha256)((0, utils_1.hexToBytes)(dataHex)));\n    const checksum = (0, utils_1.bytesToHex)(dataHash.slice(0, 4));\n    return checksum;\n}\n/**\n * Encode a hex string as a c32check string.  This is a lot like how\n * base58check works in Bitcoin-land, but this algorithm uses the\n * z-base-32 alphabet instead of the base58 alphabet.  The algorithm\n * is as follows:\n * * calculate the c32checksum of version + data\n * * c32encode version + data + c32checksum\n * @param {number} version - the version string (between 0 and 31)\n * @param {string} data - the data to encode\n * @returns {string} the c32check representation\n */\nfunction c32checkEncode(version, data) {\n    if (version < 0 || version >= 32) {\n        throw new Error('Invalid version (must be between 0 and 31)');\n    }\n    if (!data.match(/^[0-9a-fA-F]*$/)) {\n        throw new Error('Invalid data (not a hex string)');\n    }\n    data = data.toLowerCase();\n    if (data.length % 2 !== 0) {\n        data = `0${data}`;\n    }\n    let versionHex = version.toString(16);\n    if (versionHex.length === 1) {\n        versionHex = `0${versionHex}`;\n    }\n    const checksumHex = c32checksum(`${versionHex}${data}`);\n    const c32str = (0, encoding_1.c32encode)(`${data}${checksumHex}`);\n    return `${encoding_1.c32[version]}${c32str}`;\n}\nexports.c32checkEncode = c32checkEncode;\n/*\n * Decode a c32check string back into its version and data payload.  This is\n * a lot like how base58check works in Bitcoin-land, but this algorithm uses\n * the z-base-32 alphabet instead of the base58 alphabet.  The algorithm\n * is as follows:\n * * extract the version, data, and checksum\n * * verify the checksum matches c32checksum(version + data)\n * * return data\n * @param {string} c32data - the c32check-encoded string\n * @returns {array} [version (number), data (string)].  The returned data\n * will be a hex string.  Throws an exception if the checksum does not match.\n */\nfunction c32checkDecode(c32data) {\n    c32data = (0, encoding_1.c32normalize)(c32data);\n    const dataHex = (0, encoding_1.c32decode)(c32data.slice(1));\n    const versionChar = c32data[0];\n    const version = encoding_1.c32.indexOf(versionChar);\n    const checksum = dataHex.slice(-8);\n    let versionHex = version.toString(16);\n    if (versionHex.length === 1) {\n        versionHex = `0${versionHex}`;\n    }\n    if (c32checksum(`${versionHex}${dataHex.substring(0, dataHex.length - 8)}`) !== checksum) {\n        throw new Error('Invalid c32check string: checksum mismatch');\n    }\n    return [version, dataHex.substring(0, dataHex.length - 8)];\n}\nexports.c32checkDecode = c32checkDecode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.c32decode = exports.c32normalize = exports.c32encode = exports.c32 = void 0;\nconst utils_1 = require(\"@noble/hashes/utils\");\nexports.c32 = '0123456789ABCDEFGHJKMNPQRSTVWXYZ';\nconst hex = '0123456789abcdef';\n/**\n * Encode a hex string as a c32 string.  Note that the hex string is assumed\n * to be big-endian (and the resulting c32 string will be as well).\n * @param {string} inputHex - the input to encode\n * @param {number} minLength - the minimum length of the c32 string\n * @returns {string} the c32check-encoded representation of the data, as a string\n */\nfunction c32encode(inputHex, minLength) {\n    // must be hex\n    if (!inputHex.match(/^[0-9a-fA-F]*$/)) {\n        throw new Error('Not a hex-encoded string');\n    }\n    if (inputHex.length % 2 !== 0) {\n        inputHex = `0${inputHex}`;\n    }\n    inputHex = inputHex.toLowerCase();\n    let res = [];\n    let carry = 0;\n    for (let i = inputHex.length - 1; i >= 0; i--) {\n        if (carry < 4) {\n            const currentCode = hex.indexOf(inputHex[i]) >> carry;\n            let nextCode = 0;\n            if (i !== 0) {\n                nextCode = hex.indexOf(inputHex[i - 1]);\n            }\n            // carry = 0, nextBits is 1, carry = 1, nextBits is 2\n            const nextBits = 1 + carry;\n            const nextLowBits = nextCode % (1 << nextBits) << (5 - nextBits);\n            const curC32Digit = exports.c32[currentCode + nextLowBits];\n            carry = nextBits;\n            res.unshift(curC32Digit);\n        }\n        else {\n            carry = 0;\n        }\n    }\n    let C32leadingZeros = 0;\n    for (let i = 0; i < res.length; i++) {\n        if (res[i] !== '0') {\n            break;\n        }\n        else {\n            C32leadingZeros++;\n        }\n    }\n    res = res.slice(C32leadingZeros);\n    const zeroPrefix = new TextDecoder().decode((0, utils_1.hexToBytes)(inputHex)).match(/^\\u0000*/);\n    const numLeadingZeroBytesInHex = zeroPrefix ? zeroPrefix[0].length : 0;\n    for (let i = 0; i < numLeadingZeroBytesInHex; i++) {\n        res.unshift(exports.c32[0]);\n    }\n    if (minLength) {\n        const count = minLength - res.length;\n        for (let i = 0; i < count; i++) {\n            res.unshift(exports.c32[0]);\n        }\n    }\n    return res.join('');\n}\nexports.c32encode = c32encode;\n/*\n * Normalize a c32 string\n * @param {string} c32input - the c32-encoded input string\n * @returns {string} the canonical representation of the c32 input string\n */\nfunction c32normalize(c32input) {\n    // must be upper-case\n    // replace all O's with 0's\n    // replace all I's and L's with 1's\n    return c32input.toUpperCase().replace(/O/g, '0').replace(/L|I/g, '1');\n}\nexports.c32normalize = c32normalize;\n/*\n * Decode a c32 string back into a hex string.  Note that the c32 input\n * string is assumed to be big-endian (and the resulting hex string will\n * be as well).\n * @param {string} c32input - the c32-encoded input to decode\n * @param {number} minLength - the minimum length of the output hex string (in bytes)\n * @returns {string} the hex-encoded representation of the data, as a string\n */\nfunction c32decode(c32input, minLength) {\n    c32input = c32normalize(c32input);\n    // must result in a c32 string\n    if (!c32input.match(`^[${exports.c32}]*$`)) {\n        throw new Error('Not a c32-encoded string');\n    }\n    const zeroPrefix = c32input.match(`^${exports.c32[0]}*`);\n    const numLeadingZeroBytes = zeroPrefix ? zeroPrefix[0].length : 0;\n    let res = [];\n    let carry = 0;\n    let carryBits = 0;\n    for (let i = c32input.length - 1; i >= 0; i--) {\n        if (carryBits === 4) {\n            res.unshift(hex[carry]);\n            carryBits = 0;\n            carry = 0;\n        }\n        const currentCode = exports.c32.indexOf(c32input[i]) << carryBits;\n        const currentValue = currentCode + carry;\n        const currentHexDigit = hex[currentValue % 16];\n        carryBits += 1;\n        carry = currentValue >> 4;\n        if (carry > 1 << carryBits) {\n            throw new Error('Panic error in decoding.');\n        }\n        res.unshift(currentHexDigit);\n    }\n    // one last carry\n    res.unshift(hex[carry]);\n    if (res.length % 2 === 1) {\n        res.unshift('0');\n    }\n    let hexLeadingZeros = 0;\n    for (let i = 0; i < res.length; i++) {\n        if (res[i] !== '0') {\n            break;\n        }\n        else {\n            hexLeadingZeros++;\n        }\n    }\n    res = res.slice(hexLeadingZeros - (hexLeadingZeros % 2));\n    let hexStr = res.join('');\n    for (let i = 0; i < numLeadingZeroBytes; i++) {\n        hexStr = `00${hexStr}`;\n    }\n    if (minLength) {\n        const count = minLength * 2 - hexStr.length;\n        for (let i = 0; i < count; i += 2) {\n            hexStr = `00${hexStr}`;\n        }\n    }\n    return hexStr;\n}\nexports.c32decode = c32decode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.b58ToC32 = exports.c32ToB58 = exports.versions = exports.c32normalize = exports.c32addressDecode = exports.c32address = exports.c32checkDecode = exports.c32checkEncode = exports.c32decode = exports.c32encode = void 0;\nconst encoding_1 = require(\"./encoding\");\nObject.defineProperty(exports, \"c32encode\", { enumerable: true, get: function () { return encoding_1.c32encode; } });\nObject.defineProperty(exports, \"c32decode\", { enumerable: true, get: function () { return encoding_1.c32decode; } });\nObject.defineProperty(exports, \"c32normalize\", { enumerable: true, get: function () { return encoding_1.c32normalize; } });\nconst checksum_1 = require(\"./checksum\");\nObject.defineProperty(exports, \"c32checkEncode\", { enumerable: true, get: function () { return checksum_1.c32checkEncode; } });\nObject.defineProperty(exports, \"c32checkDecode\", { enumerable: true, get: function () { return checksum_1.c32checkDecode; } });\nconst address_1 = require(\"./address\");\nObject.defineProperty(exports, \"c32address\", { enumerable: true, get: function () { return address_1.c32address; } });\nObject.defineProperty(exports, \"c32addressDecode\", { enumerable: true, get: function () { return address_1.c32addressDecode; } });\nObject.defineProperty(exports, \"c32ToB58\", { enumerable: true, get: function () { return address_1.c32ToB58; } });\nObject.defineProperty(exports, \"b58ToC32\", { enumerable: true, get: function () { return address_1.b58ToC32; } });\nObject.defineProperty(exports, \"versions\", { enumerable: true, get: function () { return address_1.versions; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = exports.unescape = exports.escape = exports.pad = void 0;\nconst base64_js_1 = require(\"base64-js\");\nfunction pad(base64) {\n    return `${base64}${'='.repeat(4 - (base64.length % 4 || 4))}`;\n}\nexports.pad = pad;\nfunction escape(base64) {\n    return base64.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nexports.escape = escape;\nfunction unescape(base64Url) {\n    return pad(base64Url).replace(/-/g, '+').replace(/_/g, '/');\n}\nexports.unescape = unescape;\nfunction encode(base64) {\n    return escape((0, base64_js_1.fromByteArray)(new TextEncoder().encode(base64)));\n}\nexports.encode = encode;\nfunction decode(base64Url) {\n    return new TextDecoder().decode((0, base64_js_1.toByteArray)(pad(unescape(base64Url))));\n}\nexports.decode = decode;\n//# sourceMappingURL=base64Url.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cryptoClients = exports.SECP256K1Client = void 0;\nconst secp256k1_1 = require(\"./secp256k1\");\nObject.defineProperty(exports, \"SECP256K1Client\", { enumerable: true, get: function () { return secp256k1_1.SECP256K1Client; } });\nconst cryptoClients = {\n    ES256K: secp256k1_1.SECP256K1Client,\n};\nexports.cryptoClients = cryptoClients;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SECP256K1Client = void 0;\nconst hmac_1 = require(\"@noble/hashes/hmac\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst secp = require(\"@noble/secp256k1\");\nconst ecdsaSigFormatter_1 = require(\"../ecdsaSigFormatter\");\nconst errors_1 = require(\"../errors\");\nconst utils_1 = require(\"@noble/hashes/utils\");\n// required to use noble secp https://github.com/paulmillr/noble-secp256k1\nsecp.utils.hmacSha256Sync = (key, ...msgs) => {\n    const h = hmac_1.hmac.create(sha256_1.sha256, key);\n    msgs.forEach(msg => h.update(msg));\n    return h.digest();\n};\nclass SECP256K1Client {\n    static derivePublicKey(privateKey, compressed = true) {\n        if (privateKey.length === 66) {\n            privateKey = privateKey.slice(0, 64);\n        }\n        if (privateKey.length < 64) {\n            // backward compatibly accept too short private keys\n            privateKey = privateKey.padStart(64, '0');\n        }\n        return (0, utils_1.bytesToHex)(secp.getPublicKey(privateKey, compressed));\n    }\n    static signHash(signingInputHash, privateKey, format = 'jose') {\n        // make sure the required parameters are provided\n        if (!signingInputHash || !privateKey) {\n            throw new errors_1.MissingParametersError('a signing input hash and private key are all required');\n        }\n        const derSignature = secp.signSync(signingInputHash, privateKey.slice(0, 64), {\n            der: true,\n            canonical: false,\n        });\n        if (format === 'der')\n            return (0, utils_1.bytesToHex)(derSignature);\n        if (format === 'jose')\n            return (0, ecdsaSigFormatter_1.derToJose)(derSignature, 'ES256');\n        throw Error('Invalid signature format');\n    }\n    static loadSignature(joseSignature) {\n        // create and return the DER-formatted signature bytes\n        return (0, ecdsaSigFormatter_1.joseToDer)(joseSignature, 'ES256');\n    }\n    static verifyHash(signingInputHash, derSignatureBytes, publicKey) {\n        // make sure the required parameters are provided\n        if (!signingInputHash || !derSignatureBytes || !publicKey) {\n            throw new errors_1.MissingParametersError('a signing input hash, der signature, and public key are all required');\n        }\n        return secp.verify(derSignatureBytes, signingInputHash, publicKey, { strict: false });\n    }\n}\nexports.SECP256K1Client = SECP256K1Client;\nSECP256K1Client.algorithmName = 'ES256K';\n//# sourceMappingURL=secp256k1.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashSha256Async = exports.hashSha256 = void 0;\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nfunction hashSha256(input) {\n    return (0, sha256_1.sha256)(input);\n}\nexports.hashSha256 = hashSha256;\nfunction hashSha256Async(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const isSubtleCryptoAvailable = typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined';\n            if (isSubtleCryptoAvailable) {\n                // Use the W3C Web Crypto API if available (running in a web browser).\n                const bytes = typeof input === 'string' ? new TextEncoder().encode(input) : input;\n                const hash = yield crypto.subtle.digest('SHA-256', bytes);\n                return new Uint8Array(hash);\n            }\n            else {\n                // Otherwise try loading the Node.js `crypto` module (running in Node.js, or an older browser with a polyfill).\n                const nodeCrypto = require('crypto');\n                if (!nodeCrypto.createHash) {\n                    throw new Error('`crypto` module does not contain `createHash`');\n                }\n                return Promise.resolve(nodeCrypto.createHash('sha256').update(input).digest());\n            }\n        }\n        catch (error) {\n            console.log(error);\n            console.log('Crypto lib not found. Neither the global `crypto.subtle` Web Crypto API, ' +\n                'nor the or the Node.js `require(\"crypto\").createHash` module is available. ' +\n                'Falling back to JS implementation.');\n            return Promise.resolve(hashSha256(input));\n        }\n    });\n}\nexports.hashSha256Async = hashSha256Async;\n//# sourceMappingURL=sha256.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeToken = void 0;\nconst base64url = require(\"./base64Url\");\nfunction decodeToken(token) {\n    if (typeof token === 'string') {\n        // decompose the token into parts\n        const tokenParts = token.split('.');\n        const header = JSON.parse(base64url.decode(tokenParts[0]));\n        const payload = JSON.parse(base64url.decode(tokenParts[1]));\n        const signature = tokenParts[2];\n        // return the token object\n        return {\n            header: header,\n            payload: payload,\n            signature: signature,\n        };\n    }\n    else if (typeof token === 'object') {\n        if (typeof token.payload !== 'string') {\n            throw new Error('Expected token payload to be a base64 or json string');\n        }\n        let payload = token.payload;\n        if (token.payload[0] !== '{') {\n            payload = base64url.decode(payload);\n        }\n        const allHeaders = [];\n        token.header.map((headerValue) => {\n            const header = JSON.parse(base64url.decode(headerValue));\n            allHeaders.push(header);\n        });\n        return {\n            header: allHeaders,\n            payload: JSON.parse(payload),\n            signature: token.signature,\n        };\n    }\n}\nexports.decodeToken = decodeToken;\n//# sourceMappingURL=decode.js.map","\"use strict\";\n//  NOTICE\n//  Copyright 2015 D2L Corporation\n//\n//  Licensed under the Apache License, Version 2.0 (the \"License\");\n//  you may not use this file except in compliance with the License.\n//  You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n//  Unless required by applicable law or agreed to in writing, software\n//  distributed under the License is distributed on an \"AS IS\" BASIS,\n//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//  See the License for the specific language governing permissions and\n//  limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.joseToDer = exports.derToJose = void 0;\n// The following code is adapted from https://github.com/Brightspace/node-ecdsa-sig-formatter\nconst base64_js_1 = require(\"base64-js\");\nconst base64Url_1 = require(\"./base64Url\");\nfunction getParamSize(keySize) {\n    return ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);\n}\nconst paramBytesForAlg = {\n    ES256: getParamSize(256),\n    ES384: getParamSize(384),\n    ES512: getParamSize(521),\n};\nfunction getParamBytesForAlg(alg) {\n    const paramBytes = paramBytesForAlg[alg];\n    if (paramBytes) {\n        return paramBytes;\n    }\n    throw new Error(`Unknown algorithm \"${alg}\"`);\n}\nconst MAX_OCTET = 0x80;\nconst CLASS_UNIVERSAL = 0;\nconst PRIMITIVE_BIT = 0x20;\nconst TAG_SEQ = 0x10;\nconst TAG_INT = 0x02;\nconst ENCODED_TAG_SEQ = TAG_SEQ | PRIMITIVE_BIT | (CLASS_UNIVERSAL << 6);\nconst ENCODED_TAG_INT = TAG_INT | (CLASS_UNIVERSAL << 6);\nfunction signatureAsBytes(signature) {\n    if (signature instanceof Uint8Array) {\n        return signature;\n    }\n    else if ('string' === typeof signature) {\n        return (0, base64_js_1.toByteArray)((0, base64Url_1.pad)(signature));\n    }\n    throw new TypeError('ECDSA signature must be a Base64 string or a Uint8Array');\n}\nfunction derToJose(signature, alg) {\n    const signatureBytes = signatureAsBytes(signature);\n    const paramBytes = getParamBytesForAlg(alg);\n    // the DER encoded param should at most be the param size, plus a padding\n    // zero, since due to being a signed integer\n    const maxEncodedParamLength = paramBytes + 1;\n    const inputLength = signatureBytes.length;\n    let offset = 0;\n    if (signatureBytes[offset++] !== ENCODED_TAG_SEQ) {\n        throw new Error('Could not find expected \"seq\"');\n    }\n    let seqLength = signatureBytes[offset++];\n    if (seqLength === (MAX_OCTET | 1)) {\n        seqLength = signatureBytes[offset++];\n    }\n    if (inputLength - offset < seqLength) {\n        throw new Error(`\"seq\" specified length of \"${seqLength}\", only \"${inputLength - offset}\" remaining`);\n    }\n    if (signatureBytes[offset++] !== ENCODED_TAG_INT) {\n        throw new Error('Could not find expected \"int\" for \"r\"');\n    }\n    const rLength = signatureBytes[offset++];\n    if (inputLength - offset - 2 < rLength) {\n        throw new Error(`\"r\" specified length of \"${rLength}\", only \"${inputLength - offset - 2}\" available`);\n    }\n    if (maxEncodedParamLength < rLength) {\n        throw new Error(`\"r\" specified length of \"${rLength}\", max of \"${maxEncodedParamLength}\" is acceptable`);\n    }\n    const rOffset = offset;\n    offset += rLength;\n    if (signatureBytes[offset++] !== ENCODED_TAG_INT) {\n        throw new Error('Could not find expected \"int\" for \"s\"');\n    }\n    const sLength = signatureBytes[offset++];\n    if (inputLength - offset !== sLength) {\n        throw new Error(`\"s\" specified length of \"${sLength}\", expected \"${inputLength - offset}\"`);\n    }\n    if (maxEncodedParamLength < sLength) {\n        throw new Error(`\"s\" specified length of \"${sLength}\", max of \"${maxEncodedParamLength}\" is acceptable`);\n    }\n    const sOffset = offset;\n    offset += sLength;\n    if (offset !== inputLength) {\n        throw new Error(`Expected to consume entire array, but \"${inputLength - offset}\" bytes remain`);\n    }\n    const rPadding = paramBytes - rLength;\n    const sPadding = paramBytes - sLength;\n    const dst = new Uint8Array(rPadding + rLength + sPadding + sLength);\n    for (offset = 0; offset < rPadding; ++offset) {\n        dst[offset] = 0;\n    }\n    dst.set(signatureBytes.subarray(rOffset + Math.max(-rPadding, 0), rOffset + rLength), offset);\n    offset = paramBytes;\n    for (const o = offset; offset < o + sPadding; ++offset) {\n        dst[offset] = 0;\n    }\n    dst.set(signatureBytes.subarray(sOffset + Math.max(-sPadding, 0), sOffset + sLength), offset);\n    return (0, base64Url_1.escape)((0, base64_js_1.fromByteArray)(dst));\n}\nexports.derToJose = derToJose;\nfunction countPadding(buf, start, stop) {\n    let padding = 0;\n    while (start + padding < stop && buf[start + padding] === 0) {\n        ++padding;\n    }\n    const needsSign = buf[start + padding] >= MAX_OCTET;\n    if (needsSign) {\n        --padding;\n    }\n    return padding;\n}\nfunction joseToDer(signature, alg) {\n    signature = signatureAsBytes(signature);\n    const paramBytes = getParamBytesForAlg(alg);\n    const signatureBytes = signature.length;\n    if (signatureBytes !== paramBytes * 2) {\n        throw new TypeError(`\"${alg}\" signatures must be \"${paramBytes * 2}\" bytes, saw \"${signatureBytes}\"`);\n    }\n    const rPadding = countPadding(signature, 0, paramBytes);\n    const sPadding = countPadding(signature, paramBytes, signature.length);\n    const rLength = paramBytes - rPadding;\n    const sLength = paramBytes - sPadding;\n    const rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;\n    const shortLength = rsBytes < MAX_OCTET;\n    const dst = new Uint8Array((shortLength ? 2 : 3) + rsBytes);\n    let offset = 0;\n    dst[offset++] = ENCODED_TAG_SEQ;\n    if (shortLength) {\n        // Bit 8 has value \"0\"\n        // bits 7-1 give the length.\n        dst[offset++] = rsBytes;\n    }\n    else {\n        // Bit 8 of first octet has value \"1\"\n        // bits 7-1 give the number of additional length octets.\n        dst[offset++] = MAX_OCTET | 1;\n        // length, base 256\n        dst[offset++] = rsBytes & 0xff;\n    }\n    dst[offset++] = ENCODED_TAG_INT;\n    dst[offset++] = rLength;\n    if (rPadding < 0) {\n        dst[offset++] = 0;\n        dst.set(signature.subarray(0, paramBytes), offset);\n        offset += paramBytes;\n    }\n    else {\n        dst.set(signature.subarray(rPadding, paramBytes), offset);\n        offset += paramBytes - rPadding;\n    }\n    dst[offset++] = ENCODED_TAG_INT;\n    dst[offset++] = sLength;\n    if (sPadding < 0) {\n        dst[offset++] = 0;\n        dst.set(signature.subarray(paramBytes), offset);\n    }\n    else {\n        dst.set(signature.subarray(paramBytes + sPadding), offset);\n    }\n    return dst;\n}\nexports.joseToDer = joseToDer;\n//# sourceMappingURL=ecdsaSigFormatter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidTokenError = exports.MissingParametersError = void 0;\nclass MissingParametersError extends Error {\n    constructor(message) {\n        super();\n        this.name = 'MissingParametersError';\n        this.message = message || '';\n    }\n}\nexports.MissingParametersError = MissingParametersError;\nclass InvalidTokenError extends Error {\n    constructor(message) {\n        super();\n        this.name = 'InvalidTokenError';\n        this.message = message || '';\n    }\n}\nexports.InvalidTokenError = InvalidTokenError;\n//# sourceMappingURL=errors.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./signer\"), exports);\n__exportStar(require(\"./verifier\"), exports);\n__exportStar(require(\"./decode\"), exports);\n__exportStar(require(\"./errors\"), exports);\n__exportStar(require(\"./cryptoClients\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenSigner = exports.createUnsecuredToken = void 0;\nconst base64url = require(\"./base64Url\");\nconst cryptoClients_1 = require(\"./cryptoClients\");\nconst errors_1 = require(\"./errors\");\nconst sha256_1 = require(\"./cryptoClients/sha256\");\nfunction createSigningInput(payload, header) {\n    const tokenParts = [];\n    // add in the header\n    const encodedHeader = base64url.encode(JSON.stringify(header));\n    tokenParts.push(encodedHeader);\n    // add in the payload\n    const encodedPayload = base64url.encode(JSON.stringify(payload));\n    tokenParts.push(encodedPayload);\n    // prepare the message\n    const signingInput = tokenParts.join('.');\n    // return the signing input\n    return signingInput;\n}\nfunction createUnsecuredToken(payload) {\n    const header = { typ: 'JWT', alg: 'none' };\n    return createSigningInput(payload, header) + '.';\n}\nexports.createUnsecuredToken = createUnsecuredToken;\nclass TokenSigner {\n    constructor(signingAlgorithm, rawPrivateKey) {\n        if (!(signingAlgorithm && rawPrivateKey)) {\n            throw new errors_1.MissingParametersError('a signing algorithm and private key are required');\n        }\n        if (typeof signingAlgorithm !== 'string') {\n            throw new Error('signing algorithm parameter must be a string');\n        }\n        signingAlgorithm = signingAlgorithm.toUpperCase();\n        if (!cryptoClients_1.cryptoClients.hasOwnProperty(signingAlgorithm)) {\n            throw new Error('invalid signing algorithm');\n        }\n        this.tokenType = 'JWT';\n        this.cryptoClient = cryptoClients_1.cryptoClients[signingAlgorithm];\n        this.rawPrivateKey = rawPrivateKey;\n    }\n    header(header = {}) {\n        const defaultHeader = { typ: this.tokenType, alg: this.cryptoClient.algorithmName };\n        return Object.assign({}, defaultHeader, header);\n    }\n    sign(payload, expanded = false, customHeader = {}) {\n        // generate the token header\n        const header = this.header(customHeader);\n        // prepare the message to be signed\n        const signingInput = createSigningInput(payload, header);\n        const signingInputHash = (0, sha256_1.hashSha256)(signingInput);\n        return this.createWithSignedHash(payload, expanded, header, signingInput, signingInputHash);\n    }\n    signAsync(payload, expanded = false, customHeader = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // generate the token header\n            const header = this.header(customHeader);\n            // prepare the message to be signed\n            const signingInput = createSigningInput(payload, header);\n            const signingInputHash = yield (0, sha256_1.hashSha256Async)(signingInput);\n            return this.createWithSignedHash(payload, expanded, header, signingInput, signingInputHash);\n        });\n    }\n    createWithSignedHash(payload, expanded, header, signingInput, signingInputHash) {\n        // sign the message and add in the signature\n        const signature = this.cryptoClient.signHash(signingInputHash, this.rawPrivateKey);\n        if (expanded) {\n            const signedToken = {\n                header: [base64url.encode(JSON.stringify(header))],\n                payload: JSON.stringify(payload),\n                signature: [signature],\n            };\n            return signedToken;\n        }\n        else {\n            return [signingInput, signature].join('.');\n        }\n    }\n}\nexports.TokenSigner = TokenSigner;\n//# sourceMappingURL=signer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenVerifier = void 0;\nconst base64url = require(\"./base64Url\");\nconst cryptoClients_1 = require(\"./cryptoClients\");\nconst errors_1 = require(\"./errors\");\nconst sha256_1 = require(\"./cryptoClients/sha256\");\nclass TokenVerifier {\n    constructor(signingAlgorithm, rawPublicKey) {\n        if (!(signingAlgorithm && rawPublicKey)) {\n            throw new errors_1.MissingParametersError('a signing algorithm and public key are required');\n        }\n        if (typeof signingAlgorithm !== 'string') {\n            throw 'signing algorithm parameter must be a string';\n        }\n        signingAlgorithm = signingAlgorithm.toUpperCase();\n        if (!cryptoClients_1.cryptoClients.hasOwnProperty(signingAlgorithm)) {\n            throw 'invalid signing algorithm';\n        }\n        this.tokenType = 'JWT';\n        this.cryptoClient = cryptoClients_1.cryptoClients[signingAlgorithm];\n        this.rawPublicKey = rawPublicKey;\n    }\n    verify(token) {\n        if (typeof token === 'string') {\n            return this.verifyCompact(token, false);\n        }\n        else if (typeof token === 'object') {\n            return this.verifyExpanded(token, false);\n        }\n        else {\n            return false;\n        }\n    }\n    verifyAsync(token) {\n        if (typeof token === 'string') {\n            return this.verifyCompact(token, true);\n        }\n        else if (typeof token === 'object') {\n            return this.verifyExpanded(token, true);\n        }\n        else {\n            return Promise.resolve(false);\n        }\n    }\n    verifyCompact(token, async) {\n        // decompose the token into parts\n        const tokenParts = token.split('.');\n        // calculate the signing input hash\n        const signingInput = tokenParts[0] + '.' + tokenParts[1];\n        const performVerify = (signingInputHash) => {\n            // extract the signature as a DER array\n            const derSignatureBytes = this.cryptoClient.loadSignature(tokenParts[2]);\n            // verify the signed hash\n            return this.cryptoClient.verifyHash(signingInputHash, derSignatureBytes, this.rawPublicKey);\n        };\n        if (async) {\n            return (0, sha256_1.hashSha256Async)(signingInput).then(signingInputHash => performVerify(signingInputHash));\n        }\n        else {\n            const signingInputHash = (0, sha256_1.hashSha256)(signingInput);\n            return performVerify(signingInputHash);\n        }\n    }\n    verifyExpanded(token, async) {\n        const signingInput = [token['header'].join('.'), base64url.encode(token['payload'])].join('.');\n        let verified = true;\n        const performVerify = (signingInputHash) => {\n            token['signature'].map((signature) => {\n                const derSignatureBytes = this.cryptoClient.loadSignature(signature);\n                const signatureVerified = this.cryptoClient.verifyHash(signingInputHash, derSignatureBytes, this.rawPublicKey);\n                if (!signatureVerified) {\n                    verified = false;\n                }\n            });\n            return verified;\n        };\n        if (async) {\n            return (0, sha256_1.hashSha256Async)(signingInput).then(signingInputHash => performVerify(signingInputHash));\n        }\n        else {\n            const signingInputHash = (0, sha256_1.hashSha256)(signingInput);\n            return performVerify(signingInputHash);\n        }\n    }\n}\nexports.TokenVerifier = TokenVerifier;\n//# sourceMappingURL=verifier.js.map","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./zone-file.cjs.production.min.js')\n} else {\n  module.exports = require('./zone-file.cjs.development.js')\n}\n","\"use strict\";function t(t,r){(null==r||r>t.length)&&(r=t.length);for(var n=0,e=new Array(r);n<r;n++)e[n]=t[n];return e}function r(r,n){var e;if(\"undefined\"==typeof Symbol||null==r[Symbol.iterator]){if(Array.isArray(r)||(e=function(r,n){if(r){if(\"string\"==typeof r)return t(r,void 0);var e=Object.prototype.toString.call(r).slice(8,-1);return\"Object\"===e&&r.constructor&&(e=r.constructor.name),\"Map\"===e||\"Set\"===e?Array.from(r):\"Arguments\"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?t(r,void 0):void 0}}(r))||n&&r&&\"number\"==typeof r.length){e&&(r=e);var a=0;return function(){return a>=r.length?{done:!0}:{done:!1,value:r[a++]}}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}return(e=r[Symbol.iterator]()).next.bind(e)}function n(t,n){return void 0===n&&(n=\"{$origin}\\n{$ttl}\\n\\n; SOA Record\\n{name} {ttl}    IN  SOA {mname}{rname}(\\n{serial} ;serial\\n{refresh} ;refresh\\n{retry} ;retry\\n{expire} ;expire\\n{minimum} ;minimum ttl\\n)\\n\\n; NS Records\\n{ns}\\n\\n; MX Records\\n{mx}\\n\\n; A Records\\n{a}\\n\\n; AAAA Records\\n{aaaa}\\n\\n; CNAME Records\\n{cname}\\n\\n; PTR Records\\n{ptr}\\n\\n; TXT Records\\n{txt}\\n\\n; SRV Records\\n{srv}\\n\\n; SPF Records\\n{spf}\\n\\n; URI Records\\n{uri}\\n\"),n=function(t,r){var n=\"\";return void 0!==t&&(n+=\"$ORIGIN \"+t),r.replace(\"{$origin}\",n)}(t.$origin,n),n=function(t,r){var n=\"\";return void 0!==t&&(n+=\"$TTL \"+t),r.replace(\"{$ttl}\",n)}(t.$ttl,n),n=function(t,r){var n=r;if(void 0!==t)for(var e in t.name=t.name||\"@\",t.ttl=t.ttl||\"\",t)n=n.replace(\"{\"+e+\"}\",t[e]+\"\\t\");return n}(t.soa,n),n=function(t,n){var e=\"\";if(t)for(var a,i=r(t);!(a=i()).done;){var s=a.value;e+=(s.name||\"@\")+\"\\t\",s.ttl&&(e+=s.ttl+\"\\t\"),e+=\"IN\\tNS\\t\"+s.host+\"\\n\"}return n.replace(\"{ns}\",e)}(t.ns,n),n=function(t,n){var e=\"\";if(t)for(var a,i=r(t);!(a=i()).done;){var s=a.value;e+=(s.name||\"@\")+\"\\t\",s.ttl&&(e+=s.ttl+\"\\t\"),e+=\"IN\\tA\\t\"+s.ip+\"\\n\"}return n.replace(\"{a}\",e)}(t.a,n),n=function(t,n){var e=\"\";if(t)for(var a,i=r(t);!(a=i()).done;){var s=a.value;e+=(s.name||\"@\")+\"\\t\",s.ttl&&(e+=s.ttl+\"\\t\"),e+=\"IN\\tAAAA\\t\"+s.ip+\"\\n\"}return n.replace(\"{aaaa}\",e)}(t.aaaa,n),n=function(t,n){var e=\"\";if(t)for(var a,i=r(t);!(a=i()).done;){var s=a.value;e+=(s.name||\"@\")+\"\\t\",s.ttl&&(e+=s.ttl+\"\\t\"),e+=\"IN\\tCNAME\\t\"+s.alias+\"\\n\"}return n.replace(\"{cname}\",e)}(t.cname,n),n=function(t,n){var e=\"\";if(t)for(var a,i=r(t);!(a=i()).done;){var s=a.value;e+=(s.name||\"@\")+\"\\t\",s.ttl&&(e+=s.ttl+\"\\t\"),e+=\"IN\\tMX\\t\"+s.preference+\"\\t\"+s.host+\"\\n\"}return n.replace(\"{mx}\",e)}(t.mx,n),n=function(t,n){var e=\"\";if(t)for(var a,i=r(t);!(a=i()).done;){var s=a.value;e+=(s.name||\"@\")+\"\\t\",s.ttl&&(e+=s.ttl+\"\\t\"),e+=\"IN\\tPTR\\t\"+s.host+\"\\n\"}return n.replace(\"{ptr}\",e)}(t.ptr,n),n=function(t,n){var e=\"\";if(t)for(var a,i=r(t);!(a=i()).done;){var s=a.value;e+=(s.name||\"@\")+\"\\t\",s.ttl&&(e+=s.ttl+\"\\t\"),e+=\"IN\\tTXT\\t\";var o=s.txt;\"string\"==typeof o?e+='\"'+o+'\"':o instanceof Array&&(e+=o.map((function(t){return'\"'+t+'\"'})).join(\" \")),e+=\"\\n\"}return n.replace(\"{txt}\",e)}(t.txt,n),n=function(t,n){var e=\"\";if(t)for(var a,i=r(t);!(a=i()).done;){var s=a.value;e+=(s.name||\"@\")+\"\\t\",s.ttl&&(e+=s.ttl+\"\\t\"),e+=\"IN\\tSRV\\t\"+s.priority+\"\\t\",e+=s.weight+\"\\t\",e+=s.port+\"\\t\",e+=s.target+\"\\n\"}return n.replace(\"{srv}\",e)}(t.srv,n),n=function(t,n){var e=\"\";if(t)for(var a,i=r(t);!(a=i()).done;){var s=a.value;e+=(s.name||\"@\")+\"\\t\",s.ttl&&(e+=s.ttl+\"\\t\"),e+=\"IN\\tSPF\\t\"+s.data+\"\\n\"}return n.replace(\"{spf}\",e)}(t.spf,n),(n=function(t,r){r=(r=r.replace(\"{zone}\",t.$origin||!!t.soa&&t.soa.name||\"\")).replace(\"{datetime}\",(new Date).toISOString());var n=Math.round(Date.now()/1e3);return r.replace(\"{time}\",\"\"+n)}(t,n=function(t,n){var e=\"\";if(t)for(var a,i=r(t);!(a=i()).done;){var s=a.value;e+=(s.name||\"@\")+\"\\t\",s.ttl&&(e+=s.ttl+\"\\t\"),e+=\"IN\\tURI\\t\"+s.priority+\"\\t\",e+=s.weight+\"\\t\",e+='\"'+s.target+'\"\\n'}return n.replace(\"{uri}\",e)}(t.uri,n))).replace(/\\n{2,}/gim,\"\\n\\n\")}function e(t){return function(t){for(var n,e={},g=r(t.split(\"\\n\"));!(n=g()).done;){var h=n.value;if(h&&h.trim()){var d=h.toUpperCase();/\\s+TXT\\s+/.test(d)?(e.txt=e.txt||[],e.txt.push(u(h))):0===d.indexOf(\"$ORIGIN\")?e.$origin=h.split(/\\s+/g)[1]:0===d.indexOf(\"$TTL\")?e.$ttl=parseInt(h.split(/\\s+/g)[1],10):/\\s+SOA\\s+/.test(d)?e.soa=a(h):/\\s+NS\\s+/.test(d)?(e.ns=e.ns||[],e.ns.push(i(h))):/\\s+A\\s+/.test(d)?(e.a=e.a||[],e.a.push(s(h,e.a))):/\\s+AAAA\\s+/.test(d)?(e.aaaa=e.aaaa||[],e.aaaa.push(o(h))):/\\s+CNAME\\s+/.test(d)?(e.cname=e.cname||[],e.cname.push(l(h))):/\\s+MX\\s+/.test(d)?(e.mx=e.mx||[],e.mx.push(p(h))):/\\s+PTR\\s+/.test(d)?(e.ptr=e.ptr||[],e.ptr.push(c(h,e.ptr,e.$origin))):/\\s+SRV\\s+/.test(d)?(e.srv=e.srv||[],e.srv.push(f(h))):/\\s+SPF\\s+/.test(d)?(e.spf=e.spf||[],e.spf.push(m(h))):/\\s+URI\\s+/.test(d)&&(e.uri=e.uri||[],e.uri.push(v(h)))}}return e}(t=function(t){for(var r=[],n=/\\([\\s\\S]*?\\)/gim,e=n.exec(t);null!==e;){var a=e[0].replace(/\\s+/gm,\" \");r.push({match:e,replacement:a}),e=n.exec(t)}for(var i=t.split(\"\"),s=0,o=r;s<o.length;s++){var l=o[s],p=l.match;i.splice(p.index,p[0].length,l.replacement)}return i.join(\"\").replace(/\\(|\\)/gim,\" \")}(t=function(t){return t.replace(/(^|[^\\\\]);.*/g,(function(t,r){return r||\"\"}))}(t)))}function a(t){var r={},n=t.trim().split(/\\s+/g),e=n.length;return r.name=n[0],r.minimum=parseInt(n[e-1],10),r.expire=parseInt(n[e-2],10),r.retry=parseInt(n[e-3],10),r.refresh=parseInt(n[e-4],10),r.serial=parseInt(n[e-5],10),r.rname=n[e-6],r.mname=n[e-7],isNaN(n[1])||(r.ttl=parseInt(n[1],10)),r}function i(t){var r=t.trim().split(/\\s+/g),n={name:r[0],host:r[r.length-1]};return isNaN(r[1])||(n.ttl=parseInt(r[1],10)),n}function s(t,r){var n=t.trim().split(/\\s+/g),e=t.trim().toUpperCase().split(/\\s+/g),a={name:n[0],ip:n[n.length-1]};return 0===e.lastIndexOf(\"A\")&&(a.name=r.length?r[r.length-1].name:\"@\"),isNaN(n[1])||(a.ttl=parseInt(n[1],10)),a}function o(t){var r=t.trim().split(/\\s+/g),n={name:r[0],ip:r[r.length-1]};return isNaN(r[1])||(n.ttl=parseInt(r[1],10)),n}function l(t){var r=t.trim().split(/\\s+/g),n={name:r[0],alias:r[r.length-1]};return isNaN(r[1])||(n.ttl=parseInt(r[1],10)),n}function p(t){var r=t.trim().split(/\\s+/g),n=r.length,e={name:r[0],preference:parseInt(r[n-2],10),host:r[n-1]};return isNaN(r[1])||(e.ttl=parseInt(r[1],10)),e}function u(t){var r=t.trim().match(/[^\\s\"']+|\"[^\"]*\"|'[^']*'/g);if(!r)throw new Error(\"Failure to tokenize TXT record\");var n,e=r.length,a=r.indexOf(\"TXT\");function i(t){return t.indexOf('\"')>-1&&(t=t.split('\"')[1]),t}n=e-a-1>1?[].concat(r.slice(a+1).map(i)):i(r[e-1]);var s={name:r[0],txt:n};return isNaN(r[1])||(s.ttl=parseInt(r[1],10)),s}function c(t,r,n){var e=t.trim().split(/\\s+/g);0===t.trim().toUpperCase().split(/\\s+/g).lastIndexOf(\"PTR\")&&r[r.length-1]&&e.unshift(r[r.length-1].name);var a={name:e[0],fullname:e[0]+\".\"+n,host:e[e.length-1]};return isNaN(e[1])||(a.ttl=parseInt(e[1],10)),a}function f(t){var r=t.trim().split(/\\s+/g),n=r.length,e={name:r[0],target:r[n-1],priority:parseInt(r[n-4],10),weight:parseInt(r[n-3],10),port:parseInt(r[n-2],10)};return isNaN(r[1])||(e.ttl=parseInt(r[1],10)),e}function m(t){for(var r=t.trim().split(/\\s+/g),n={name:r[0],data:\"\"},e=r.length;e-- >4;)n.data=r[e]+\" \"+n.data.trim();return isNaN(r[1])||(n.ttl=parseInt(r[1],10)),n}function v(t){var r=t.trim().split(/\\s+/g),n=r.length,e={name:r[0],target:r[n-1].replace(/\"/g,\"\"),priority:parseInt(r[n-3],10),weight:parseInt(r[n-2],10)};return isNaN(r[1])||(e.ttl=parseInt(r[1],10)),e}exports.ZoneFile=function(){function t(t){this.jsonZoneFile=\"object\"==typeof t?JSON.parse(JSON.stringify(t)):\"string\"==typeof t?e(t):void 0}var r=t.prototype;return r.toJSON=function(){return this.jsonZoneFile},r.toString=function(){return n(this.toJSON())},t}(),exports.makeZoneFile=n,exports.parseZoneFile=e;\n//# sourceMappingURL=zone-file.cjs.production.min.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n","import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++)\n    for (let j of [idxL, idxR])\n        j.push(j[i].map((k) => Rho[k]));\nconst shifts = [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = new Uint32Array([0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]);\nconst Kr = new Uint32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    else if (group === 1)\n        return (x & y) | (~x & z);\n    else if (group === 2)\n        return (x | ~y) ^ z;\n    else if (group === 3)\n        return (x & z) | (y & ~z);\n    else\n        return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = new Uint32Array(16);\nexport class RIPEMD160 extends SHA2 {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            BUF[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = wrapConstructor(() => new RIPEMD160());\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nexport { CURVE };\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => utils.hashToPrivateKey(utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","import { hmac } from '@noble/hashes/hmac';\nimport { ripemd160 } from '@noble/hashes/ripemd160';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { bytes as assertBytes } from '@noble/hashes/_assert';\nimport { bytesToHex, concatBytes, createView, hexToBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport * as secp from '@noble/secp256k1';\nimport { base58check as base58checker } from '@scure/base';\nsecp.utils.hmacSha256Sync = (key, ...msgs) => hmac(sha256, key, secp.utils.concatBytes(...msgs));\nconst base58check = base58checker(sha256);\nfunction bytesToNumber(bytes) {\n    return BigInt(`0x${bytesToHex(bytes)}`);\n}\nfunction numberToBytes(num) {\n    return hexToBytes(num.toString(16).padStart(64, '0'));\n}\nconst MASTER_SECRET = utf8ToBytes('Bitcoin seed');\nconst BITCOIN_VERSIONS = { private: 0x0488ade4, public: 0x0488b21e };\nexport const HARDENED_OFFSET = 0x80000000;\nconst hash160 = (data) => ripemd160(sha256(data));\nconst fromU32 = (data) => createView(data).getUint32(0, false);\nconst toU32 = (n) => {\n    if (!Number.isSafeInteger(n) || n < 0 || n > 2 ** 32 - 1) {\n        throw new Error(`Invalid number=${n}. Should be from 0 to 2 ** 32 - 1`);\n    }\n    const buf = new Uint8Array(4);\n    createView(buf).setUint32(0, n, false);\n    return buf;\n};\nexport class HDKey {\n    constructor(opt) {\n        this.depth = 0;\n        this.index = 0;\n        this.chainCode = null;\n        this.parentFingerprint = 0;\n        if (!opt || typeof opt !== 'object') {\n            throw new Error('HDKey.constructor must not be called directly');\n        }\n        this.versions = opt.versions || BITCOIN_VERSIONS;\n        this.depth = opt.depth || 0;\n        this.chainCode = opt.chainCode;\n        this.index = opt.index || 0;\n        this.parentFingerprint = opt.parentFingerprint || 0;\n        if (!this.depth) {\n            if (this.parentFingerprint || this.index) {\n                throw new Error('HDKey: zero depth with non-zero index/parent fingerprint');\n            }\n        }\n        if (opt.publicKey && opt.privateKey) {\n            throw new Error('HDKey: publicKey and privateKey at same time.');\n        }\n        if (opt.privateKey) {\n            if (!secp.utils.isValidPrivateKey(opt.privateKey)) {\n                throw new Error('Invalid private key');\n            }\n            this.privKey =\n                typeof opt.privateKey === 'bigint' ? opt.privateKey : bytesToNumber(opt.privateKey);\n            this.privKeyBytes = numberToBytes(this.privKey);\n            this.pubKey = secp.getPublicKey(opt.privateKey, true);\n        }\n        else if (opt.publicKey) {\n            this.pubKey = secp.Point.fromHex(opt.publicKey).toRawBytes(true);\n        }\n        else {\n            throw new Error('HDKey: no public or private key provided');\n        }\n        this.pubHash = hash160(this.pubKey);\n    }\n    get fingerprint() {\n        if (!this.pubHash) {\n            throw new Error('No publicKey set!');\n        }\n        return fromU32(this.pubHash);\n    }\n    get identifier() {\n        return this.pubHash;\n    }\n    get pubKeyHash() {\n        return this.pubHash;\n    }\n    get privateKey() {\n        return this.privKeyBytes || null;\n    }\n    get publicKey() {\n        return this.pubKey || null;\n    }\n    get privateExtendedKey() {\n        const priv = this.privateKey;\n        if (!priv) {\n            throw new Error('No private key');\n        }\n        return base58check.encode(this.serialize(this.versions.private, concatBytes(new Uint8Array([0]), priv)));\n    }\n    get publicExtendedKey() {\n        if (!this.pubKey) {\n            throw new Error('No public key');\n        }\n        return base58check.encode(this.serialize(this.versions.public, this.pubKey));\n    }\n    static fromMasterSeed(seed, versions = BITCOIN_VERSIONS) {\n        assertBytes(seed);\n        if (8 * seed.length < 128 || 8 * seed.length > 512) {\n            throw new Error(`HDKey: wrong seed length=${seed.length}. Should be between 128 and 512 bits; 256 bits is advised)`);\n        }\n        const I = hmac(sha512, MASTER_SECRET, seed);\n        return new HDKey({\n            versions,\n            chainCode: I.slice(32),\n            privateKey: I.slice(0, 32),\n        });\n    }\n    static fromExtendedKey(base58key, versions = BITCOIN_VERSIONS) {\n        const keyBuffer = base58check.decode(base58key);\n        const keyView = createView(keyBuffer);\n        const version = keyView.getUint32(0, false);\n        const opt = {\n            versions,\n            depth: keyBuffer[4],\n            parentFingerprint: keyView.getUint32(5, false),\n            index: keyView.getUint32(9, false),\n            chainCode: keyBuffer.slice(13, 45),\n        };\n        const key = keyBuffer.slice(45);\n        const isPriv = key[0] === 0;\n        if (version !== versions[isPriv ? 'private' : 'public']) {\n            throw new Error('Version mismatch');\n        }\n        if (isPriv) {\n            return new HDKey({ ...opt, privateKey: key.slice(1) });\n        }\n        else {\n            return new HDKey({ ...opt, publicKey: key });\n        }\n    }\n    static fromJSON(json) {\n        return HDKey.fromExtendedKey(json.xpriv);\n    }\n    derive(path) {\n        if (!/^[mM]'?/.test(path)) {\n            throw new Error('Path must start with \"m\" or \"M\"');\n        }\n        if (/^[mM]'?$/.test(path)) {\n            return this;\n        }\n        const parts = path.replace(/^[mM]'?\\//, '').split('/');\n        let child = this;\n        for (const c of parts) {\n            const m = /^(\\d+)('?)$/.exec(c);\n            if (!m || m.length !== 3) {\n                throw new Error(`Invalid child index: ${c}`);\n            }\n            let idx = +m[1];\n            if (!Number.isSafeInteger(idx) || idx >= HARDENED_OFFSET) {\n                throw new Error('Invalid index');\n            }\n            if (m[2] === \"'\") {\n                idx += HARDENED_OFFSET;\n            }\n            child = child.deriveChild(idx);\n        }\n        return child;\n    }\n    deriveChild(index) {\n        if (!this.pubKey || !this.chainCode) {\n            throw new Error('No publicKey or chainCode set');\n        }\n        let data = toU32(index);\n        if (index >= HARDENED_OFFSET) {\n            const priv = this.privateKey;\n            if (!priv) {\n                throw new Error('Could not derive hardened child key');\n            }\n            data = concatBytes(new Uint8Array([0]), priv, data);\n        }\n        else {\n            data = concatBytes(this.pubKey, data);\n        }\n        const I = hmac(sha512, this.chainCode, data);\n        const childTweak = bytesToNumber(I.slice(0, 32));\n        const chainCode = I.slice(32);\n        if (!secp.utils.isValidPrivateKey(childTweak)) {\n            throw new Error('Tweak bigger than curve order');\n        }\n        const opt = {\n            versions: this.versions,\n            chainCode,\n            depth: this.depth + 1,\n            parentFingerprint: this.fingerprint,\n            index,\n        };\n        try {\n            if (this.privateKey) {\n                const added = secp.utils.mod(this.privKey + childTweak, secp.CURVE.n);\n                if (!secp.utils.isValidPrivateKey(added)) {\n                    throw new Error('The tweak was out of range or the resulted private key is invalid');\n                }\n                opt.privateKey = added;\n            }\n            else {\n                const added = secp.Point.fromHex(this.pubKey).add(secp.Point.fromPrivateKey(childTweak));\n                if (added.equals(secp.Point.ZERO)) {\n                    throw new Error('The tweak was equal to negative P, which made the result key invalid');\n                }\n                opt.publicKey = added.toRawBytes(true);\n            }\n            return new HDKey(opt);\n        }\n        catch (err) {\n            return this.deriveChild(index + 1);\n        }\n    }\n    sign(hash) {\n        if (!this.privateKey) {\n            throw new Error('No privateKey set!');\n        }\n        assertBytes(hash, 32);\n        return secp.signSync(hash, this.privKey, {\n            canonical: true,\n            der: false,\n        });\n    }\n    verify(hash, signature) {\n        assertBytes(hash, 32);\n        assertBytes(signature, 64);\n        if (!this.publicKey) {\n            throw new Error('No publicKey set!');\n        }\n        let sig;\n        try {\n            sig = secp.Signature.fromCompact(signature);\n        }\n        catch (error) {\n            return false;\n        }\n        return secp.verify(sig, hash, this.publicKey);\n    }\n    wipePrivateData() {\n        this.privKey = undefined;\n        if (this.privKeyBytes) {\n            this.privKeyBytes.fill(0);\n            this.privKeyBytes = undefined;\n        }\n        return this;\n    }\n    toJSON() {\n        return {\n            xpriv: this.privateExtendedKey,\n            xpub: this.publicExtendedKey,\n        };\n    }\n    serialize(version, key) {\n        if (!this.chainCode) {\n            throw new Error('No chainCode set');\n        }\n        assertBytes(key, 33);\n        return concatBytes(toU32(version), new Uint8Array([this.depth]), toU32(this.parentFingerprint), toU32(this.index), this.chainCode, key);\n    }\n}\n","import { Logger } from './logger';\nexport const BLOCKSTACK_HANDLER = 'blockstack';\nexport function nextYear() {\n    return new Date(new Date().setFullYear(new Date().getFullYear() + 1));\n}\nexport function nextMonth() {\n    return new Date(new Date().setMonth(new Date().getMonth() + 1));\n}\nexport function nextHour() {\n    return new Date(new Date().setHours(new Date().getHours() + 1));\n}\nexport function megabytesToBytes(megabytes) {\n    if (!Number.isFinite(megabytes)) {\n        return 0;\n    }\n    return Math.floor(megabytes * 1024 * 1024);\n}\nexport function getAesCbcOutputLength(inputByteLength) {\n    const cipherTextLength = (Math.floor(inputByteLength / 16) + 1) * 16;\n    return cipherTextLength;\n}\nexport function getBase64OutputLength(inputByteLength) {\n    const encodedLength = Math.ceil(inputByteLength / 3) * 4;\n    return encodedLength;\n}\nexport function updateQueryStringParameter(uri, key, value) {\n    const re = new RegExp(`([?&])${key}=.*?(&|$)`, 'i');\n    const separator = uri.indexOf('?') !== -1 ? '&' : '?';\n    if (uri.match(re)) {\n        return uri.replace(re, `$1${key}=${value}$2`);\n    }\n    else {\n        return `${uri}${separator}${key}=${value}`;\n    }\n}\nexport function isLaterVersion(v1, v2) {\n    if (v1 === undefined || v1 === '') {\n        v1 = '0.0.0';\n    }\n    if (v2 === undefined || v1 === '') {\n        v2 = '0.0.0';\n    }\n    const v1tuple = v1.split('.').map(x => parseInt(x, 10));\n    const v2tuple = v2.split('.').map(x => parseInt(x, 10));\n    for (let index = 0; index < v2.length; index++) {\n        if (index >= v1.length) {\n            v2tuple.push(0);\n        }\n        if (v1tuple[index] < v2tuple[index]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function makeUUID4() {\n    let d = new Date().getTime();\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n        d += performance.now();\n    }\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        const r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n}\nexport function isSameOriginAbsoluteUrl(uri1, uri2) {\n    try {\n        const parsedUri1 = new URL(uri1);\n        const parsedUri2 = new URL(uri2);\n        const port1 = parseInt(parsedUri1.port || '0', 10) | 0 || (parsedUri1.protocol === 'https:' ? 443 : 80);\n        const port2 = parseInt(parsedUri2.port || '0', 10) | 0 || (parsedUri2.protocol === 'https:' ? 443 : 80);\n        const match = {\n            scheme: parsedUri1.protocol === parsedUri2.protocol,\n            hostname: parsedUri1.hostname === parsedUri2.hostname,\n            port: port1 === port2,\n            absolute: (uri1.includes('http://') || uri1.includes('https://')) &&\n                (uri2.includes('http://') || uri2.includes('https://')),\n        };\n        return match.scheme && match.hostname && match.port && match.absolute;\n    }\n    catch (error) {\n        console.log(error);\n        console.log('Parsing error in same URL origin check');\n        return false;\n    }\n}\nexport function getGlobalScope() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('Unexpected runtime environment - no supported global scope (`window`, `self`, `global`) available');\n}\nfunction getAPIUsageErrorMessage(scopeObject, apiName, usageDesc) {\n    if (usageDesc) {\n        return `Use of '${usageDesc}' requires \\`${apiName}\\` which is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n    }\n    else {\n        return `\\`${apiName}\\` is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n    }\n}\nexport function getGlobalObject(name, { throwIfUnavailable, usageDesc, returnEmptyObject } = {}) {\n    let globalScope = undefined;\n    try {\n        globalScope = getGlobalScope();\n        if (globalScope) {\n            const obj = globalScope[name];\n            if (obj) {\n                return obj;\n            }\n        }\n    }\n    catch (error) {\n        Logger.error(`Error getting object '${name}' from global scope '${globalScope}': ${error}`);\n    }\n    if (throwIfUnavailable) {\n        const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n        Logger.error(errMsg);\n        throw new Error(errMsg);\n    }\n    if (returnEmptyObject) {\n        return {};\n    }\n    return undefined;\n}\nexport function getGlobalObjects(names, { throwIfUnavailable, usageDesc, returnEmptyObject } = {}) {\n    let globalScope;\n    try {\n        globalScope = getGlobalScope();\n    }\n    catch (error) {\n        Logger.error(`Error getting global scope: ${error}`);\n        if (throwIfUnavailable) {\n            const errMsg = getAPIUsageErrorMessage(globalScope, names[0].toString(), usageDesc);\n            Logger.error(errMsg);\n            throw errMsg;\n        }\n        else if (returnEmptyObject) {\n            globalScope = {};\n        }\n    }\n    const result = {};\n    for (let i = 0; i < names.length; i++) {\n        const name = names[i];\n        try {\n            if (globalScope) {\n                const obj = globalScope[name];\n                if (obj) {\n                    result[name] = obj;\n                }\n                else if (throwIfUnavailable) {\n                    const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n                    Logger.error(errMsg);\n                    throw new Error(errMsg);\n                }\n                else if (returnEmptyObject) {\n                    result[name] = {};\n                }\n            }\n        }\n        catch (error) {\n            if (throwIfUnavailable) {\n                const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n                Logger.error(errMsg);\n                throw new Error(errMsg);\n            }\n        }\n    }\n    return result;\n}\nexport function intToBytes(value, byteLength) {\n    return bigIntToBytes(intToBigInt(value), byteLength);\n}\nexport function intToBigInt(value) {\n    if (typeof value === 'bigint')\n        return value;\n    if (typeof value === 'string')\n        return BigInt(value);\n    if (typeof value === 'number') {\n        if (!Number.isInteger(value)) {\n            throw new RangeError(`Invalid value. Values of type 'number' must be an integer.`);\n        }\n        if (value > Number.MAX_SAFE_INTEGER) {\n            throw new RangeError(`Invalid value. Values of type 'number' must be less than or equal to ${Number.MAX_SAFE_INTEGER}. For larger values, try using a BigInt instead.`);\n        }\n        return BigInt(value);\n    }\n    if (isInstance(value, Uint8Array))\n        return BigInt(`0x${bytesToHex(value)}`);\n    throw new TypeError(`intToBigInt: Invalid value type. Must be a number, bigint, BigInt-compatible string, or Uint8Array.`);\n}\nexport function with0x(value) {\n    return /^0x/i.test(value)\n        ? value\n        : `0x${value}`;\n}\nexport function without0x(value) {\n    return /^0x/i.test(value)\n        ? value.slice(2)\n        : value;\n}\nexport function hexToBigInt(hex) {\n    if (typeof hex !== 'string')\n        throw new TypeError(`hexToBigInt: expected string, got ${typeof hex}`);\n    return BigInt(`0x${hex}`);\n}\nexport function intToHex(integer, byteLength = 8) {\n    const value = typeof integer === 'bigint' ? integer : intToBigInt(integer);\n    return value.toString(16).padStart(byteLength * 2, '0');\n}\nexport function hexToInt(hex) {\n    return parseInt(hex, 16);\n}\nexport function bigIntToBytes(value, length = 16) {\n    const hex = intToHex(value, length);\n    return hexToBytes(hex);\n}\nexport function toTwos(value, width) {\n    if (value < -(BigInt(1) << (width - BigInt(1))) ||\n        (BigInt(1) << (width - BigInt(1))) - BigInt(1) < value) {\n        throw `Unable to represent integer in width: ${width}`;\n    }\n    if (value >= BigInt(0)) {\n        return BigInt(value);\n    }\n    return value + (BigInt(1) << width);\n}\nfunction nthBit(value, n) {\n    return value & (BigInt(1) << n);\n}\nexport function bytesToTwosBigInt(bytes) {\n    return fromTwos(BigInt(`0x${bytesToHex(bytes)}`), BigInt(bytes.byteLength * 8));\n}\nexport function fromTwos(value, width) {\n    if (nthBit(value, width - BigInt(1))) {\n        return value - (BigInt(1) << width);\n    }\n    return value;\n}\nconst hexes = Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\nexport function bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (const u of uint8a) {\n        hex += hexes[u];\n    }\n    return hex;\n}\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError(`hexToBytes: expected string, got ${typeof hex}`);\n    }\n    hex = without0x(hex);\n    hex = hex.length % 2 ? `0${hex}` : hex;\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexport function utf8ToBytes(str) {\n    return new TextEncoder().encode(str);\n}\nexport function bytesToUtf8(arr) {\n    return new TextDecoder().decode(arr);\n}\nexport function asciiToBytes(str) {\n    const byteArray = [];\n    for (let i = 0; i < str.length; i++) {\n        byteArray.push(str.charCodeAt(i) & 0xff);\n    }\n    return new Uint8Array(byteArray);\n}\nexport function bytesToAscii(arr) {\n    return String.fromCharCode.apply(null, arr);\n}\nfunction isNotOctet(octet) {\n    return !Number.isInteger(octet) || octet < 0 || octet > 255;\n}\nexport function octetsToBytes(numbers) {\n    if (numbers.some(isNotOctet))\n        throw new Error('Some values are invalid bytes.');\n    return new Uint8Array(numbers);\n}\nexport function concatBytes(...arrays) {\n    if (!arrays.every(a => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexport function concatArray(elements) {\n    return concatBytes(...elements.map(e => {\n        if (typeof e === 'number')\n            return octetsToBytes([e]);\n        if (e instanceof Array)\n            return octetsToBytes(e);\n        return e;\n    }));\n}\nexport function isInstance(object, clazz) {\n    return object instanceof clazz || object?.constructor?.name?.toLowerCase() === clazz.name;\n}\nexport function validateHash256(hex) {\n    hex = without0x(hex);\n    if (hex.length !== 64)\n        return false;\n    return /^[0-9a-fA-F]+$/.test(hex);\n}\n//# sourceMappingURL=utils.js.map","export function isSubtleCryptoAvailable() {\n    return typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined';\n}\nexport function isNodeCryptoAvailable(withFeature) {\n    try {\n        const resolvedResult = require.resolve('crypto');\n        if (!resolvedResult) {\n            return false;\n        }\n        const cryptoModule = require('crypto');\n        if (!cryptoModule) {\n            return false;\n        }\n        if (withFeature) {\n            const features = withFeature(cryptoModule);\n            return features;\n        }\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const NO_CRYPTO_LIB = 'Crypto lib not found. Either the WebCrypto \"crypto.subtle\" or Node.js \"crypto\" module must be available.';\nexport async function getCryptoLib() {\n    if (isSubtleCryptoAvailable()) {\n        return {\n            lib: crypto.subtle,\n            name: 'subtleCrypto',\n        };\n    }\n    else {\n        try {\n            const nodeCrypto = require('crypto');\n            return {\n                lib: nodeCrypto,\n                name: 'nodeCrypto',\n            };\n        }\n        catch (error) {\n            throw new Error(NO_CRYPTO_LIB);\n        }\n    }\n}\n//# sourceMappingURL=cryptoUtils.js.map","import { concatBytes } from '@stacks/common';\nimport { getCryptoLib } from './cryptoUtils';\nexport class NodeCryptoAesCipher {\n    constructor(createCipher, createDecipher) {\n        this.createCipher = createCipher;\n        this.createDecipher = createDecipher;\n    }\n    async encrypt(algorithm, key, iv, data) {\n        if (algorithm !== 'aes-128-cbc' && algorithm !== 'aes-256-cbc') {\n            throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n        }\n        const cipher = this.createCipher(algorithm, key, iv);\n        const result = new Uint8Array(concatBytes(cipher.update(data), cipher.final()));\n        return Promise.resolve(result);\n    }\n    async decrypt(algorithm, key, iv, data) {\n        if (algorithm !== 'aes-128-cbc' && algorithm !== 'aes-256-cbc') {\n            throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n        }\n        const cipher = this.createDecipher(algorithm, key, iv);\n        const result = new Uint8Array(concatBytes(cipher.update(data), cipher.final()));\n        return Promise.resolve(result);\n    }\n}\nexport class WebCryptoAesCipher {\n    constructor(subtleCrypto) {\n        this.subtleCrypto = subtleCrypto;\n    }\n    async encrypt(algorithm, key, iv, data) {\n        let algo;\n        let length;\n        if (algorithm === 'aes-128-cbc') {\n            algo = 'AES-CBC';\n            length = 128;\n        }\n        else if (algorithm === 'aes-256-cbc') {\n            algo = 'AES-CBC';\n            length = 256;\n        }\n        else {\n            throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n        }\n        const cryptoKey = await this.subtleCrypto.importKey('raw', key, { name: algo, length }, false, [\n            'encrypt',\n        ]);\n        const result = await this.subtleCrypto.encrypt({ name: algo, iv }, cryptoKey, data);\n        return new Uint8Array(result);\n    }\n    async decrypt(algorithm, key, iv, data) {\n        let algo;\n        let length;\n        if (algorithm === 'aes-128-cbc') {\n            algo = 'AES-CBC';\n            length = 128;\n        }\n        else if (algorithm === 'aes-256-cbc') {\n            algo = 'AES-CBC';\n            length = 256;\n        }\n        else {\n            throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n        }\n        const cryptoKey = await this.subtleCrypto.importKey('raw', key, { name: algo, length }, false, [\n            'decrypt',\n        ]);\n        const result = await this.subtleCrypto.decrypt({ name: algo, iv }, cryptoKey, data);\n        return new Uint8Array(result);\n    }\n}\nexport async function createCipher() {\n    const cryptoLib = await getCryptoLib();\n    if (cryptoLib.name === 'subtleCrypto') {\n        return new WebCryptoAesCipher(cryptoLib.lib);\n    }\n    return new NodeCryptoAesCipher(cryptoLib.lib.createCipheriv, cryptoLib.lib.createDecipheriv);\n}\n//# sourceMappingURL=aesCipher.js.map","import { utils } from '@noble/secp256k1';\nexport const randomBytes = (bytesLength = 32) => utils.randomBytes(bytesLength);\n//# sourceMappingURL=cryptoRandom.js.map","export const ERROR_CODES = {\n    MISSING_PARAMETER: 'missing_parameter',\n    REMOTE_SERVICE_ERROR: 'remote_service_error',\n    INVALID_STATE: 'invalid_state',\n    NO_SESSION_DATA: 'no_session_data',\n    DOES_NOT_EXIST: 'does_not_exist',\n    FAILED_DECRYPTION_ERROR: 'failed_decryption_error',\n    INVALID_DID_ERROR: 'invalid_did_error',\n    NOT_ENOUGH_FUNDS_ERROR: 'not_enough_error',\n    INVALID_AMOUNT_ERROR: 'invalid_amount_error',\n    LOGIN_FAILED_ERROR: 'login_failed',\n    SIGNATURE_VERIFICATION_ERROR: 'signature_verification_failure',\n    CONFLICT_ERROR: 'conflict_error',\n    NOT_ENOUGH_PROOF_ERROR: 'not_enough_proof_error',\n    BAD_PATH_ERROR: 'bad_path_error',\n    VALIDATION_ERROR: 'validation_error',\n    PAYLOAD_TOO_LARGE_ERROR: 'payload_too_large_error',\n    PRECONDITION_FAILED_ERROR: 'precondition_failed_error',\n    UNKNOWN: 'unknown',\n};\nObject.freeze(ERROR_CODES);\nexport class BlockstackError extends Error {\n    constructor(error) {\n        super();\n        let message = error.message;\n        let bugDetails = `Error Code: ${error.code}`;\n        let stack = this.stack;\n        if (!stack) {\n            try {\n                throw new Error();\n            }\n            catch (e) {\n                stack = e.stack;\n            }\n        }\n        else {\n            bugDetails += `Stack Trace:\\n${stack}`;\n        }\n        message += `\\nIf you believe this exception is caused by a bug in stacks.js,\n      please file a bug report: https://github.com/blockstack/stacks.js/issues\\n\\n${bugDetails}`;\n        this.message = message;\n        this.code = error.code;\n        this.parameter = error.parameter ? error.parameter : undefined;\n    }\n    toString() {\n        return `${super.toString()}\n    code: ${this.code} param: ${this.parameter ? this.parameter : 'n/a'}`;\n    }\n}\nexport class InvalidParameterError extends BlockstackError {\n    constructor(parameter, message = '') {\n        super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n        this.name = 'MissingParametersError';\n    }\n}\nexport class MissingParameterError extends BlockstackError {\n    constructor(parameter, message = '') {\n        super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n        this.name = 'MissingParametersError';\n    }\n}\nexport class RemoteServiceError extends BlockstackError {\n    constructor(response, message = '') {\n        super({ code: ERROR_CODES.REMOTE_SERVICE_ERROR, message });\n        this.response = response;\n    }\n}\nexport class InvalidDIDError extends BlockstackError {\n    constructor(message = '') {\n        super({ code: ERROR_CODES.INVALID_DID_ERROR, message });\n        this.name = 'InvalidDIDError';\n    }\n}\nexport class NotEnoughFundsError extends BlockstackError {\n    constructor(leftToFund) {\n        const message = `Not enough UTXOs to fund. Left to fund: ${leftToFund}`;\n        super({ code: ERROR_CODES.NOT_ENOUGH_FUNDS_ERROR, message });\n        this.leftToFund = leftToFund;\n        this.name = 'NotEnoughFundsError';\n        this.message = message;\n    }\n}\nexport class InvalidAmountError extends BlockstackError {\n    constructor(fees, specifiedAmount) {\n        const message = `Not enough coin to fund fees transaction fees. Fees would be ${fees},` +\n            ` specified spend is  ${specifiedAmount}`;\n        super({ code: ERROR_CODES.INVALID_AMOUNT_ERROR, message });\n        this.specifiedAmount = specifiedAmount;\n        this.fees = fees;\n        this.name = 'InvalidAmountError';\n        this.message = message;\n    }\n}\nexport class LoginFailedError extends BlockstackError {\n    constructor(reason) {\n        const message = `Failed to login: ${reason}`;\n        super({ code: ERROR_CODES.LOGIN_FAILED_ERROR, message });\n        this.message = message;\n        this.name = 'LoginFailedError';\n    }\n}\nexport class SignatureVerificationError extends BlockstackError {\n    constructor(reason) {\n        const message = `Failed to verify signature: ${reason}`;\n        super({ code: ERROR_CODES.SIGNATURE_VERIFICATION_ERROR, message });\n        this.message = message;\n        this.name = 'SignatureVerificationError';\n    }\n}\nexport class FailedDecryptionError extends BlockstackError {\n    constructor(message = 'Unable to decrypt cipher object.') {\n        super({ code: ERROR_CODES.FAILED_DECRYPTION_ERROR, message });\n        this.message = message;\n        this.name = 'FailedDecryptionError';\n    }\n}\nexport class InvalidStateError extends BlockstackError {\n    constructor(message) {\n        super({ code: ERROR_CODES.INVALID_STATE, message });\n        this.message = message;\n        this.name = 'InvalidStateError';\n    }\n}\nexport class NoSessionDataError extends BlockstackError {\n    constructor(message) {\n        super({ code: ERROR_CODES.INVALID_STATE, message });\n        this.message = message;\n        this.name = 'NoSessionDataError';\n    }\n}\nexport class GaiaHubError extends BlockstackError {\n    constructor(error, response) {\n        super(error);\n        if (response) {\n            this.hubError = {\n                statusCode: response.status,\n                statusText: response.statusText,\n            };\n            if (typeof response.body === 'string') {\n                this.hubError.message = response.body;\n            }\n            else if (typeof response.body === 'object') {\n                Object.assign(this.hubError, response.body);\n            }\n        }\n    }\n}\nexport class DoesNotExist extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.DOES_NOT_EXIST }, response);\n        this.name = 'DoesNotExist';\n    }\n}\nexport class ConflictError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.CONFLICT_ERROR }, response);\n        this.name = 'ConflictError';\n    }\n}\nexport class NotEnoughProofError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.NOT_ENOUGH_PROOF_ERROR }, response);\n        this.name = 'NotEnoughProofError';\n    }\n}\nexport class BadPathError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.BAD_PATH_ERROR }, response);\n        this.name = 'BadPathError';\n    }\n}\nexport class ValidationError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.VALIDATION_ERROR }, response);\n        this.name = 'ValidationError';\n    }\n}\nexport class PayloadTooLargeError extends GaiaHubError {\n    constructor(message, response, maxUploadByteSize) {\n        super({ message, code: ERROR_CODES.PAYLOAD_TOO_LARGE_ERROR }, response);\n        this.name = 'PayloadTooLargeError';\n        this.maxUploadByteSize = maxUploadByteSize;\n    }\n}\nexport class PreconditionFailedError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.PRECONDITION_FAILED_ERROR }, response);\n        this.name = 'PreconditionFailedError';\n    }\n}\n//# sourceMappingURL=errors.js.map","import { hexToBytes } from './utils';\nexport function privateKeyToBytes(privateKey) {\n    const privateKeyBuffer = typeof privateKey === 'string' ? hexToBytes(privateKey) : privateKey;\n    if (privateKeyBuffer.length != 32 && privateKeyBuffer.length != 33) {\n        throw new Error(`Improperly formatted private-key. Private-key byte length should be 32 or 33. Length provided: ${privateKeyBuffer.length}`);\n    }\n    if (privateKeyBuffer.length == 33 && privateKeyBuffer[32] !== 1) {\n        throw new Error('Improperly formatted private-key. 33 bytes indicate compressed key, but the last byte must be == 01');\n    }\n    return privateKeyBuffer;\n}\n//# sourceMappingURL=keys.js.map","import { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { getCryptoLib } from './cryptoUtils';\nexport class NodeCryptoSha2Hash {\n    constructor(createHash) {\n        this.createHash = createHash;\n    }\n    async digest(data, algorithm = 'sha256') {\n        try {\n            const result = this.createHash(algorithm).update(data).digest();\n            return Promise.resolve(result);\n        }\n        catch (error) {\n            console.log(error);\n            console.log(`Error performing ${algorithm} digest with Node.js 'crypto.createHash', falling back to JS implementation.`);\n            return Promise.resolve(algorithm === 'sha256' ? hashSha256Sync(data) : hashSha512Sync(data));\n        }\n    }\n}\nexport class WebCryptoSha2Hash {\n    constructor(subtleCrypto) {\n        this.subtleCrypto = subtleCrypto;\n    }\n    async digest(data, algorithm = 'sha256') {\n        let algo;\n        if (algorithm === 'sha256') {\n            algo = 'SHA-256';\n        }\n        else if (algorithm === 'sha512') {\n            algo = 'SHA-512';\n        }\n        else {\n            throw new Error(`Unsupported hash algorithm ${algorithm}`);\n        }\n        try {\n            const hash = await this.subtleCrypto.digest(algo, data);\n            return new Uint8Array(hash);\n        }\n        catch (error) {\n            console.log(error);\n            console.log(`Error performing ${algorithm} digest with WebCrypto, falling back to JS implementation.`);\n            return Promise.resolve(algorithm === 'sha256' ? hashSha256Sync(data) : hashSha512Sync(data));\n        }\n    }\n}\nexport async function createSha2Hash() {\n    const cryptoLib = await getCryptoLib();\n    if (cryptoLib.name === 'subtleCrypto') {\n        return new WebCryptoSha2Hash(cryptoLib.lib);\n    }\n    else {\n        return new NodeCryptoSha2Hash(cryptoLib.lib.createHash);\n    }\n}\nexport function hashSha256Sync(data) {\n    return sha256(data);\n}\nexport function hashSha512Sync(data) {\n    return sha512(data);\n}\n//# sourceMappingURL=sha2Hash.js.map","import { hmac } from '@noble/hashes/hmac';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { getPublicKey as nobleGetPublicKey, signSync, utils } from '@noble/secp256k1';\nimport { bytesToHex, concatBytes, hexToBytes, privateKeyToBytes, readUInt8, } from '@stacks/common';\nimport base58 from 'bs58';\nimport { hashRipemd160 } from './hashRipemd160';\nimport { hashSha256Sync } from './sha2Hash';\nconst BITCOIN_PUBKEYHASH = 0x00;\nutils.hmacSha256Sync = (key, ...msgs) => {\n    const h = hmac.create(sha256, key);\n    msgs.forEach(msg => h.update(msg));\n    return h.digest();\n};\nexport function makeECPrivateKey() {\n    return bytesToHex(utils.randomPrivateKey());\n}\nexport function base58CheckDecode(btcAddress) {\n    const bytes = base58.decode(btcAddress);\n    const payload = bytes.slice(0, -4);\n    const checksum = bytes.slice(-4);\n    const newChecksum = sha256(sha256(payload));\n    if ((checksum[0] ^ newChecksum[0]) |\n        (checksum[1] ^ newChecksum[1]) |\n        (checksum[2] ^ newChecksum[2]) |\n        (checksum[3] ^ newChecksum[3])) {\n        throw new Error('Invalid checksum');\n    }\n    if (payload.length !== 21)\n        throw new TypeError('Invalid address length');\n    const version = readUInt8(payload, 0);\n    const hash = payload.slice(1);\n    return { version, hash };\n}\nexport function base58Encode(hash) {\n    const checksum = sha256(sha256(hash));\n    return base58.encode(concatBytes(hash, checksum).slice(0, hash.length + 4));\n}\nexport function base58CheckEncode(version, hash) {\n    return base58Encode(concatBytes(new Uint8Array([version]), hash.slice(0, 20)));\n}\nexport function publicKeyToBtcAddress(publicKey, version = BITCOIN_PUBKEYHASH) {\n    const publicKeyBytes = typeof publicKey === 'string' ? hexToBytes(publicKey) : publicKey;\n    const publicKeyHash160 = hashRipemd160(hashSha256Sync(publicKeyBytes));\n    return base58CheckEncode(version, publicKeyHash160);\n}\nexport function getPublicKeyFromPrivate(privateKey) {\n    const privateKeyBytes = privateKeyToBytes(privateKey);\n    return bytesToHex(nobleGetPublicKey(privateKeyBytes.slice(0, 32), true));\n}\nexport function ecSign(messageHash, privateKey) {\n    return signSync(messageHash, privateKeyToBytes(privateKey).slice(0, 32), {\n        der: false,\n    });\n}\n//# sourceMappingURL=keys.js.map","import { ripemd160 } from '@noble/hashes/ripemd160';\nexport function hashRipemd160(data) {\n    return ripemd160(data);\n}\n//# sourceMappingURL=hashRipemd160.js.map","import { hmac } from '@noble/hashes/hmac';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { getPublicKey, getSharedSecret, Point, Signature, signSync, utils, verify, } from '@noble/secp256k1';\nimport { bigIntToBytes, bytesToHex, bytesToUtf8, concatBytes, FailedDecryptionError, hexToBigInt, hexToBytes, parseRecoverableSignatureVrs, signatureRsvToVrs, utf8ToBytes, } from '@stacks/common';\nimport { fromByteArray, toByteArray } from 'base64-js';\nimport { createCipher } from './aesCipher';\nimport { getPublicKeyFromPrivate } from './keys';\nimport { encodeMessage, hashMessage } from './messageSignature';\nimport { hashSha256Sync, hashSha512Sync } from './sha2Hash';\nimport { getAesCbcOutputLength, getBase64OutputLength } from './utils';\nutils.hmacSha256Sync = (key, ...msgs) => {\n    const h = hmac.create(sha256, key);\n    msgs.forEach(msg => h.update(msg));\n    return h.digest();\n};\nexport var InvalidPublicKeyReason;\n(function (InvalidPublicKeyReason) {\n    InvalidPublicKeyReason[\"InvalidFormat\"] = \"InvalidFormat\";\n    InvalidPublicKeyReason[\"IsNotPoint\"] = \"IsNotPoint\";\n})(InvalidPublicKeyReason || (InvalidPublicKeyReason = {}));\nexport async function aes256CbcEncrypt(iv, key, plaintext) {\n    const cipher = await createCipher();\n    return await cipher.encrypt('aes-256-cbc', key, iv, plaintext);\n}\nasync function aes256CbcDecrypt(iv, key, ciphertext) {\n    const cipher = await createCipher();\n    return await cipher.decrypt('aes-256-cbc', key, iv, ciphertext);\n}\nexport function hmacSha256(key, content) {\n    return hmac(sha256, key, content);\n}\nfunction equalsConstTime(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    let res = 0;\n    for (let i = 0; i < a.length; i++) {\n        res |= a[i] ^ b[i];\n    }\n    return res === 0;\n}\nfunction sharedSecretToKeys(sharedSecret) {\n    const hashedSecret = hashSha512Sync(sharedSecret);\n    return {\n        encryptionKey: hashedSecret.slice(0, 32),\n        hmacKey: hashedSecret.slice(32),\n    };\n}\nfunction allHexChars(maybe) {\n    return maybe.match(/^[0-9a-f]+$/i) !== null;\n}\nfunction isValidPublicKey(pub) {\n    const invalidFormat = {\n        result: false,\n        reason_data: 'Invalid public key format',\n        reason: InvalidPublicKeyReason.InvalidFormat,\n    };\n    const invalidPoint = {\n        result: false,\n        reason_data: 'Public key is not a point',\n        reason: InvalidPublicKeyReason.IsNotPoint,\n    };\n    if (pub.length !== 66 && pub.length !== 130)\n        return invalidFormat;\n    const firstByte = pub.slice(0, 2);\n    if (pub.length === 130 && firstByte !== '04')\n        return invalidFormat;\n    if (pub.length === 66 && firstByte !== '02' && firstByte !== '03')\n        return invalidFormat;\n    if (!allHexChars(pub))\n        return invalidFormat;\n    try {\n        const point = Point.fromHex(pub);\n        point.assertValidity();\n        return {\n            result: true,\n            reason_data: null,\n            reason: null,\n        };\n    }\n    catch (e) {\n        return invalidPoint;\n    }\n}\nexport function getHexFromBN(bnInput) {\n    const hexOut = bnInput.toString(16);\n    if (hexOut.length === 64) {\n        return hexOut;\n    }\n    else if (hexOut.length < 64) {\n        const padding = '0'.repeat(64 - hexOut.length);\n        return `${padding}${hexOut}`;\n    }\n    else {\n        throw new Error('Generated a > 32-byte bigint for encryption. Failing.');\n    }\n}\nexport function getBytesFromBN(bnInput) {\n    const result = bigIntToBytes(bnInput, 32);\n    if (result.byteLength !== 32) {\n        throw new Error('Failed to generate a 32-byte Uint8Array');\n    }\n    return result;\n}\nexport function getCipherObjectWrapper(opts) {\n    const shell = {\n        iv: '',\n        ephemeralPK: '',\n        mac: '',\n        cipherText: '',\n        wasString: !!opts.wasString,\n    };\n    if (opts.cipherTextEncoding === 'base64') {\n        shell.cipherTextEncoding = 'base64';\n    }\n    const ivLength = 32;\n    const ephemeralPKLength = 66;\n    const macLength = 64;\n    return {\n        payloadValuesLength: ivLength + ephemeralPKLength + macLength,\n        payloadShell: JSON.stringify(shell),\n    };\n}\nexport function getSignedCipherObjectWrapper(payloadShell) {\n    const shell = {\n        signature: '',\n        publicKey: '',\n        cipherText: payloadShell,\n    };\n    const signatureLength = 144;\n    const publicKeyLength = 66;\n    return {\n        signedPayloadValuesLength: signatureLength + publicKeyLength,\n        signedPayloadShell: JSON.stringify(shell),\n    };\n}\nexport function eciesGetJsonStringLength(opts) {\n    const { payloadShell, payloadValuesLength } = getCipherObjectWrapper(opts);\n    const cipherTextLength = getAesCbcOutputLength(opts.contentLength);\n    let encodedCipherTextLength;\n    if (!opts.cipherTextEncoding || opts.cipherTextEncoding === 'hex') {\n        encodedCipherTextLength = cipherTextLength * 2;\n    }\n    else if (opts.cipherTextEncoding === 'base64') {\n        encodedCipherTextLength = getBase64OutputLength(cipherTextLength);\n    }\n    else {\n        throw new Error(`Unexpected cipherTextEncoding \"${opts.cipherTextEncoding}\"`);\n    }\n    if (!opts.sign) {\n        return payloadShell.length + payloadValuesLength + encodedCipherTextLength;\n    }\n    else {\n        const { signedPayloadShell, signedPayloadValuesLength } = getSignedCipherObjectWrapper(payloadShell);\n        return (signedPayloadShell.length +\n            signedPayloadValuesLength +\n            payloadValuesLength +\n            encodedCipherTextLength);\n    }\n}\nexport async function encryptECIES(publicKey, content, wasString, cipherTextEncoding) {\n    const validity = isValidPublicKey(publicKey);\n    if (!validity.result) {\n        throw validity;\n    }\n    const ephemeralPrivateKey = utils.randomPrivateKey();\n    const ephemeralPublicKey = getPublicKey(ephemeralPrivateKey, true);\n    let sharedSecret = getSharedSecret(ephemeralPrivateKey, publicKey, true);\n    sharedSecret = sharedSecret.slice(1);\n    const sharedKeys = sharedSecretToKeys(sharedSecret);\n    const initializationVector = utils.randomBytes(16);\n    const cipherText = await aes256CbcEncrypt(initializationVector, sharedKeys.encryptionKey, content);\n    const macData = concatBytes(initializationVector, ephemeralPublicKey, cipherText);\n    const mac = hmacSha256(sharedKeys.hmacKey, macData);\n    let cipherTextString;\n    if (!cipherTextEncoding || cipherTextEncoding === 'hex') {\n        cipherTextString = bytesToHex(cipherText);\n    }\n    else if (cipherTextEncoding === 'base64') {\n        cipherTextString = fromByteArray(cipherText);\n    }\n    else {\n        throw new Error(`Unexpected cipherTextEncoding \"${cipherTextEncoding}\"`);\n    }\n    const result = {\n        iv: bytesToHex(initializationVector),\n        ephemeralPK: bytesToHex(ephemeralPublicKey),\n        cipherText: cipherTextString,\n        mac: bytesToHex(mac),\n        wasString,\n    };\n    if (cipherTextEncoding && cipherTextEncoding !== 'hex') {\n        result.cipherTextEncoding = cipherTextEncoding;\n    }\n    return result;\n}\nexport async function decryptECIES(privateKey, cipherObject) {\n    if (!cipherObject.ephemeralPK) {\n        throw new FailedDecryptionError('Unable to get public key from cipher object. ' +\n            'You might be trying to decrypt an unencrypted object.');\n    }\n    const ephemeralPK = cipherObject.ephemeralPK;\n    let sharedSecret = getSharedSecret(privateKey, ephemeralPK, true);\n    sharedSecret = sharedSecret.slice(1);\n    const sharedKeys = sharedSecretToKeys(sharedSecret);\n    const ivBytes = hexToBytes(cipherObject.iv);\n    let cipherTextBytes;\n    if (!cipherObject.cipherTextEncoding || cipherObject.cipherTextEncoding === 'hex') {\n        cipherTextBytes = hexToBytes(cipherObject.cipherText);\n    }\n    else if (cipherObject.cipherTextEncoding === 'base64') {\n        cipherTextBytes = toByteArray(cipherObject.cipherText);\n    }\n    else {\n        throw new Error(`Unexpected cipherTextEncoding \"${cipherObject.cipherText}\"`);\n    }\n    const macData = concatBytes(ivBytes, hexToBytes(ephemeralPK), cipherTextBytes);\n    const actualMac = hmacSha256(sharedKeys.hmacKey, macData);\n    const expectedMac = hexToBytes(cipherObject.mac);\n    if (!equalsConstTime(expectedMac, actualMac)) {\n        throw new FailedDecryptionError('Decryption failed: failure in MAC check');\n    }\n    const plainText = await aes256CbcDecrypt(ivBytes, sharedKeys.encryptionKey, cipherTextBytes);\n    if (cipherObject.wasString) {\n        return bytesToUtf8(plainText);\n    }\n    return plainText;\n}\nexport function signECDSA(privateKey, content) {\n    const contentBytes = typeof content === 'string' ? utf8ToBytes(content) : content;\n    const publicKey = getPublicKeyFromPrivate(privateKey);\n    const contentHash = hashSha256Sync(contentBytes);\n    const signature = signSync(contentHash, privateKey);\n    return {\n        signature: bytesToHex(signature),\n        publicKey,\n    };\n}\nexport function verifyECDSA(content, publicKey, signature) {\n    const contentBytes = typeof content === 'string' ? utf8ToBytes(content) : content;\n    const contentHash = hashSha256Sync(contentBytes);\n    return verify(signature, contentHash, publicKey, { strict: false });\n}\nexport function verifyMessageSignature({ signature, message, publicKey, }) {\n    const { r, s } = parseRecoverableSignatureVrs(signature);\n    const sig = new Signature(hexToBigInt(r), hexToBigInt(s));\n    const hashedMsg = typeof message === 'string' ? hashMessage(message) : message;\n    const verificationResult = verify(sig, hashedMsg, publicKey, { strict: false });\n    if (verificationResult || typeof message !== 'string')\n        return verificationResult;\n    const LEGACY_PREFIX = '\\x18Stacks Message Signing:\\n';\n    const legacyHash = sha256(encodeMessage(message, LEGACY_PREFIX));\n    return verify(sig, legacyHash, publicKey, { strict: false });\n}\nexport function verifyMessageSignatureRsv({ signature, message, publicKey, }) {\n    return verifyMessageSignature({\n        signature: signatureRsvToVrs(signature),\n        message,\n        publicKey,\n    });\n}\n//# sourceMappingURL=ec.js.map","export function equals(a, b) {\n    if (a.byteLength !== b.byteLength)\n        return false;\n    for (let i = 0; i < a.byteLength; i++) {\n        if (a[i] !== b[i])\n            return false;\n    }\n    return true;\n}\nexport function alloc(length, value) {\n    const a = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n        a[i] = value;\n    }\n    return a;\n}\nexport function readUInt16BE(source, offset) {\n    return ((source[offset + 0] << 8) | source[offset + 1]) >>> 0;\n}\nexport function writeUInt16BE(destination, value, offset = 0) {\n    destination[offset + 0] = value >>> 8;\n    destination[offset + 1] = value >>> 0;\n    return destination;\n}\nexport function readUInt8(source, offset) {\n    return source[offset];\n}\nexport function writeUInt8(destination, value, offset = 0) {\n    destination[offset] = value;\n    return destination;\n}\nexport function readUInt16LE(source, offset) {\n    return ((source[offset + 0] << 0) >>> 0) | ((source[offset + 1] << 8) >>> 0);\n}\nexport function writeUInt16LE(destination, value, offset = 0) {\n    destination[offset + 0] = value & 255;\n    value >>>= 8;\n    destination[offset + 1] = value & 255;\n    return destination;\n}\nexport function readUInt32BE(source, offset) {\n    return (source[offset] * 2 ** 24 +\n        source[offset + 1] * 2 ** 16 +\n        source[offset + 2] * 2 ** 8 +\n        source[offset + 3]);\n}\nexport function writeUInt32BE(destination, value, offset = 0) {\n    destination[offset + 3] = value;\n    value >>>= 8;\n    destination[offset + 2] = value;\n    value >>>= 8;\n    destination[offset + 1] = value;\n    value >>>= 8;\n    destination[offset] = value;\n    return destination;\n}\nexport function readUInt32LE(source, offset) {\n    return (((source[offset + 0] << 0) >>> 0) |\n        ((source[offset + 1] << 8) >>> 0) |\n        ((source[offset + 2] << 16) >>> 0) |\n        ((source[offset + 3] << 24) >>> 0));\n}\nexport function writeUInt32LE(destination, value, offset = 0) {\n    destination[offset + 0] = value & 255;\n    value >>>= 8;\n    destination[offset + 1] = value & 255;\n    value >>>= 8;\n    destination[offset + 2] = value & 255;\n    value >>>= 8;\n    destination[offset + 3] = value & 255;\n    return destination;\n}\n//# sourceMappingURL=buffer.js.map","import { utf8ToBytes, writeUInt32BE } from '@stacks/common';\nimport { getCryptoLib } from './cryptoUtils';\nexport class NodeCryptoPbkdf2 {\n    constructor(nodePbkdf2) {\n        this.nodePbkdf2 = nodePbkdf2;\n    }\n    async derive(password, salt, iterations, keyLength, digest) {\n        if (digest !== 'sha512' && digest !== 'sha256') {\n            throw new Error(`Unsupported digest \"${digest}\" for Pbkdf2`);\n        }\n        return new Promise((resolve, reject) => {\n            this.nodePbkdf2(password, salt, iterations, keyLength, digest, (error, result) => {\n                if (error) {\n                    reject(error);\n                }\n                resolve(result);\n            });\n        });\n    }\n}\nexport class WebCryptoPbkdf2 {\n    constructor(subtleCrypto) {\n        this.subtleCrypto = subtleCrypto;\n    }\n    async derive(password, salt, iterations, keyLength, digest) {\n        let algo;\n        if (digest === 'sha256') {\n            algo = 'SHA-256';\n        }\n        else if (digest === 'sha512') {\n            algo = 'SHA-512';\n        }\n        else {\n            throw new Error(`Unsupported Pbkdf2 digest algorithm \"${digest}\"`);\n        }\n        const passwordBytes = utf8ToBytes(password);\n        try {\n            const key = await this.subtleCrypto.importKey('raw', passwordBytes, 'PBKDF2', false, [\n                'deriveBits',\n            ]);\n            const result = await this.subtleCrypto.deriveBits({\n                name: 'PBKDF2',\n                salt,\n                iterations,\n                hash: { name: algo },\n            }, key, keyLength * 8);\n            return new Uint8Array(result);\n        }\n        catch (error) {\n            const partialWebCrypto = new WebCryptoPartialPbkdf2(this.subtleCrypto);\n            return partialWebCrypto.derive(password, salt, iterations, keyLength, digest);\n        }\n    }\n}\nexport class WebCryptoPartialPbkdf2 {\n    constructor(subtleCrypto) {\n        this.subtleCrypto = subtleCrypto;\n    }\n    async derive(password, salt, iterations, keyLength, digest) {\n        if (digest !== 'sha512' && digest !== 'sha256') {\n            throw new Error(`Unsupported digest \"${digest}\" for Pbkdf2`);\n        }\n        const passwordBytes = utf8ToBytes(password);\n        const algo = digest === 'sha512' ? 'SHA-512' : 'SHA-256';\n        const algoOpts = { name: 'HMAC', hash: algo };\n        const hmacDigest = (key, data) => this.subtleCrypto\n            .importKey('raw', key, algoOpts, true, ['sign'])\n            .then(cryptoKey => this.subtleCrypto.sign(algoOpts, cryptoKey, data))\n            .then(result => new Uint8Array(result));\n        const DK = new Uint8Array(keyLength);\n        const saltLength = salt.length;\n        const block1 = new Uint8Array(saltLength + 4);\n        block1.set(salt);\n        let destPos = 0;\n        const hLen = digest === 'sha512' ? 64 : 32;\n        const l = Math.ceil(keyLength / hLen);\n        for (let i = 1; i <= l; i++) {\n            writeUInt32BE(block1, i, saltLength);\n            const T = await hmacDigest(passwordBytes, block1);\n            let U = T;\n            for (let j = 1; j < iterations; j++) {\n                U = await hmacDigest(passwordBytes, U);\n                for (let k = 0; k < hLen; k++) {\n                    T[k] ^= U[k];\n                }\n            }\n            DK.set(T.subarray(0, DK.byteLength - destPos), destPos);\n            destPos += hLen;\n        }\n        return DK;\n    }\n}\nexport async function createPbkdf2() {\n    const cryptoLib = await getCryptoLib();\n    if (cryptoLib.name === 'subtleCrypto') {\n        return new WebCryptoPbkdf2(cryptoLib.lib);\n    }\n    return new NodeCryptoPbkdf2(cryptoLib.lib.pbkdf2);\n}\n//# sourceMappingURL=pbkdf2.js.map","export const HIRO_MAINNET_URL = 'https://api.mainnet.hiro.so';\nexport const HIRO_TESTNET_URL = 'https://api.testnet.hiro.so';\nexport const DEVNET_URL = 'http://localhost:3999';\nexport const GAIA_URL = 'https://hub.blockstack.org';\nexport const PRIVATE_KEY_BYTES_COMPRESSED = 33;\nexport const PRIVATE_KEY_BYTES_UNCOMPRESSED = 32;\n//# sourceMappingURL=constants.js.map","const defaultFetchOpts = {\n    referrerPolicy: 'origin',\n    headers: {\n        'x-hiro-product': 'stacksjs',\n    },\n};\nexport const getFetchOptions = () => {\n    return defaultFetchOpts;\n};\nexport const setFetchOptions = (ops) => {\n    return Object.assign(defaultFetchOpts, ops);\n};\nexport async function fetchWrapper(input, init) {\n    const fetchOpts = {};\n    Object.assign(fetchOpts, defaultFetchOpts, init);\n    const fetchResult = await fetch(input, fetchOpts);\n    return fetchResult;\n}\nexport function hostMatches(host, pattern) {\n    if (typeof pattern === 'string')\n        return pattern === host;\n    return pattern.exec(host);\n}\nexport function createApiKeyMiddleware({ apiKey, host = /(.*)api(.*)(\\.stacks\\.co|\\.hiro\\.so)$/i, httpHeader = 'x-api-key', }) {\n    return {\n        pre: context => {\n            const reqUrl = new URL(context.url);\n            if (!hostMatches(reqUrl.host, host))\n                return;\n            const headers = context.init.headers instanceof Headers\n                ? context.init.headers\n                : (context.init.headers = new Headers(context.init.headers));\n            headers.set(httpHeader, apiKey);\n        },\n    };\n}\nfunction argsForCreateFetchFn(args) {\n    let fetchLib = fetchWrapper;\n    let middlewares = [];\n    if (args.length > 0 && typeof args[0] === 'function') {\n        fetchLib = args.shift();\n    }\n    if (args.length > 0) {\n        middlewares = args;\n    }\n    return { fetchLib, middlewares };\n}\nexport function createFetchFn(...args) {\n    const { fetchLib, middlewares } = argsForCreateFetchFn(args);\n    const fetchFn = async (url, init) => {\n        let fetchParams = { url, init: init ?? {} };\n        for (const middleware of middlewares) {\n            if (typeof middleware.pre === 'function') {\n                const result = await Promise.resolve(middleware.pre({\n                    fetch: fetchLib,\n                    ...fetchParams,\n                }));\n                fetchParams = result ?? fetchParams;\n            }\n        }\n        let response = await fetchLib(fetchParams.url, fetchParams.init);\n        for (const middleware of middlewares) {\n            if (typeof middleware.post === 'function') {\n                const result = await Promise.resolve(middleware.post({\n                    fetch: fetchLib,\n                    url: fetchParams.url,\n                    init: fetchParams.init,\n                    response: response?.clone() ?? response,\n                }));\n                response = result ?? response;\n            }\n        }\n        return response;\n    };\n    return fetchFn;\n}\n//# sourceMappingURL=fetch.js.map","export var ChainId;\n(function (ChainId) {\n    ChainId[ChainId[\"Mainnet\"] = 1] = \"Mainnet\";\n    ChainId[ChainId[\"Testnet\"] = 2147483648] = \"Testnet\";\n})(ChainId || (ChainId = {}));\nexport var PeerNetworkId;\n(function (PeerNetworkId) {\n    PeerNetworkId[PeerNetworkId[\"Mainnet\"] = 385875968] = \"Mainnet\";\n    PeerNetworkId[PeerNetworkId[\"Testnet\"] = 4278190080] = \"Testnet\";\n})(PeerNetworkId || (PeerNetworkId = {}));\nexport const DEFAULT_CHAIN_ID = ChainId.Mainnet;\nexport var TransactionVersion;\n(function (TransactionVersion) {\n    TransactionVersion[TransactionVersion[\"Mainnet\"] = 0] = \"Mainnet\";\n    TransactionVersion[TransactionVersion[\"Testnet\"] = 128] = \"Testnet\";\n})(TransactionVersion || (TransactionVersion = {}));\nexport var AddressVersion;\n(function (AddressVersion) {\n    AddressVersion[AddressVersion[\"MainnetSingleSig\"] = 22] = \"MainnetSingleSig\";\n    AddressVersion[AddressVersion[\"MainnetMultiSig\"] = 20] = \"MainnetMultiSig\";\n    AddressVersion[AddressVersion[\"TestnetSingleSig\"] = 26] = \"TestnetSingleSig\";\n    AddressVersion[AddressVersion[\"TestnetMultiSig\"] = 21] = \"TestnetMultiSig\";\n})(AddressVersion || (AddressVersion = {}));\nexport const DEFAULT_TRANSACTION_VERSION = TransactionVersion.Mainnet;\nexport function whenTransactionVersion(transactionVersion) {\n    return (map) => map[transactionVersion];\n}\n//# sourceMappingURL=constants.js.map","import { DEVNET_URL, HIRO_MAINNET_URL, HIRO_TESTNET_URL, createFetchFn, createApiKeyMiddleware, } from '@stacks/common';\nimport { AddressVersion, ChainId, PeerNetworkId, TransactionVersion } from './constants';\nexport const STACKS_MAINNET = {\n    chainId: ChainId.Mainnet,\n    transactionVersion: TransactionVersion.Mainnet,\n    peerNetworkId: PeerNetworkId.Mainnet,\n    magicBytes: 'X2',\n    bootAddress: 'SP000000000000000000002Q6VF78',\n    addressVersion: {\n        singleSig: AddressVersion.MainnetSingleSig,\n        multiSig: AddressVersion.MainnetMultiSig,\n    },\n    client: { baseUrl: HIRO_MAINNET_URL },\n};\nexport const STACKS_TESTNET = {\n    chainId: ChainId.Testnet,\n    transactionVersion: TransactionVersion.Testnet,\n    peerNetworkId: PeerNetworkId.Testnet,\n    magicBytes: 'T2',\n    bootAddress: 'ST000000000000000000002AMW42H',\n    addressVersion: {\n        singleSig: AddressVersion.TestnetSingleSig,\n        multiSig: AddressVersion.TestnetMultiSig,\n    },\n    client: { baseUrl: HIRO_TESTNET_URL },\n};\nexport const STACKS_DEVNET = {\n    ...STACKS_TESTNET,\n    addressVersion: { ...STACKS_TESTNET.addressVersion },\n    magicBytes: 'id',\n    client: { baseUrl: DEVNET_URL },\n};\nexport const STACKS_MOCKNET = {\n    ...STACKS_DEVNET,\n    addressVersion: { ...STACKS_DEVNET.addressVersion },\n    client: { ...STACKS_DEVNET.client },\n};\nexport const StacksNetworks = ['mainnet', 'testnet', 'devnet', 'mocknet'];\nexport function networkFromName(name) {\n    switch (name) {\n        case 'mainnet':\n            return STACKS_MAINNET;\n        case 'testnet':\n            return STACKS_TESTNET;\n        case 'devnet':\n            return STACKS_DEVNET;\n        case 'mocknet':\n            return STACKS_MOCKNET;\n        default:\n            throw new Error(`Unknown network name: ${name}`);\n    }\n}\nexport function networkFrom(network) {\n    if (typeof network === 'string')\n        return networkFromName(network);\n    return network;\n}\nexport function defaultUrlFromNetwork(network) {\n    if (!network)\n        return HIRO_MAINNET_URL;\n    network = networkFrom(network);\n    return !network || network.transactionVersion === TransactionVersion.Mainnet\n        ? HIRO_MAINNET_URL\n        : network.magicBytes === 'id'\n            ? DEVNET_URL\n            : HIRO_TESTNET_URL;\n}\nexport function clientFromNetwork(network) {\n    if (network.client.fetch)\n        return network.client;\n    return {\n        ...network.client,\n        fetch: createFetchFn(),\n    };\n}\nexport function createNetwork(arg1, arg2) {\n    const baseNetwork = networkFrom(typeof arg1 === 'object' && 'network' in arg1 ? arg1.network : arg1);\n    const newNetwork = {\n        ...baseNetwork,\n        addressVersion: { ...baseNetwork.addressVersion },\n        client: { ...baseNetwork.client },\n    };\n    if (typeof arg1 === 'object' && 'network' in arg1) {\n        if (arg1.client) {\n            newNetwork.client.baseUrl = arg1.client.baseUrl ?? newNetwork.client.baseUrl;\n            newNetwork.client.fetch = arg1.client.fetch ?? newNetwork.client.fetch;\n        }\n        if (typeof arg1.apiKey === 'string') {\n            const middleware = createApiKeyMiddleware(arg1);\n            newNetwork.client.fetch = newNetwork.client.fetch\n                ? createFetchFn(newNetwork.client.fetch, middleware)\n                : createFetchFn(middleware);\n        }\n        return newNetwork;\n    }\n    if (typeof arg2 === 'string') {\n        const middleware = createApiKeyMiddleware({ apiKey: arg2 });\n        newNetwork.client.fetch = newNetwork.client.fetch\n            ? createFetchFn(newNetwork.client.fetch, middleware)\n            : createFetchFn(middleware);\n        return newNetwork;\n    }\n    return newNetwork;\n}\n//# sourceMappingURL=network.js.map","export const BLOCKSTACK_DEFAULT_GAIA_HUB_URL = 'https://hub.blockstack.org';\nexport const MAX_STRING_LENGTH_BYTES = 128;\nexport const CLARITY_INT_SIZE = 128;\nexport const CLARITY_INT_BYTE_SIZE = 16;\nexport const COINBASE_BYTES_LENGTH = 32;\nexport const VRF_PROOF_BYTES_LENGTH = 80;\nexport const RECOVERABLE_ECDSA_SIG_LENGTH_BYTES = 65;\nexport const COMPRESSED_PUBKEY_LENGTH_BYTES = 32;\nexport const UNCOMPRESSED_PUBKEY_LENGTH_BYTES = 64;\nexport const MEMO_MAX_LENGTH_BYTES = 34;\nconst MAX_PAYLOAD_LEN = 1 + 16 * 1024 * 1024;\nconst PREAMBLE_ENCODED_SIZE = 165;\nconst MAX_RELAYERS_LEN = 16;\nconst PEER_ADDRESS_ENCODED_SIZE = 16;\nconst HASH160_ENCODED_SIZE = 20;\nconst NEIGHBOR_ADDRESS_ENCODED_SIZE = PEER_ADDRESS_ENCODED_SIZE + 2 + HASH160_ENCODED_SIZE;\nconst RELAY_DATA_ENCODED_SIZE = NEIGHBOR_ADDRESS_ENCODED_SIZE + 4;\nexport const STRING_MAX_LENGTH = MAX_PAYLOAD_LEN + (PREAMBLE_ENCODED_SIZE + MAX_RELAYERS_LEN * RELAY_DATA_ENCODED_SIZE);\nexport var PayloadType;\n(function (PayloadType) {\n    PayloadType[PayloadType[\"TokenTransfer\"] = 0] = \"TokenTransfer\";\n    PayloadType[PayloadType[\"SmartContract\"] = 1] = \"SmartContract\";\n    PayloadType[PayloadType[\"VersionedSmartContract\"] = 6] = \"VersionedSmartContract\";\n    PayloadType[PayloadType[\"ContractCall\"] = 2] = \"ContractCall\";\n    PayloadType[PayloadType[\"PoisonMicroblock\"] = 3] = \"PoisonMicroblock\";\n    PayloadType[PayloadType[\"Coinbase\"] = 4] = \"Coinbase\";\n    PayloadType[PayloadType[\"CoinbaseToAltRecipient\"] = 5] = \"CoinbaseToAltRecipient\";\n    PayloadType[PayloadType[\"TenureChange\"] = 7] = \"TenureChange\";\n    PayloadType[PayloadType[\"NakamotoCoinbase\"] = 8] = \"NakamotoCoinbase\";\n})(PayloadType || (PayloadType = {}));\nexport var ClarityVersion;\n(function (ClarityVersion) {\n    ClarityVersion[ClarityVersion[\"Clarity1\"] = 1] = \"Clarity1\";\n    ClarityVersion[ClarityVersion[\"Clarity2\"] = 2] = \"Clarity2\";\n    ClarityVersion[ClarityVersion[\"Clarity3\"] = 3] = \"Clarity3\";\n})(ClarityVersion || (ClarityVersion = {}));\nexport var AnchorMode;\n(function (AnchorMode) {\n    AnchorMode[AnchorMode[\"OnChainOnly\"] = 1] = \"OnChainOnly\";\n    AnchorMode[AnchorMode[\"OffChainOnly\"] = 2] = \"OffChainOnly\";\n    AnchorMode[AnchorMode[\"Any\"] = 3] = \"Any\";\n})(AnchorMode || (AnchorMode = {}));\nexport const AnchorModeNames = ['onChainOnly', 'offChainOnly', 'any'];\nconst AnchorModeMap = {\n    [AnchorModeNames[0]]: AnchorMode.OnChainOnly,\n    [AnchorModeNames[1]]: AnchorMode.OffChainOnly,\n    [AnchorModeNames[2]]: AnchorMode.Any,\n    [AnchorMode.OnChainOnly]: AnchorMode.OnChainOnly,\n    [AnchorMode.OffChainOnly]: AnchorMode.OffChainOnly,\n    [AnchorMode.Any]: AnchorMode.Any,\n};\nexport function anchorModeFrom(mode) {\n    if (mode in AnchorModeMap)\n        return AnchorModeMap[mode];\n    throw new Error(`Invalid anchor mode \"${mode}\", must be one of: ${AnchorModeNames.join(', ')}`);\n}\nexport var PostConditionMode;\n(function (PostConditionMode) {\n    PostConditionMode[PostConditionMode[\"Allow\"] = 1] = \"Allow\";\n    PostConditionMode[PostConditionMode[\"Deny\"] = 2] = \"Deny\";\n})(PostConditionMode || (PostConditionMode = {}));\nexport var PostConditionType;\n(function (PostConditionType) {\n    PostConditionType[PostConditionType[\"STX\"] = 0] = \"STX\";\n    PostConditionType[PostConditionType[\"Fungible\"] = 1] = \"Fungible\";\n    PostConditionType[PostConditionType[\"NonFungible\"] = 2] = \"NonFungible\";\n})(PostConditionType || (PostConditionType = {}));\nexport var AuthType;\n(function (AuthType) {\n    AuthType[AuthType[\"Standard\"] = 4] = \"Standard\";\n    AuthType[AuthType[\"Sponsored\"] = 5] = \"Sponsored\";\n})(AuthType || (AuthType = {}));\nexport var AddressHashMode;\n(function (AddressHashMode) {\n    AddressHashMode[AddressHashMode[\"P2PKH\"] = 0] = \"P2PKH\";\n    AddressHashMode[AddressHashMode[\"P2SH\"] = 1] = \"P2SH\";\n    AddressHashMode[AddressHashMode[\"P2WPKH\"] = 2] = \"P2WPKH\";\n    AddressHashMode[AddressHashMode[\"P2WSH\"] = 3] = \"P2WSH\";\n    AddressHashMode[AddressHashMode[\"P2SHNonSequential\"] = 5] = \"P2SHNonSequential\";\n    AddressHashMode[AddressHashMode[\"P2WSHNonSequential\"] = 7] = \"P2WSHNonSequential\";\n})(AddressHashMode || (AddressHashMode = {}));\nexport { AddressVersion } from '@stacks/network';\nexport var PubKeyEncoding;\n(function (PubKeyEncoding) {\n    PubKeyEncoding[PubKeyEncoding[\"Compressed\"] = 0] = \"Compressed\";\n    PubKeyEncoding[PubKeyEncoding[\"Uncompressed\"] = 1] = \"Uncompressed\";\n})(PubKeyEncoding || (PubKeyEncoding = {}));\nexport var FungibleConditionCode;\n(function (FungibleConditionCode) {\n    FungibleConditionCode[FungibleConditionCode[\"Equal\"] = 1] = \"Equal\";\n    FungibleConditionCode[FungibleConditionCode[\"Greater\"] = 2] = \"Greater\";\n    FungibleConditionCode[FungibleConditionCode[\"GreaterEqual\"] = 3] = \"GreaterEqual\";\n    FungibleConditionCode[FungibleConditionCode[\"Less\"] = 4] = \"Less\";\n    FungibleConditionCode[FungibleConditionCode[\"LessEqual\"] = 5] = \"LessEqual\";\n})(FungibleConditionCode || (FungibleConditionCode = {}));\nexport var NonFungibleConditionCode;\n(function (NonFungibleConditionCode) {\n    NonFungibleConditionCode[NonFungibleConditionCode[\"Sends\"] = 16] = \"Sends\";\n    NonFungibleConditionCode[NonFungibleConditionCode[\"DoesNotSend\"] = 17] = \"DoesNotSend\";\n})(NonFungibleConditionCode || (NonFungibleConditionCode = {}));\nexport var PostConditionPrincipalId;\n(function (PostConditionPrincipalId) {\n    PostConditionPrincipalId[PostConditionPrincipalId[\"Origin\"] = 1] = \"Origin\";\n    PostConditionPrincipalId[PostConditionPrincipalId[\"Standard\"] = 2] = \"Standard\";\n    PostConditionPrincipalId[PostConditionPrincipalId[\"Contract\"] = 3] = \"Contract\";\n})(PostConditionPrincipalId || (PostConditionPrincipalId = {}));\nexport var AssetType;\n(function (AssetType) {\n    AssetType[AssetType[\"STX\"] = 0] = \"STX\";\n    AssetType[AssetType[\"Fungible\"] = 1] = \"Fungible\";\n    AssetType[AssetType[\"NonFungible\"] = 2] = \"NonFungible\";\n})(AssetType || (AssetType = {}));\nexport var TenureChangeCause;\n(function (TenureChangeCause) {\n    TenureChangeCause[TenureChangeCause[\"BlockFound\"] = 0] = \"BlockFound\";\n    TenureChangeCause[TenureChangeCause[\"Extended\"] = 1] = \"Extended\";\n})(TenureChangeCause || (TenureChangeCause = {}));\nexport var AuthFieldType;\n(function (AuthFieldType) {\n    AuthFieldType[AuthFieldType[\"PublicKeyCompressed\"] = 0] = \"PublicKeyCompressed\";\n    AuthFieldType[AuthFieldType[\"PublicKeyUncompressed\"] = 1] = \"PublicKeyUncompressed\";\n    AuthFieldType[AuthFieldType[\"SignatureCompressed\"] = 2] = \"SignatureCompressed\";\n    AuthFieldType[AuthFieldType[\"SignatureUncompressed\"] = 3] = \"SignatureUncompressed\";\n})(AuthFieldType || (AuthFieldType = {}));\nexport var TxRejectedReason;\n(function (TxRejectedReason) {\n    TxRejectedReason[\"Serialization\"] = \"Serialization\";\n    TxRejectedReason[\"Deserialization\"] = \"Deserialization\";\n    TxRejectedReason[\"SignatureValidation\"] = \"SignatureValidation\";\n    TxRejectedReason[\"FeeTooLow\"] = \"FeeTooLow\";\n    TxRejectedReason[\"BadNonce\"] = \"BadNonce\";\n    TxRejectedReason[\"NotEnoughFunds\"] = \"NotEnoughFunds\";\n    TxRejectedReason[\"NoSuchContract\"] = \"NoSuchContract\";\n    TxRejectedReason[\"NoSuchPublicFunction\"] = \"NoSuchPublicFunction\";\n    TxRejectedReason[\"BadFunctionArgument\"] = \"BadFunctionArgument\";\n    TxRejectedReason[\"ContractAlreadyExists\"] = \"ContractAlreadyExists\";\n    TxRejectedReason[\"PoisonMicroblocksDoNotConflict\"] = \"PoisonMicroblocksDoNotConflict\";\n    TxRejectedReason[\"PoisonMicroblockHasUnknownPubKeyHash\"] = \"PoisonMicroblockHasUnknownPubKeyHash\";\n    TxRejectedReason[\"PoisonMicroblockIsInvalid\"] = \"PoisonMicroblockIsInvalid\";\n    TxRejectedReason[\"BadAddressVersionByte\"] = \"BadAddressVersionByte\";\n    TxRejectedReason[\"NoCoinbaseViaMempool\"] = \"NoCoinbaseViaMempool\";\n    TxRejectedReason[\"ServerFailureNoSuchChainTip\"] = \"ServerFailureNoSuchChainTip\";\n    TxRejectedReason[\"ServerFailureDatabase\"] = \"ServerFailureDatabase\";\n    TxRejectedReason[\"ServerFailureOther\"] = \"ServerFailureOther\";\n})(TxRejectedReason || (TxRejectedReason = {}));\n//# sourceMappingURL=constants.js.map","import { ripemd160 } from '@noble/hashes/ripemd160';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512_256 } from '@noble/hashes/sha512';\nimport { utils } from '@noble/secp256k1';\nimport { bytesToHex, concatArray, concatBytes, utf8ToBytes } from '@stacks/common';\nimport { c32addressDecode } from 'c32check';\nimport lodashCloneDeep from 'lodash.clonedeep';\nimport { deserializeCV, serializeCV } from './clarity';\nexport { verify as verifySignature } from '@noble/secp256k1';\nexport const randomBytes = (bytesLength) => utils.randomBytes(bytesLength);\nexport const leftPadHex = (hexString) => hexString.length % 2 ? `0${hexString}` : hexString;\nexport const leftPadHexToLength = (hexString, length) => hexString.padStart(length, '0');\nexport const rightPadHexToLength = (hexString, length) => hexString.padEnd(length, '0');\nexport const exceedsMaxLengthBytes = (string, maxLengthBytes) => string ? utf8ToBytes(string).length > maxLengthBytes : false;\nexport function cloneDeep(obj) {\n    return lodashCloneDeep(obj);\n}\nexport function omit(obj, prop) {\n    const clone = cloneDeep(obj);\n    delete clone[prop];\n    return clone;\n}\nexport const hash160 = (input) => {\n    return ripemd160(sha256(input));\n};\nexport const txidFromData = (data) => {\n    return bytesToHex(sha512_256(data));\n};\nexport const txidFromBytes = txidFromData;\nexport const hashP2PKH = (input) => {\n    return bytesToHex(hash160(input));\n};\nexport const hashP2WPKH = (input) => {\n    const keyHash = hash160(input);\n    const redeemScript = concatBytes(new Uint8Array([0]), new Uint8Array([keyHash.length]), keyHash);\n    const redeemScriptHash = hash160(redeemScript);\n    return bytesToHex(redeemScriptHash);\n};\nexport const hashP2SH = (numSigs, pubKeys) => {\n    if (numSigs > 15 || pubKeys.length > 15) {\n        throw Error('P2SH multisig address can only contain up to 15 public keys');\n    }\n    const bytesArray = [];\n    bytesArray.push(80 + numSigs);\n    pubKeys.forEach(pubKey => {\n        bytesArray.push(pubKey.length);\n        bytesArray.push(pubKey);\n    });\n    bytesArray.push(80 + pubKeys.length);\n    bytesArray.push(174);\n    const redeemScript = concatArray(bytesArray);\n    const redeemScriptHash = hash160(redeemScript);\n    return bytesToHex(redeemScriptHash);\n};\nexport const hashP2WSH = (numSigs, pubKeys) => {\n    if (numSigs > 15 || pubKeys.length > 15) {\n        throw Error('P2WSH multisig address can only contain up to 15 public keys');\n    }\n    const scriptArray = [];\n    scriptArray.push(80 + numSigs);\n    pubKeys.forEach(pubKey => {\n        scriptArray.push(pubKey.length);\n        scriptArray.push(pubKey);\n    });\n    scriptArray.push(80 + pubKeys.length);\n    scriptArray.push(174);\n    const script = concatArray(scriptArray);\n    const digest = sha256(script);\n    const bytesArray = [];\n    bytesArray.push(0);\n    bytesArray.push(digest.length);\n    bytesArray.push(digest);\n    const redeemScript = concatArray(bytesArray);\n    const redeemScriptHash = hash160(redeemScript);\n    return bytesToHex(redeemScriptHash);\n};\nexport function isClarityName(name) {\n    const regex = /^[a-zA-Z]([a-zA-Z0-9]|[-_!?+<>=/*])*$|^[-+=/*]$|^[<>]=?$/;\n    return regex.test(name) && name.length < 128;\n}\nexport function cvToHex(cv) {\n    const serialized = serializeCV(cv);\n    return `0x${serialized}`;\n}\nexport function hexToCV(hex) {\n    return deserializeCV(hex);\n}\nexport const parseReadOnlyResponse = (response) => {\n    if (response.okay)\n        return hexToCV(response.result);\n    throw new Error(response.cause);\n};\nexport const validateStacksAddress = (address) => {\n    try {\n        c32addressDecode(address);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n};\nexport function parseContractId(contractId) {\n    const [address, name] = contractId.split('.');\n    if (!address || !name)\n        throw new Error(`Invalid contract identifier: ${contractId}`);\n    return [address, name];\n}\n//# sourceMappingURL=utils.js.map","export var StacksWireType;\n(function (StacksWireType) {\n    StacksWireType[StacksWireType[\"Address\"] = 0] = \"Address\";\n    StacksWireType[StacksWireType[\"Principal\"] = 1] = \"Principal\";\n    StacksWireType[StacksWireType[\"LengthPrefixedString\"] = 2] = \"LengthPrefixedString\";\n    StacksWireType[StacksWireType[\"MemoString\"] = 3] = \"MemoString\";\n    StacksWireType[StacksWireType[\"Asset\"] = 4] = \"Asset\";\n    StacksWireType[StacksWireType[\"PostCondition\"] = 5] = \"PostCondition\";\n    StacksWireType[StacksWireType[\"PublicKey\"] = 6] = \"PublicKey\";\n    StacksWireType[StacksWireType[\"LengthPrefixedList\"] = 7] = \"LengthPrefixedList\";\n    StacksWireType[StacksWireType[\"Payload\"] = 8] = \"Payload\";\n    StacksWireType[StacksWireType[\"MessageSignature\"] = 9] = \"MessageSignature\";\n    StacksWireType[StacksWireType[\"StructuredDataSignature\"] = 10] = \"StructuredDataSignature\";\n    StacksWireType[StacksWireType[\"TransactionAuthField\"] = 11] = \"TransactionAuthField\";\n})(StacksWireType || (StacksWireType = {}));\nexport function whenWireType(wireType) {\n    return (wireTypeMap) => wireTypeMap[wireType];\n}\n//# sourceMappingURL=types.js.map","import { hmac } from '@noble/hashes/hmac';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { getPublicKey as nobleGetPublicKey, Point, Signature, signSync, utils, } from '@noble/secp256k1';\nimport { bytesToHex, hexToBigInt, hexToBytes, intToHex, parseRecoverableSignatureVrs, PRIVATE_KEY_BYTES_COMPRESSED, privateKeyToBytes, signatureRsvToVrs, signatureVrsToRsv, } from '@stacks/common';\nimport { networkFrom, STACKS_MAINNET } from '@stacks/network';\nimport { c32address } from 'c32check';\nimport { addressHashModeToVersion } from './address';\nimport { AddressHashMode, PubKeyEncoding } from './constants';\nimport { hash160, hashP2PKH } from './utils';\nimport { addressFromVersionHash, addressToString, StacksWireType } from './wire';\nutils.hmacSha256Sync = (key, ...msgs) => {\n    const h = hmac.create(sha256, key);\n    msgs.forEach(msg => h.update(msg));\n    return h.digest();\n};\nexport function getAddressFromPrivateKey(privateKey, network = 'mainnet') {\n    network = networkFrom(network);\n    const publicKey = privateKeyToPublic(privateKey);\n    return getAddressFromPublicKey(publicKey, network);\n}\nexport function getAddressFromPublicKey(publicKey, network = 'mainnet') {\n    network = networkFrom(network);\n    publicKey = typeof publicKey === 'string' ? hexToBytes(publicKey) : publicKey;\n    const addrVer = addressHashModeToVersion(AddressHashMode.P2PKH, network);\n    const addr = addressFromVersionHash(addrVer, hashP2PKH(publicKey));\n    const addrString = addressToString(addr);\n    return addrString;\n}\nexport function createStacksPublicKey(publicKey) {\n    publicKey = typeof publicKey === 'string' ? hexToBytes(publicKey) : publicKey;\n    return {\n        type: StacksWireType.PublicKey,\n        data: publicKey,\n    };\n}\nexport function publicKeyFromSignatureVrs(messageHash, messageSignature, pubKeyEncoding = PubKeyEncoding.Compressed) {\n    const parsedSignature = parseRecoverableSignatureVrs(messageSignature);\n    const signature = new Signature(hexToBigInt(parsedSignature.r), hexToBigInt(parsedSignature.s));\n    const point = Point.fromSignature(messageHash, signature, parsedSignature.recoveryId);\n    const compressed = pubKeyEncoding === PubKeyEncoding.Compressed;\n    return point.toHex(compressed);\n}\nexport function publicKeyFromSignatureRsv(messageHash, messageSignature, pubKeyEncoding = PubKeyEncoding.Compressed) {\n    return publicKeyFromSignatureVrs(messageHash, signatureRsvToVrs(messageSignature), pubKeyEncoding);\n}\nexport function privateKeyToHex(publicKey) {\n    return typeof publicKey === 'string' ? publicKey : bytesToHex(publicKey);\n}\nexport const publicKeyToHex = privateKeyToHex;\nexport const isPrivateKeyCompressed = privateKeyIsCompressed;\nexport function privateKeyIsCompressed(privateKey) {\n    const length = typeof privateKey === 'string' ? privateKey.length / 2 : privateKey.byteLength;\n    return length === PRIVATE_KEY_BYTES_COMPRESSED;\n}\nexport const isPublicKeyCompressed = publicKeyIsCompressed;\nexport function publicKeyIsCompressed(publicKey) {\n    return !publicKeyToHex(publicKey).startsWith('04');\n}\nexport function privateKeyToPublic(privateKey) {\n    privateKey = privateKeyToBytes(privateKey);\n    const isCompressed = privateKeyIsCompressed(privateKey);\n    return bytesToHex(nobleGetPublicKey(privateKey.slice(0, 32), isCompressed));\n}\nexport function compressPublicKey(publicKey) {\n    return Point.fromHex(publicKeyToHex(publicKey)).toHex(true);\n}\nexport function uncompressPublicKey(publicKey) {\n    return Point.fromHex(publicKeyToHex(publicKey)).toHex(false);\n}\nexport const makeRandomPrivKey = randomPrivateKey;\nexport function randomPrivateKey() {\n    return compressPrivateKey(utils.randomPrivateKey());\n}\nexport function signWithKey(privateKey, messageHash) {\n    privateKey = privateKeyToBytes(privateKey);\n    const [rawSignature, recoveryId] = signSync(messageHash, privateKey.slice(0, 32), {\n        canonical: true,\n        recovered: true,\n    });\n    if (recoveryId == null) {\n        throw new Error('No signature recoveryId received');\n    }\n    const recoveryIdHex = intToHex(recoveryId, 1);\n    return recoveryIdHex + Signature.fromHex(rawSignature).toCompactHex();\n}\nexport function signMessageHashRsv({ messageHash, privateKey, }) {\n    return signatureVrsToRsv(signWithKey(privateKey, messageHash));\n}\nexport function compressPrivateKey(privateKey) {\n    privateKey = privateKeyToHex(privateKey);\n    return privateKey.length == PRIVATE_KEY_BYTES_COMPRESSED * 2\n        ? privateKey\n        : `${privateKey}01`;\n}\nexport function privateKeyToAddress(privateKey, network) {\n    const publicKey = privateKeyToPublic(privateKey);\n    return publicKeyToAddressSingleSig(publicKey, network);\n}\nexport function publicKeyToAddress(...args) {\n    if (typeof args[0] === 'number')\n        return _publicKeyToAddress(...args);\n    return publicKeyToAddressSingleSig(...args);\n}\nfunction _publicKeyToAddress(version, publicKey) {\n    publicKey = typeof publicKey === 'string' ? hexToBytes(publicKey) : publicKey;\n    return c32address(version, bytesToHex(hash160(publicKey)));\n}\nexport function publicKeyToAddressSingleSig(publicKey, network) {\n    network = network ? networkFrom(network) : STACKS_MAINNET;\n    publicKey = typeof publicKey === 'string' ? hexToBytes(publicKey) : publicKey;\n    return c32address(network.addressVersion.singleSig, bytesToHex(hash160(publicKey)));\n}\n//# sourceMappingURL=keys.js.map","import { STACKS_MAINNET, TransactionVersion, networkFrom, } from '@stacks/network';\nimport { AddressHashMode, AddressVersion } from './constants';\nexport function addressHashModeToVersion(hashMode, network) {\n    network = networkFrom(network ?? STACKS_MAINNET);\n    switch (hashMode) {\n        case AddressHashMode.P2PKH:\n            switch (network.transactionVersion) {\n                case TransactionVersion.Mainnet:\n                    return AddressVersion.MainnetSingleSig;\n                case TransactionVersion.Testnet:\n                    return AddressVersion.TestnetSingleSig;\n                default:\n                    throw new Error(`Unexpected transactionVersion ${network.transactionVersion} for hashMode ${hashMode}`);\n            }\n        case AddressHashMode.P2SH:\n        case AddressHashMode.P2SHNonSequential:\n        case AddressHashMode.P2WPKH:\n        case AddressHashMode.P2WSH:\n        case AddressHashMode.P2WSHNonSequential:\n            switch (network.transactionVersion) {\n                case TransactionVersion.Mainnet:\n                    return AddressVersion.MainnetMultiSig;\n                case TransactionVersion.Testnet:\n                    return AddressVersion.TestnetMultiSig;\n                default:\n                    throw new Error(`Unexpected transactionVersion ${network.transactionVersion} for hashMode ${hashMode}`);\n            }\n        default:\n            throw new Error(`Unexpected hashMode ${hashMode}`);\n    }\n}\n//# sourceMappingURL=address.js.map","import { c32address } from 'c32check';\nimport { AddressHashMode, PayloadType } from '../constants';\nimport { publicKeyIsCompressed } from '../keys';\nimport { hashP2PKH, hashP2SH, hashP2WPKH, hashP2WSH } from '../utils';\nimport { createAsset, createContractPrincipal, createStandardPrincipal } from './create';\nimport { serializePublicKeyBytes } from './serialization';\nimport { StacksWireType, } from './types';\nexport function addressFromPublicKeys(version, hashMode, numSigs, publicKeys) {\n    if (publicKeys.length === 0) {\n        throw Error('Invalid number of public keys');\n    }\n    if (hashMode === AddressHashMode.P2PKH || hashMode === AddressHashMode.P2WPKH) {\n        if (publicKeys.length !== 1 || numSigs !== 1) {\n            throw Error('Invalid number of public keys or signatures');\n        }\n    }\n    if (hashMode === AddressHashMode.P2WPKH ||\n        hashMode === AddressHashMode.P2WSH ||\n        hashMode === AddressHashMode.P2WSHNonSequential) {\n        if (!publicKeys.map(p => p.data).every(publicKeyIsCompressed)) {\n            throw Error('Public keys must be compressed for segwit');\n        }\n    }\n    switch (hashMode) {\n        case AddressHashMode.P2PKH:\n            return addressFromVersionHash(version, hashP2PKH(publicKeys[0].data));\n        case AddressHashMode.P2WPKH:\n            return addressFromVersionHash(version, hashP2WPKH(publicKeys[0].data));\n        case AddressHashMode.P2SH:\n        case AddressHashMode.P2SHNonSequential:\n            return addressFromVersionHash(version, hashP2SH(numSigs, publicKeys.map(serializePublicKeyBytes)));\n        case AddressHashMode.P2WSH:\n        case AddressHashMode.P2WSHNonSequential:\n            return addressFromVersionHash(version, hashP2WSH(numSigs, publicKeys.map(serializePublicKeyBytes)));\n    }\n}\nexport function addressFromVersionHash(version, hash) {\n    return { type: StacksWireType.Address, version, hash160: hash };\n}\nexport function addressToString(address) {\n    return c32address(address.version, address.hash160);\n}\nexport function isTokenTransferPayload(p) {\n    return p.payloadType === PayloadType.TokenTransfer;\n}\nexport function isContractCallPayload(p) {\n    return p.payloadType === PayloadType.ContractCall;\n}\nexport function isSmartContractPayload(p) {\n    return p.payloadType === PayloadType.SmartContract;\n}\nexport function isPoisonPayload(p) {\n    return p.payloadType === PayloadType.PoisonMicroblock;\n}\nexport function isCoinbasePayload(p) {\n    return p.payloadType === PayloadType.Coinbase;\n}\nexport function parseAssetString(id) {\n    const [assetAddress, assetContractName, assetTokenName] = id.split(/\\.|::/);\n    const asset = createAsset(assetAddress, assetContractName, assetTokenName);\n    return asset;\n}\nexport function parsePrincipalString(principalString) {\n    if (principalString.includes('.')) {\n        const [address, contractName] = principalString.split('.');\n        return createContractPrincipal(address, contractName);\n    }\n    else {\n        return createStandardPrincipal(principalString);\n    }\n}\n//# sourceMappingURL=helpers.js.map","import { getPublicKeyFromPrivate, publicKeyToBtcAddress } from '@stacks/encryption';\n// https://github.com/paulmillr/scure-bip32\n// Secure, audited & minimal implementation of BIP32 hierarchical deterministic (HD) wallets.\nimport { HDKey } from '@scure/bip32';\nimport { Profile } from '@stacks/profile';\n\nexport interface Account {\n  /** The private key used for STX payments */\n  stxPrivateKey: string;\n  /** The private key used in Stacks 1.0 to register BNS names */\n  dataPrivateKey: string;\n  /** The salt is the same as the wallet-level salt. Used for app-specific keys */\n  salt: string;\n  /** A single username registered via BNS for this account */\n  username?: string;\n  /** A profile object that is publicly associated with this account's username */\n  profile?: Profile;\n  /** The root of the keychain used to generate app-specific keys */\n  appsKey: string;\n  /** The index of this account in the user's wallet */\n  index: number;\n}\n\n// Reference:  https://github.com/bitcoinjs/bip32/blob/79c6dedb3edfdc8505fe74d9f34c115c33e8a2da/ts-src/bip32.ts#L102\n// Used to replicate deriveHardened bip32 method using deriveChild of scure-bip32 to offload old bip32 library\nexport const HARDENED_OFFSET = 0x80_00_00_00;\n\n/**\n * This object represents the keys that were derived from the root-level\n * keychain of a wallet.\n */\nexport interface WalletKeys {\n  /** Used when generating app private keys, which encrypt app-specific data */\n  salt: string;\n  /** The private key associated with the root of a BIP39 keychain */\n  rootKey: string;\n  /** A private key used to encrypt configuration data */\n  configPrivateKey: string;\n}\n\nexport interface Wallet extends WalletKeys {\n  /** The encrypted secret key */\n  encryptedSecretKey: string;\n  /** A list of accounts generated by this wallet */\n  accounts: Account[];\n}\n\nexport const getGaiaAddress = (account: Account) => {\n  const publicKey = getPublicKeyFromPrivate(account.dataPrivateKey);\n  const address = publicKeyToBtcAddress(publicKey);\n  return address;\n};\n\nexport const getRootNode = (wallet: Wallet) => {\n  return HDKey.fromExtendedKey(wallet.rootKey);\n};\n","import { NetworkClientParam, clientFromNetwork, networkFrom } from '@stacks/network';\n\nexport const fetchFirstName = async (\n  opts: {\n    address: string;\n  } & NetworkClientParam\n): Promise<string | undefined> => {\n  const network = networkFrom(opts.network ?? 'mainnet');\n  const client = Object.assign({}, clientFromNetwork(network), opts.client);\n  try {\n    const namesResponse = await client.fetch(\n      `${client.baseUrl}/v1/addresses/stacks/${opts.address}`\n    );\n    const namesJson = await namesResponse.json();\n    if ((namesJson.names.length || 0) > 0) {\n      return namesJson.names[0];\n    }\n  } catch (e) {}\n  return undefined;\n};\n","import { FetchFn, bytesToHex, createFetchFn } from '@stacks/common';\nimport { getPublicKeyFromPrivate, publicKeyToBtcAddress, randomBytes } from '@stacks/encryption';\nimport { ChainId } from '@stacks/network';\nimport { GaiaHubConfig } from '@stacks/storage';\nimport { Json, TokenSigner } from 'jsontokens';\nimport { parseZoneFile } from 'zone-file';\n\nexport function assertIsTruthy<T>(val: T): asserts val is NonNullable<T> {\n  if (!val) {\n    throw new Error(`expected: true, actual: ${val}`);\n  }\n}\n\ninterface NameInfoResponse {\n  address: string;\n  zonefile: string;\n}\n\nexport const getProfileURLFromZoneFile = async (\n  name: string,\n  fetchFn: FetchFn = createFetchFn()\n) => {\n  const url = `https://api.hiro.so/v1/names/${name}`;\n  const res = await fetchFn(url);\n  if (res.ok) {\n    const nameInfo: NameInfoResponse = await res.json();\n    const zone = parseZoneFile(nameInfo.zonefile);\n    const uri = zone.uri?.[0]?.target;\n    if (uri) {\n      return uri;\n    }\n    throw new Error(`No zonefile uri found: ${nameInfo.zonefile}`);\n  }\n  return;\n};\n\n/** @internal */\nexport interface HubInfo {\n  challenge_text?: string;\n  read_url_prefix: string;\n}\n\nexport const getHubInfo = async (gaiaHubUrl: string, fetchFn: FetchFn = createFetchFn()) => {\n  const response = await fetchFn(`${gaiaHubUrl}/hub_info`);\n  if (!response.ok) throw new Error('Failed to fetch hub info');\n\n  const data: HubInfo = await response.json();\n  return data;\n};\n\nconst makeGaiaAuthToken = ({\n  hubInfo,\n  privateKey,\n  gaiaHubUrl,\n}: {\n  hubInfo: HubInfo;\n  privateKey: string;\n  gaiaHubUrl: string;\n}) => {\n  const challengeText = hubInfo.challenge_text;\n  const iss = getPublicKeyFromPrivate(privateKey);\n\n  const salt = bytesToHex(randomBytes(16));\n  const payload: GaiaAuthPayload = {\n    gaiaHubUrl,\n    iss,\n    salt,\n  };\n  if (challengeText) {\n    payload.gaiaChallenge = challengeText;\n  }\n  const token = new TokenSigner('ES256K', privateKey).sign(payload);\n  return `v1:${token}`;\n};\n\ninterface ConnectToGaiaOptions {\n  hubInfo: HubInfo;\n  privateKey: string;\n  gaiaHubUrl: string;\n}\n\nexport const connectToGaiaHubWithConfig = ({\n  hubInfo,\n  privateKey,\n  gaiaHubUrl,\n}: ConnectToGaiaOptions): GaiaHubConfig => {\n  const readURL = hubInfo.read_url_prefix;\n  const token = makeGaiaAuthToken({ hubInfo, privateKey, gaiaHubUrl });\n  const address = publicKeyToBtcAddress(getPublicKeyFromPrivate(privateKey));\n  return {\n    url_prefix: readURL,\n    max_file_upload_size_megabytes: 100,\n    address,\n    token,\n    server: gaiaHubUrl,\n  };\n};\n\ninterface GaiaAuthPayload {\n  gaiaHubUrl: string;\n  iss: string;\n  salt: string;\n  [key: string]: Json;\n}\n\nexport const makeGaiaAssociationToken = ({\n  privateKey: secretKeyHex,\n  childPublicKeyHex,\n}: {\n  privateKey: string;\n  childPublicKeyHex: string;\n}): string => {\n  const LIFETIME_SECONDS = 365 * 24 * 3600;\n  const signerKeyHex = secretKeyHex.slice(0, 64);\n  const compressedPublicKeyHex = getPublicKeyFromPrivate(signerKeyHex);\n  const salt = bytesToHex(randomBytes(16));\n  const payload = {\n    childToAssociate: childPublicKeyHex,\n    iss: compressedPublicKeyHex,\n    exp: LIFETIME_SECONDS + new Date().getTime() / 1000,\n    iat: Date.now() / 1000,\n    salt,\n  };\n\n  const tokenSigner = new TokenSigner('ES256K', signerKeyHex);\n  const token = tokenSigner.sign(payload);\n  return token;\n};\n\ninterface WhenChainIdMap<T> {\n  [ChainId.Mainnet]: T;\n  [ChainId.Testnet]: T;\n}\nexport function whenChainId(chainId: ChainId) {\n  return <T>(chainIdMap: WhenChainIdMap<T>): T => chainIdMap[chainId];\n}\n","// https://github.com/paulmillr/scure-bip32\n// Secure, audited & minimal implementation of BIP32 hierarchical deterministic (HD) wallets.\nimport { HDKey } from '@scure/bip32';\nimport { getNameInfo } from '@stacks/auth';\nimport { bytesToHex, utf8ToBytes } from '@stacks/common';\nimport { createSha2Hash } from '@stacks/encryption';\nimport {\n  NetworkClientParam,\n  NetworkParam,\n  StacksNetwork,\n  clientFromNetwork,\n  networkFrom,\n} from '@stacks/network';\nimport { compressPrivateKey, getAddressFromPrivateKey } from '@stacks/transactions';\nimport { Account, HARDENED_OFFSET, WalletKeys } from './models/common';\nimport { fetchFirstName } from './usernames';\nimport { assertIsTruthy } from './utils';\n\nconst DATA_DERIVATION_PATH = `m/888'/0'`;\nconst WALLET_CONFIG_PATH = `m/44/5757'/0'/1`;\nconst STX_DERIVATION_PATH = `m/44'/5757'/0'/0`;\n\nexport const deriveWalletKeys = async (rootNode: HDKey): Promise<WalletKeys> => {\n  assertIsTruthy(rootNode.privateKey);\n  return {\n    salt: await deriveSalt(rootNode),\n    rootKey: rootNode.privateExtendedKey,\n    configPrivateKey: bytesToHex(deriveConfigPrivateKey(rootNode)),\n  };\n};\n\n/**\n * Derive the `configPrivateKey` for a wallet.\n *\n * This key is derived from the path `m/5757'/0'/1`, using `1` for change option, following the bip44 recommendation\n * for keys relating to non-public data.\n *\n * This key is used to encrypt configuration data related to a wallet, so the user's\n * configuration can be synced across wallets.\n *\n * @param rootNode A keychain that was created using the wallet's seed phrase\n */\nexport const deriveConfigPrivateKey = (rootNode: HDKey): Uint8Array => {\n  const derivedConfigKey = rootNode.derive(WALLET_CONFIG_PATH).privateKey;\n  if (!derivedConfigKey) throw new TypeError('Unable to derive config key for wallet identities');\n  return derivedConfigKey;\n};\n\n/**\n * Before the Stacks Wallet, the authenticator used with Connect used a different format\n * and path for the config file.\n *\n * The path for this key is `m/45'`\n * @param rootNode A keychain that was created using the wallet's seed phrase\n */\nexport const deriveLegacyConfigPrivateKey = (rootNode: HDKey): string => {\n  const derivedLegacyKey = rootNode.deriveChild(45 + HARDENED_OFFSET).privateKey;\n  if (!derivedLegacyKey) throw new TypeError('Unable to derive config key for wallet identities');\n  return bytesToHex(derivedLegacyKey);\n};\n\n/**\n * Generate a salt, which is used for generating an app-specific private key\n * @param rootNode\n */\nexport const deriveSalt = async (rootNode: HDKey) => {\n  const identitiesKeychain = rootNode.derive(DATA_DERIVATION_PATH);\n  const publicKeyHex = utf8ToBytes(bytesToHex(identitiesKeychain.publicKey as Uint8Array));\n\n  const sha2Hash = await createSha2Hash();\n  const saltData = await sha2Hash.digest(publicKeyHex, 'sha256');\n\n  return bytesToHex(saltData);\n};\n\n/**\n * Determines how a private key is derived for an account:\n *\n * Wallet => STX_DERIVATION_PATH\n * Data => DATA_DERIVATION_PATH\n */\nexport enum DerivationType {\n  Wallet,\n  Data,\n  Unknown,\n}\n\n/**\n * Tries to find a derivation path for the stxPrivateKey for the account\n * defined by rootNode and index that respects the username of that account\n * and that respects the given derivationType.\n *\n * The stxPrivateKey is used to sign the profile of the account, therefore,\n * a username must be owned by the stxPrivateKey.\n *\n * If a username is provided, a lookup for the owner address\n * on the provided network is done.\n *\n * If no username is provided, a lookup for names owned\n * by the stx derivation path and by the data derivation path is done.\n *\n * If derivationType other than Unknown is given this derivation type is enforced.\n *\n * @param selectionOptions\n * @returns username and derivation type\n */\nexport const selectStxDerivation = async ({\n  username,\n  rootNode,\n  index,\n  network,\n}: {\n  username?: string;\n  rootNode: HDKey;\n  index: number;\n} & NetworkParam): Promise<{ username: string | undefined; stxDerivationType: DerivationType }> => {\n  if (network) network = networkFrom(network);\n\n  if (username) {\n    // Based on username, determine the derivation path for the stx private key\n    const stxDerivationTypeForUsername = await selectDerivationTypeForUsername({\n      username,\n      rootNode,\n      index,\n      network,\n    });\n    return { username, stxDerivationType: stxDerivationTypeForUsername };\n  } else {\n    const { username, derivationType } = await selectUsernameForAccount({\n      rootNode,\n      index,\n      network,\n    });\n    return { username, stxDerivationType: derivationType };\n  }\n};\n\n/** @internal @ignore */\nconst selectDerivationTypeForUsername = async ({\n  username,\n  rootNode,\n  index,\n  network,\n}: {\n  username: string;\n  rootNode: HDKey;\n  index: number;\n  network?: StacksNetwork;\n}): Promise<DerivationType> => {\n  if (network) {\n    const nameInfo = await getNameInfo({ name: username });\n    const stxPrivateKey = deriveStxPrivateKey({ rootNode, index });\n    let derivedAddress = getAddressFromPrivateKey(stxPrivateKey);\n    if (derivedAddress !== nameInfo.address) {\n      // try data private key\n      const dataPrivateKey = deriveDataPrivateKey({\n        rootNode,\n        index,\n      });\n      derivedAddress = getAddressFromPrivateKey(dataPrivateKey);\n      if (derivedAddress !== nameInfo.address) {\n        return DerivationType.Unknown;\n      } else {\n        return DerivationType.Data;\n      }\n    } else {\n      return DerivationType.Wallet;\n    }\n  } else {\n    // no network to determine the derivation path\n    return DerivationType.Unknown;\n  }\n};\n\n/** @internal @ignore */\nconst selectUsernameForAccount = async (\n  opts: {\n    rootNode: HDKey;\n    index: number;\n  } & NetworkClientParam\n): Promise<{ username: string | undefined; derivationType: DerivationType }> => {\n  const network = networkFrom(opts.network ?? 'mainnet');\n  const client = Object.assign({}, clientFromNetwork(network), opts.client);\n\n  // try to find existing usernames owned by stx derivation path\n  if (opts.network) {\n    const stxPrivateKey = deriveStxPrivateKey(opts);\n    const address = getAddressFromPrivateKey(stxPrivateKey, opts.network);\n    let username = await fetchFirstName({ address, client });\n    if (username) {\n      return { username, derivationType: DerivationType.Wallet };\n    } else {\n      // try to find existing usernames owned by data derivation path\n      const dataPrivateKey = deriveDataPrivateKey(opts);\n      const address = getAddressFromPrivateKey(dataPrivateKey, opts.network);\n      username = await fetchFirstName({ address, client });\n      if (username) {\n        return { username, derivationType: DerivationType.Data };\n      }\n    }\n  }\n  // use wallet derivation for accounts without username\n  // or without network parameter (offline)\n  return { username: undefined, derivationType: DerivationType.Wallet };\n};\n\nexport const fetchUsernameForAccountByDerivationType = async (\n  opts: {\n    rootNode: HDKey;\n    index: number;\n    derivationType: DerivationType.Wallet | DerivationType.Data;\n  } & NetworkClientParam\n): Promise<{\n  username: string | undefined;\n}> => {\n  const network = networkFrom(opts.network ?? 'mainnet');\n  const client = Object.assign({}, clientFromNetwork(network), opts.client);\n\n  // try to find existing usernames owned by given derivation path\n  const privateKey = derivePrivateKeyByType(opts);\n  const address = getAddressFromPrivateKey(privateKey, network);\n  const username = await fetchFirstName({ address, client });\n  return { username };\n};\n\nexport const derivePrivateKeyByType = ({\n  rootNode,\n  index,\n  derivationType,\n}: {\n  rootNode: HDKey;\n  index: number;\n  derivationType: DerivationType;\n}): string => {\n  return derivationType === DerivationType.Wallet\n    ? deriveStxPrivateKey({ rootNode, index })\n    : deriveDataPrivateKey({ rootNode, index });\n};\n\nexport const deriveStxPrivateKey = ({ rootNode, index }: { rootNode: HDKey; index: number }) => {\n  const childKey = rootNode.derive(STX_DERIVATION_PATH).deriveChild(index);\n  assertIsTruthy(childKey.privateKey);\n  return compressPrivateKey(childKey.privateKey);\n};\n\nexport const deriveDataPrivateKey = ({ rootNode, index }: { rootNode: HDKey; index: number }) => {\n  const childKey = rootNode.derive(DATA_DERIVATION_PATH).deriveChild(index + HARDENED_OFFSET);\n  assertIsTruthy(childKey.privateKey);\n  return compressPrivateKey(childKey.privateKey);\n};\n\nexport const deriveAccount = ({\n  rootNode,\n  index,\n  salt,\n  stxDerivationType,\n}: {\n  rootNode: HDKey;\n  index: number;\n  salt: string;\n  stxDerivationType: DerivationType.Wallet | DerivationType.Data;\n}): Account => {\n  const stxPrivateKey =\n    stxDerivationType === DerivationType.Wallet\n      ? deriveStxPrivateKey({ rootNode, index })\n      : deriveDataPrivateKey({ rootNode, index });\n\n  const identitiesKeychain = rootNode.derive(DATA_DERIVATION_PATH);\n  const identityKeychain = identitiesKeychain.deriveChild(index + HARDENED_OFFSET);\n  if (!identityKeychain.privateKey) throw new Error('Must have private key to derive identities');\n  const dataPrivateKey = bytesToHex(identityKeychain.privateKey);\n\n  const appsKey = identityKeychain.deriveChild(0 + HARDENED_OFFSET).privateExtendedKey;\n\n  return {\n    stxPrivateKey,\n    dataPrivateKey,\n    appsKey,\n    salt,\n    index,\n  };\n};\n","import { clientFromNetwork, networkFrom } from '@stacks/network';\nimport { resolveZoneFileToProfile } from '@stacks/profile';\nexport function lookupProfile(options) {\n    if (!options.username) {\n        return Promise.reject(new Error('No username provided'));\n    }\n    const network = networkFrom(options.network ?? 'mainnet');\n    const client = Object.assign({}, clientFromNetwork(network), options.client);\n    let lookupPromise;\n    if (options.zoneFileLookupURL) {\n        const url = `${options.zoneFileLookupURL.replace(/\\/$/, '')}/${options.username}`;\n        lookupPromise = client.fetch(url).then(response => response.json());\n    }\n    else {\n        lookupPromise = getNameInfo({ name: options.username });\n    }\n    return lookupPromise.then((responseJSON) => {\n        if (responseJSON.hasOwnProperty('zonefile') && responseJSON.hasOwnProperty('address')) {\n            return resolveZoneFileToProfile({\n                zoneFile: responseJSON.zonefile,\n                publicKeyOrAddress: responseJSON.address,\n                client,\n            });\n        }\n        else {\n            throw new Error('Invalid zonefile lookup response: did not contain `address`' + ' or `zonefile` field');\n        }\n    });\n}\nexport function getNameInfo(opts) {\n    const network = networkFrom(opts.network ?? 'mainnet');\n    const client = Object.assign({}, clientFromNetwork(network), opts.client);\n    const nameLookupURL = `${client.baseUrl}/v1/names/${opts.name}`;\n    return client\n        .fetch(nameLookupURL)\n        .then((resp) => {\n        if (resp.status === 404) {\n            throw new Error('Name not found');\n        }\n        else if (resp.status !== 200) {\n            throw new Error(`Bad response status: ${resp.status}`);\n        }\n        else {\n            return resp.json();\n        }\n    })\n        .then((nameInfo) => {\n        if (nameInfo.address) {\n            return Object.assign({}, nameInfo, { address: nameInfo.address });\n        }\n        else {\n            return nameInfo;\n        }\n    });\n}\n//# sourceMappingURL=profile.js.map","// https://github.com/paulmillr/scure-bip39\n// Secure, audited & minimal implementation of BIP39 mnemonic phrases.\nimport { generateMnemonic, mnemonicToSeed } from '@scure/bip39';\n// Word lists not imported by default as that would increase bundle sizes too much as in case of bitcoinjs/bip39\n// Use default english world list similar to bitcoinjs/bip39\n// Backward compatible with bitcoinjs/bip39 dependency\n// Very small in size as compared to bitcoinjs/bip39 wordlist\n// Reference: https://github.com/paulmillr/scure-bip39\nimport { wordlist } from '@scure/bip39/wordlists/english';\n\n// https://github.com/paulmillr/scure-bip32\n// Secure, audited & minimal implementation of BIP32 hierarchical deterministic (HD) wallets.\nimport { HDKey } from '@scure/bip32';\nimport { bytesToHex } from '@stacks/common';\nimport { encryptMnemonic } from '@stacks/encryption';\nimport { DerivationType } from '.';\nimport { deriveAccount, deriveWalletKeys } from './derive';\nimport { Wallet, getRootNode } from './models/common';\n\nexport type AllowedKeyEntropyBits = 128 | 256;\n\n/**\n * Generate a random 12 or 24 word mnemonic phrase.\n *\n * @example\n * ```ts\n * const phrase = randomSeedPhrase();\n * // \"warrior volume sport ... figure cake since\"\n * ```\n */\nexport function randomSeedPhrase(entropy: AllowedKeyEntropyBits = 256): string {\n  return generateMnemonic(wordlist, entropy);\n}\n\n/** @deprecated Use {@link randomSeedPhrase} instead */\nexport const generateSecretKey = randomSeedPhrase;\n\n/**\n * Generate a new {@link Wallet}.\n * @param secretKey A 12 or 24 word mnemonic phrase. Must be a valid bip39 mnemonic.\n * @param password A password used to encrypt the wallet\n */\nexport const generateWallet = async ({\n  secretKey,\n  password,\n}: {\n  secretKey: string;\n  password: string;\n}): Promise<Wallet> => {\n  const ciphertextBytes = await encryptMnemonic(secretKey, password);\n  const encryptedSecretKey = bytesToHex(ciphertextBytes);\n\n  const rootPrivateKey = await mnemonicToSeed(secretKey);\n  const rootNode = HDKey.fromMasterSeed(rootPrivateKey);\n  const walletKeys = await deriveWalletKeys(rootNode);\n\n  const wallet = {\n    ...walletKeys,\n    encryptedSecretKey,\n    accounts: [],\n    config: {\n      accounts: [],\n    },\n  };\n\n  return generateNewAccount(wallet);\n};\n\nexport const generateNewAccount = (wallet: Wallet) => {\n  const accountIndex = wallet.accounts.length;\n  const newAccount = deriveAccount({\n    rootNode: getRootNode(wallet),\n    index: accountIndex,\n    salt: wallet.salt,\n    stxDerivationType: DerivationType.Wallet,\n  });\n\n  return {\n    ...wallet,\n    accounts: [...wallet.accounts, newAccount],\n  };\n};\n","import { entropyToMnemonic, mnemonicToEntropy, validateMnemonic } from '@scure/bip39';\nimport { wordlist } from '@scure/bip39/wordlists/english';\nimport { bytesToHex, concatBytes, equals, hexToBytes } from '@stacks/common';\nimport { createCipher } from './aesCipher';\nimport { randomBytes } from './cryptoRandom';\nimport { hmacSha256 } from './ec';\nimport { createPbkdf2 } from './pbkdf2';\nimport { createSha2Hash } from './sha2Hash';\nexport async function encryptMnemonic(phrase, password, opts) {\n    let mnemonicEntropy;\n    try {\n        const entropyBytes = mnemonicToEntropy(phrase, wordlist);\n        mnemonicEntropy = bytesToHex(entropyBytes);\n    }\n    catch (error) {\n        console.error('Invalid mnemonic phrase provided');\n        console.error(error);\n        throw new Error('Not a valid bip39 mnemonic');\n    }\n    const plaintextNormalized = hexToBytes(mnemonicEntropy);\n    const pbkdf2 = await createPbkdf2();\n    const salt = opts?.getRandomBytes ? opts.getRandomBytes(16) : randomBytes(16);\n    const keysAndIV = await pbkdf2.derive(password, salt, 100000, 48, 'sha512');\n    const encKey = keysAndIV.slice(0, 16);\n    const macKey = keysAndIV.slice(16, 32);\n    const iv = keysAndIV.slice(32, 48);\n    const cipher = await createCipher();\n    const cipherText = await cipher.encrypt('aes-128-cbc', encKey, iv, plaintextNormalized);\n    const hmacPayload = concatBytes(salt, cipherText);\n    const hmacDigest = hmacSha256(macKey, hmacPayload);\n    return concatBytes(salt, hmacDigest, cipherText);\n}\nclass PasswordError extends Error {\n}\nasync function decryptMnemonicBytes(dataBytes, password) {\n    const salt = dataBytes.slice(0, 16);\n    const hmacSig = dataBytes.slice(16, 48);\n    const cipherText = dataBytes.slice(48);\n    const hmacPayload = concatBytes(salt, cipherText);\n    const pbkdf2 = await createPbkdf2();\n    const keysAndIV = await pbkdf2.derive(password, salt, 100000, 48, 'sha512');\n    const encKey = keysAndIV.slice(0, 16);\n    const macKey = keysAndIV.slice(16, 32);\n    const iv = keysAndIV.slice(32, 48);\n    const decipher = await createCipher();\n    const decryptedResult = await decipher.decrypt('aes-128-cbc', encKey, iv, cipherText);\n    const hmacDigest = hmacSha256(macKey, hmacPayload);\n    const sha2Hash = await createSha2Hash();\n    const hmacSigHash = await sha2Hash.digest(hmacSig);\n    const hmacDigestHash = await sha2Hash.digest(hmacDigest);\n    if (!equals(hmacSigHash, hmacDigestHash)) {\n        throw new PasswordError('Wrong password (HMAC mismatch)');\n    }\n    let mnemonic;\n    try {\n        mnemonic = entropyToMnemonic(decryptedResult, wordlist);\n    }\n    catch (error) {\n        console.error('Error thrown by `entropyToMnemonic`');\n        console.error(error);\n        throw new PasswordError('Wrong password (invalid plaintext)');\n    }\n    if (!validateMnemonic(mnemonic, wordlist)) {\n        throw new PasswordError('Wrong password (invalid plaintext)');\n    }\n    return mnemonic;\n}\nexport async function decryptMnemonic(data, password) {\n    const dataBytes = typeof data === 'string' ? hexToBytes(data) : data;\n    return await decryptMnemonicBytes(dataBytes, password);\n}\n//# sourceMappingURL=wallet.js.map","import { utf8ToBytes } from '@stacks/common';\nimport { decryptECIES, encryptECIES, signECDSA, } from './ec';\nimport { getPublicKeyFromPrivate } from './keys';\nexport async function encryptContent(content, options) {\n    const opts = Object.assign({}, options);\n    let privateKey;\n    if (!opts.publicKey) {\n        if (!opts.privateKey) {\n            throw new Error('Either public key or private key must be supplied for encryption.');\n        }\n        opts.publicKey = getPublicKeyFromPrivate(opts.privateKey);\n    }\n    const wasString = typeof opts.wasString === 'boolean' ? opts.wasString : typeof content === 'string';\n    const contentBytes = typeof content === 'string' ? utf8ToBytes(content) : content;\n    const cipherObject = await encryptECIES(opts.publicKey, contentBytes, wasString, opts.cipherTextEncoding);\n    let cipherPayload = JSON.stringify(cipherObject);\n    if (opts.sign) {\n        if (typeof opts.sign === 'string') {\n            privateKey = opts.sign;\n        }\n        else if (!privateKey) {\n            privateKey = opts.privateKey;\n        }\n        const signatureObject = signECDSA(privateKey, cipherPayload);\n        const signedCipherObject = {\n            signature: signatureObject.signature,\n            publicKey: signatureObject.publicKey,\n            cipherText: cipherPayload,\n        };\n        cipherPayload = JSON.stringify(signedCipherObject);\n    }\n    return cipherPayload;\n}\nexport function decryptContent(content, options) {\n    const opts = Object.assign({}, options);\n    if (!opts.privateKey) {\n        throw new Error('Private key is required for decryption.');\n    }\n    try {\n        const cipherObject = JSON.parse(content);\n        return decryptECIES(opts.privateKey, cipherObject);\n    }\n    catch (err) {\n        if (err instanceof SyntaxError) {\n            throw new Error('Failed to parse encrypted content JSON. The content may not ' +\n                'be encrypted. If using getFile, try passing { decrypt: false }.');\n        }\n        else {\n            throw err;\n        }\n    }\n}\n//# sourceMappingURL=encryption.js.map","import { decryptContent } from '@stacks/encryption';\nimport { createFetchFn, FetchFn } from '@stacks/common';\nimport { GaiaHubConfig } from '@stacks/storage';\nimport { deriveLegacyConfigPrivateKey } from '../derive';\nimport { Wallet, getRootNode } from './common';\n\nexport interface LegacyConfigApp {\n  origin: string;\n  scopes: string[];\n  lastLoginAt: number;\n  appIcon: string;\n  name: string;\n}\n\ninterface LegacyConfigIdentity {\n  username?: string;\n  address: string;\n  apps: {\n    [origin: string]: LegacyConfigApp;\n  };\n}\n\nexport interface LegacyWalletConfig {\n  identities: LegacyConfigIdentity[];\n  hideWarningForReusingIdentity?: boolean;\n}\n\n/** @deprecated legacy */\nexport async function fetchLegacyWalletConfig({\n  wallet,\n  gaiaHubConfig,\n  fetchFn = createFetchFn(),\n}: {\n  wallet: Wallet;\n  gaiaHubConfig: GaiaHubConfig;\n  fetchFn?: FetchFn;\n}) {\n  const rootNode = getRootNode(wallet);\n  const legacyConfigKey = deriveLegacyConfigPrivateKey(rootNode);\n  try {\n    const response = await fetchFn(\n      `${gaiaHubConfig.url_prefix}${gaiaHubConfig.address}/wallet-config.json`\n    );\n    if (!response.ok) return null;\n    const encrypted = await response.text();\n    const configJSON = (await decryptContent(encrypted, {\n      privateKey: legacyConfigKey,\n    })) as string;\n    const config: LegacyWalletConfig = JSON.parse(configJSON);\n    return config;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n","const config = {\n    network: {\n        layer1: 'placeholder',\n    },\n    logLevel: 'debug',\n};\nexport { config };\n//# sourceMappingURL=config.js.map","import { config } from './config';\nconst levels = ['debug', 'info', 'warn', 'error', 'none'];\nconst levelToInt = {};\nconst intToLevel = {};\nfor (let index = 0; index < levels.length; index++) {\n    const level = levels[index];\n    levelToInt[level] = index;\n    intToLevel[index] = level;\n}\nexport class Logger {\n    static error(message) {\n        if (!this.shouldLog('error'))\n            return;\n        console.error(this.logMessage('error', message));\n    }\n    static warn(message) {\n        if (!this.shouldLog('warn'))\n            return;\n        console.warn(this.logMessage('warn', message));\n    }\n    static info(message) {\n        if (!this.shouldLog('info'))\n            return;\n        console.log(this.logMessage('info', message));\n    }\n    static debug(message) {\n        if (!this.shouldLog('debug'))\n            return;\n        console.log(this.logMessage('debug', message));\n    }\n    static logMessage(level, message) {\n        return `[${level.toUpperCase()}] ${message}`;\n    }\n    static shouldLog(level) {\n        const currentLevel = levelToInt[config.logLevel];\n        return currentLevel <= levelToInt[level];\n    }\n}\n//# sourceMappingURL=logger.js.map","import { BadPathError, bytesToHex, ConflictError, DoesNotExist, Logger, megabytesToBytes, NotEnoughProofError, PayloadTooLargeError, PreconditionFailedError, PRIVATE_KEY_BYTES_COMPRESSED, utf8ToBytes, ValidationError, } from '@stacks/common';\nimport { ecSign, getPublicKeyFromPrivate, hashSha256Sync, publicKeyToBtcAddress, randomBytes, Signature, } from '@stacks/encryption';\nimport { createFetchFn } from '@stacks/common';\nimport { fromByteArray } from 'base64-js';\nimport { TokenSigner } from 'jsontokens';\nexport const BLOCKSTACK_GAIA_HUB_LABEL = 'blockstack-gaia-hub-config';\nexport async function uploadToGaiaHub(filename, contents, hubConfig, contentType = 'application/octet-stream', newFile = true, etag, dangerouslyIgnoreEtag, fetchFn = createFetchFn()) {\n    Logger.debug(`uploadToGaiaHub: uploading ${filename} to ${hubConfig.server}`);\n    const headers = {\n        'Content-Type': contentType,\n        Authorization: `bearer ${hubConfig.token}`,\n    };\n    if (!dangerouslyIgnoreEtag) {\n        if (newFile) {\n            headers['If-None-Match'] = '*';\n        }\n        else if (etag) {\n            headers['If-Match'] = etag;\n        }\n    }\n    const response = await fetchFn(`${hubConfig.server}/store/${hubConfig.address}/${filename}`, {\n        method: 'POST',\n        headers,\n        body: contents,\n    });\n    if (!response.ok) {\n        throw await getBlockstackErrorFromResponse(response, 'Error when uploading to Gaia hub.', hubConfig);\n    }\n    const responseText = await response.text();\n    return JSON.parse(responseText);\n}\nexport async function deleteFromGaiaHub(filename, hubConfig, fetchFn = createFetchFn()) {\n    Logger.debug(`deleteFromGaiaHub: deleting ${filename} from ${hubConfig.server}`);\n    const response = await fetchFn(`${hubConfig.server}/delete/${hubConfig.address}/${filename}`, {\n        method: 'DELETE',\n        headers: {\n            Authorization: `bearer ${hubConfig.token}`,\n        },\n    });\n    if (!response.ok) {\n        throw await getBlockstackErrorFromResponse(response, 'Error deleting file from Gaia hub.', hubConfig);\n    }\n}\nexport function getFullReadUrl(filename, hubConfig) {\n    return Promise.resolve(`${hubConfig.url_prefix}${hubConfig.address}/${filename}`);\n}\nfunction makeLegacyAuthToken(challengeText, signerKeyHex) {\n    let parsedChallenge;\n    try {\n        parsedChallenge = JSON.parse(challengeText);\n    }\n    catch (err) {\n        throw new Error('Failed in parsing legacy challenge text from the gaia hub.');\n    }\n    if (parsedChallenge[0] === 'gaiahub' && parsedChallenge[3] === 'blockstack_storage_please_sign') {\n        const digest = hashSha256Sync(utf8ToBytes(challengeText));\n        const compressedPrivateKey = signerKeyHex.length === PRIVATE_KEY_BYTES_COMPRESSED * 2 ? signerKeyHex : `${signerKeyHex}01`;\n        const signatureBytes = ecSign(digest, compressedPrivateKey);\n        const signature = Signature.fromCompact(bytesToHex(signatureBytes)).toDERHex();\n        const publickey = getPublicKeyFromPrivate(signerKeyHex);\n        const token = fromByteArray(utf8ToBytes(JSON.stringify({ publickey, signature })));\n        return token;\n    }\n    throw new Error('Failed to connect to legacy gaia hub. If you operate this hub, please update.');\n}\nfunction makeV1GaiaAuthToken(hubInfo, signerKeyHex, hubUrl, associationToken) {\n    const challengeText = hubInfo.challenge_text;\n    const handlesV1Auth = hubInfo.latest_auth_version && parseInt(hubInfo.latest_auth_version.slice(1), 10) >= 1;\n    const iss = getPublicKeyFromPrivate(signerKeyHex);\n    if (!handlesV1Auth) {\n        return makeLegacyAuthToken(challengeText, signerKeyHex);\n    }\n    const salt = bytesToHex(randomBytes(16));\n    const payload = {\n        gaiaChallenge: challengeText,\n        hubUrl,\n        iss,\n        salt,\n        associationToken: associationToken,\n    };\n    const token = new TokenSigner('ES256K', signerKeyHex).sign(payload);\n    return `v1:${token}`;\n}\nexport async function connectToGaiaHub(gaiaHubUrl, challengeSignerHex, associationToken, fetchFn = createFetchFn()) {\n    Logger.debug(`connectToGaiaHub: ${gaiaHubUrl}/hub_info`);\n    const response = await fetchFn(`${gaiaHubUrl}/hub_info`);\n    const hubInfo = await response.json();\n    const readURL = hubInfo.read_url_prefix;\n    const token = makeV1GaiaAuthToken(hubInfo, challengeSignerHex, gaiaHubUrl, associationToken);\n    const address = publicKeyToBtcAddress(getPublicKeyFromPrivate(challengeSignerHex));\n    return {\n        url_prefix: readURL,\n        max_file_upload_size_megabytes: hubInfo.max_file_upload_size_megabytes,\n        address,\n        token,\n        server: gaiaHubUrl,\n    };\n}\nexport async function getBucketUrl(gaiaHubUrl, appPrivateKey, fetchFn = createFetchFn()) {\n    const response = await fetchFn(`${gaiaHubUrl}/hub_info`);\n    const responseText = await response.text();\n    const responseJSON = JSON.parse(responseText);\n    const readURL = responseJSON.read_url_prefix;\n    const address = publicKeyToBtcAddress(getPublicKeyFromPrivate(appPrivateKey));\n    const bucketUrl = `${readURL}${address}/`;\n    return bucketUrl;\n}\nasync function getGaiaErrorResponse(response) {\n    let responseMsg = '';\n    let responseJson;\n    try {\n        responseMsg = await response.text();\n        try {\n            responseJson = JSON.parse(responseMsg);\n        }\n        catch (error) {\n        }\n    }\n    catch (error) {\n        Logger.debug(`Error getting bad http response text: ${error}`);\n    }\n    const status = response.status;\n    const statusText = response.statusText;\n    const body = responseJson || responseMsg;\n    return { status, statusText, body };\n}\nexport async function getBlockstackErrorFromResponse(response, errorMsg, hubConfig) {\n    if (response.ok) {\n        throw new Error('Cannot get a BlockstackError from a valid response.');\n    }\n    const gaiaResponse = await getGaiaErrorResponse(response);\n    if (gaiaResponse.status === 401) {\n        return new ValidationError(errorMsg, gaiaResponse);\n    }\n    else if (gaiaResponse.status === 402) {\n        return new NotEnoughProofError(errorMsg, gaiaResponse);\n    }\n    else if (gaiaResponse.status === 403) {\n        return new BadPathError(errorMsg, gaiaResponse);\n    }\n    else if (gaiaResponse.status === 404) {\n        throw new DoesNotExist(errorMsg, gaiaResponse);\n    }\n    else if (gaiaResponse.status === 409) {\n        return new ConflictError(errorMsg, gaiaResponse);\n    }\n    else if (gaiaResponse.status === 412) {\n        return new PreconditionFailedError(errorMsg, gaiaResponse);\n    }\n    else if (gaiaResponse.status === 413) {\n        const maxBytes = hubConfig && hubConfig.max_file_upload_size_megabytes\n            ? megabytesToBytes(hubConfig.max_file_upload_size_megabytes)\n            : 0;\n        return new PayloadTooLargeError(errorMsg, gaiaResponse, maxBytes);\n    }\n    else {\n        return new Error(errorMsg);\n    }\n}\n//# sourceMappingURL=hub.js.map","import { Account, Wallet } from './common';\nimport { GaiaHubConfig, connectToGaiaHub, uploadToGaiaHub } from '@stacks/storage';\nimport { decryptContent, encryptContent, getPublicKeyFromPrivate } from '@stacks/encryption';\nimport { createFetchFn, FetchFn } from '@stacks/common';\n\n/** @deprecated */\nexport interface ConfigApp {\n  origin: string;\n  scopes: string[];\n  lastLoginAt: number;\n  appIcon: string;\n  name: string;\n}\n\n/** @deprecated */\nexport interface ConfigAccount {\n  username?: string;\n  apps: {\n    [origin: string]: ConfigApp;\n  };\n}\n\n/** @deprecated */\nexport interface WalletConfig {\n  accounts: ConfigAccount[];\n  meta?: {\n    [key: string]: any;\n  };\n}\n\n/** @deprecated  */\nexport const createWalletGaiaConfig = async ({\n  gaiaHubUrl,\n  wallet,\n}: {\n  gaiaHubUrl: string;\n  wallet: Wallet;\n}): Promise<GaiaHubConfig> => {\n  return connectToGaiaHub(gaiaHubUrl, wallet.configPrivateKey);\n};\n\n/** @deprecated not used for anything relevant */\nexport const getOrCreateWalletConfig = async ({\n  wallet,\n  gaiaHubConfig,\n  skipUpload,\n  fetchFn = createFetchFn(),\n}: {\n  wallet: Wallet;\n  gaiaHubConfig: GaiaHubConfig;\n  skipUpload?: boolean;\n  fetchFn?: FetchFn;\n}): Promise<WalletConfig> => {\n  const config = await fetchWalletConfig({ wallet, gaiaHubConfig, fetchFn });\n  if (config) return config;\n  const newConfig = makeWalletConfig(wallet);\n  if (!skipUpload) {\n    await updateWalletConfig({ wallet, gaiaHubConfig });\n  }\n  return newConfig;\n};\n\n/** @deprecated not used for anything relevant */\nexport const fetchWalletConfig = async ({\n  wallet,\n  gaiaHubConfig,\n  fetchFn = createFetchFn(),\n}: {\n  wallet: Wallet;\n  gaiaHubConfig: GaiaHubConfig;\n  fetchFn?: FetchFn;\n}) => {\n  try {\n    const response = await fetchFn(\n      `${gaiaHubConfig.url_prefix}${gaiaHubConfig.address}/wallet-config.json`\n    );\n    if (!response.ok) return null;\n    const encrypted = await response.text();\n    const configJSON = (await decryptContent(encrypted, {\n      privateKey: wallet.configPrivateKey,\n    })) as string;\n    const config: WalletConfig = JSON.parse(configJSON);\n    return config;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};\n\n/** @deprecated not used for anything relevant */\nexport const updateWalletConfig = async ({\n  wallet,\n  walletConfig: _walletConfig,\n  gaiaHubConfig,\n}: {\n  wallet: Wallet;\n  walletConfig?: WalletConfig;\n  gaiaHubConfig: GaiaHubConfig;\n}) => {\n  const walletConfig = _walletConfig || makeWalletConfig(wallet);\n  const encrypted = await encryptWalletConfig({ wallet, walletConfig });\n  await uploadToGaiaHub(\n    'wallet-config.json',\n    encrypted,\n    gaiaHubConfig,\n    undefined,\n    undefined,\n    undefined,\n    true\n  );\n  return walletConfig;\n};\n\n/** @deprecated */\nexport function makeWalletConfig(wallet: Wallet): WalletConfig {\n  return {\n    accounts: wallet.accounts.map(account => ({\n      username: account.username,\n      apps: {},\n    })),\n  };\n}\n\n/** @deprecated */\nexport const encryptWalletConfig = async ({\n  wallet,\n  walletConfig,\n}: {\n  wallet: Wallet;\n  walletConfig: WalletConfig;\n}) => {\n  const publicKey = getPublicKeyFromPrivate(wallet.configPrivateKey);\n  const encrypted = await encryptContent(JSON.stringify(walletConfig), { publicKey });\n  return encrypted;\n};\n\n/** @deprecated */\nexport const updateWalletConfigWithApp = async ({\n  wallet,\n  account,\n  app,\n  gaiaHubConfig,\n  walletConfig,\n}: {\n  wallet: Wallet;\n  account: Account;\n  app: ConfigApp;\n  gaiaHubConfig: GaiaHubConfig;\n  walletConfig: WalletConfig;\n}) => {\n  wallet.accounts.forEach((account, index) => {\n    const configApp = walletConfig.accounts[index];\n    if (configApp) {\n      configApp.apps = configApp.apps || {};\n      configApp.username = account.username;\n      walletConfig.accounts[index] = configApp;\n    } else {\n      walletConfig.accounts.push({\n        username: account.username,\n        apps: {},\n      });\n    }\n  });\n\n  const configAccount = walletConfig.accounts[account.index];\n  configAccount.apps = configAccount.apps || {};\n  configAccount.apps[app.origin] = app;\n  walletConfig.accounts[account.index] = configAccount;\n  await updateWalletConfig({ wallet, walletConfig: walletConfig, gaiaHubConfig });\n  return walletConfig;\n};\n","import { NetworkClientParam, clientFromNetwork, networkFrom } from '@stacks/network';\nimport { DerivationType, deriveStxPrivateKey, fetchUsernameForAccountByDerivationType } from '..';\nimport { deriveAccount, deriveLegacyConfigPrivateKey } from '../derive';\nimport { connectToGaiaHubWithConfig, getHubInfo } from '../utils';\nimport { Wallet, getRootNode } from './common';\nimport { fetchLegacyWalletConfig } from './legacy-wallet-config';\nimport { WalletConfig, fetchWalletConfig, updateWalletConfig } from './wallet-config';\n\nexport interface LockedWallet {\n  encryptedSecretKey: string;\n}\n\n/**\n * Restore wallet accounts by checking for encrypted WalletConfig files,\n * stored in Gaia.\n *\n * This helps provide a better UX for users, so we can keep track of accounts they've\n * created, and usernames they've used.\n * @deprecated The usage of storing wallet related information on Gaia isn't widely used.\n */\nexport async function restoreWalletAccounts({\n  wallet,\n  gaiaHubUrl,\n  network = 'mainnet',\n  client: _client,\n}: {\n  wallet: Wallet;\n  gaiaHubUrl: string;\n} & NetworkClientParam): Promise<Wallet> {\n  const client = Object.assign({}, clientFromNetwork(networkFrom(network)), _client);\n\n  const hubInfo = await getHubInfo(gaiaHubUrl, client.fetch);\n  const rootNode = getRootNode(wallet);\n  const legacyGaiaConfig = connectToGaiaHubWithConfig({\n    hubInfo,\n    privateKey: deriveLegacyConfigPrivateKey(getRootNode(wallet)),\n    gaiaHubUrl,\n  });\n  const currentGaiaConfig = connectToGaiaHubWithConfig({\n    hubInfo,\n    privateKey: wallet.configPrivateKey,\n    gaiaHubUrl,\n  });\n\n  const [walletConfig, legacyWalletConfig] = await Promise.all([\n    fetchWalletConfig({ wallet, gaiaHubConfig: currentGaiaConfig, fetchFn: client.fetch }),\n    fetchLegacyWalletConfig({ wallet, gaiaHubConfig: legacyGaiaConfig, fetchFn: client.fetch }),\n  ]);\n  // Restore from existing config\n  if (\n    walletConfig &&\n    walletConfig.accounts.length >= (legacyWalletConfig?.identities.length || 0)\n  ) {\n    const newAccounts = await Promise.all(\n      walletConfig.accounts.map(async (_, index) => {\n        let existingAccount = wallet.accounts[index];\n        const { username } = await fetchUsernameForAccountByDerivationType({\n          rootNode,\n          index,\n          derivationType: DerivationType.Wallet,\n          network,\n        });\n        if (!existingAccount) {\n          existingAccount = deriveAccount({\n            rootNode,\n            index,\n            salt: wallet.salt,\n            stxDerivationType: DerivationType.Wallet,\n          });\n        } else {\n          existingAccount = {\n            ...existingAccount,\n            stxPrivateKey: deriveStxPrivateKey({\n              rootNode,\n              index,\n            }),\n          };\n        }\n        return {\n          ...existingAccount,\n          username,\n        };\n      })\n    );\n\n    return {\n      ...wallet,\n      accounts: newAccounts,\n    };\n  }\n\n  // Restore from legacy config, and upload a new one\n  if (legacyWalletConfig) {\n    const newAccounts = await Promise.all(\n      legacyWalletConfig.identities.map(async (_, index) => {\n        let existingAccount = wallet.accounts[index];\n        const { username } = await fetchUsernameForAccountByDerivationType({\n          rootNode,\n          index,\n          derivationType: DerivationType.Wallet,\n          network,\n        });\n        if (!existingAccount) {\n          existingAccount = deriveAccount({\n            rootNode,\n            index,\n            salt: wallet.salt,\n            stxDerivationType: DerivationType.Wallet,\n          });\n        } else {\n          existingAccount = {\n            ...existingAccount,\n            stxPrivateKey: deriveStxPrivateKey({\n              rootNode,\n              index,\n            }),\n          };\n        }\n        return {\n          ...existingAccount,\n          username,\n        };\n      })\n    );\n\n    const meta: Record<string, boolean> = {};\n    if (legacyWalletConfig.hideWarningForReusingIdentity) {\n      meta.hideWarningForReusingIdentity = true;\n    }\n    const newConfig: WalletConfig = {\n      accounts: legacyWalletConfig.identities.map(identity => ({\n        username: identity.username,\n        apps: identity.apps,\n      })),\n      meta,\n    };\n\n    await updateWalletConfig({\n      wallet,\n      walletConfig: newConfig,\n      gaiaHubConfig: currentGaiaConfig,\n    });\n\n    return {\n      ...wallet,\n      accounts: newAccounts,\n    };\n  }\n\n  return wallet;\n}\n","import { InvalidDIDError } from '@stacks/common';\nexport function makeDIDFromAddress(address) {\n    return `did:btc-addr:${address}`;\n}\nexport function makeDIDFromPublicKey(publicKey) {\n    return `did:ecdsa-pub:${publicKey}`;\n}\nexport function getDIDType(decentralizedID) {\n    const didParts = decentralizedID.split(':');\n    if (didParts.length !== 3) {\n        throw new InvalidDIDError('Decentralized IDs must have 3 parts');\n    }\n    if (didParts[0].toLowerCase() !== 'did') {\n        throw new InvalidDIDError('Decentralized IDs must start with \"did\"');\n    }\n    return didParts[1].toLowerCase();\n}\nexport function getAddressFromDID(decentralizedID) {\n    if (decentralizedID) {\n        const didType = getDIDType(decentralizedID);\n        if (didType === 'btc-addr') {\n            return decentralizedID.split(':')[2];\n        }\n        else {\n            return undefined;\n        }\n    }\n    return undefined;\n}\n//# sourceMappingURL=dids.js.map","import { bytesToHex, bytesToUtf8, getGlobalObject, hexToBytes, makeUUID4, nextMonth, utf8ToBytes, } from '@stacks/common';\nimport { decryptECIES, encryptECIES, makeECPrivateKey, publicKeyToBtcAddress, } from '@stacks/encryption';\nimport { SECP256K1Client, TokenSigner } from 'jsontokens';\nimport { DEFAULT_SCOPE } from './constants';\nimport { makeDIDFromAddress } from './dids';\nconst VERSION = '1.4.0';\nexport function generateTransitKey() {\n    const transitKey = makeECPrivateKey();\n    return transitKey;\n}\nexport const makeAuthRequest = makeAuthRequestToken;\nexport function makeAuthRequestToken(transitPrivateKey, redirectURI, manifestURI, scopes = DEFAULT_SCOPE.slice(), appDomain, expiresAt = nextMonth().getTime(), extraParams = {}) {\n    const getWindowOrigin = (paramName) => {\n        const location = getGlobalObject('location', {\n            throwIfUnavailable: true,\n            usageDesc: `makeAuthRequest([${paramName}=undefined])`,\n        });\n        return location?.origin;\n    };\n    if (!redirectURI) {\n        redirectURI = `${getWindowOrigin('redirectURI')}/`;\n    }\n    if (!manifestURI) {\n        manifestURI = `${getWindowOrigin('manifestURI')}/manifest.json`;\n    }\n    if (!appDomain) {\n        appDomain = getWindowOrigin('appDomain');\n    }\n    const payload = Object.assign({}, extraParams, {\n        jti: makeUUID4(),\n        iat: Math.floor(new Date().getTime() / 1000),\n        exp: Math.floor(expiresAt / 1000),\n        iss: null,\n        public_keys: [],\n        domain_name: appDomain,\n        manifest_uri: manifestURI,\n        redirect_uri: redirectURI,\n        version: VERSION,\n        do_not_include_profile: true,\n        supports_hub_url: true,\n        scopes,\n    });\n    const publicKey = SECP256K1Client.derivePublicKey(transitPrivateKey);\n    payload.public_keys = [publicKey];\n    const address = publicKeyToBtcAddress(publicKey);\n    payload.iss = makeDIDFromAddress(address);\n    const tokenSigner = new TokenSigner('ES256k', transitPrivateKey);\n    const token = tokenSigner.sign(payload);\n    return token;\n}\nexport async function encryptPrivateKey(publicKey, privateKey) {\n    const encryptedObj = await encryptECIES(publicKey, utf8ToBytes(privateKey), true);\n    const encryptedJSON = JSON.stringify(encryptedObj);\n    return bytesToHex(utf8ToBytes(encryptedJSON));\n}\nexport async function decryptPrivateKey(privateKey, hexedEncrypted) {\n    const unhexedString = bytesToUtf8(hexToBytes(hexedEncrypted));\n    const encryptedObj = JSON.parse(unhexedString);\n    const decrypted = await decryptECIES(privateKey, encryptedObj);\n    if (typeof decrypted !== 'string') {\n        throw new Error('Unable to correctly decrypt private key');\n    }\n    else {\n        return decrypted;\n    }\n}\nexport async function makeAuthResponse(privateKey, profile = {}, metadata, coreToken = null, appPrivateKey = null, expiresAt = nextMonth().getTime(), transitPublicKey = null, hubUrl = null, blockstackAPIUrl = null, associationToken = null, appPrivateKeyFromWalletSalt = null) {\n    const publicKey = SECP256K1Client.derivePublicKey(privateKey);\n    const address = publicKeyToBtcAddress(publicKey);\n    let privateKeyPayload = appPrivateKey;\n    let coreTokenPayload = coreToken;\n    let additionalProperties = {};\n    if (appPrivateKey !== undefined && appPrivateKey !== null) {\n        if (transitPublicKey !== undefined && transitPublicKey !== null) {\n            privateKeyPayload = await encryptPrivateKey(transitPublicKey, appPrivateKey);\n            if (coreToken !== undefined && coreToken !== null) {\n                coreTokenPayload = await encryptPrivateKey(transitPublicKey, coreToken);\n            }\n        }\n        additionalProperties = {\n            email: metadata?.email ? metadata.email : null,\n            profile_url: metadata?.profileUrl ? metadata.profileUrl : null,\n            hubUrl,\n            blockstackAPIUrl,\n            associationToken,\n            version: VERSION,\n        };\n    }\n    else {\n    }\n    const payload = Object.assign({}, {\n        jti: makeUUID4(),\n        iat: Math.floor(new Date().getTime() / 1000),\n        exp: Math.floor(expiresAt / 1000),\n        iss: makeDIDFromAddress(address),\n        private_key: privateKeyPayload,\n        public_keys: [publicKey],\n        appPrivateKeyFromWalletSalt,\n        profile,\n        core_token: coreTokenPayload,\n    }, additionalProperties);\n    const tokenSigner = new TokenSigner('ES256k', privateKey);\n    return tokenSigner.sign(payload);\n}\n//# sourceMappingURL=messages.js.map","import { getPublicKeyFromPrivate } from '@stacks/encryption';\nimport { FetchFn, createFetchFn } from '@stacks/common';\nimport {\n  PublicPersonProfile,\n  PublicProfileBase,\n  signProfileToken,\n  wrapProfileToken,\n} from '@stacks/profile';\nimport { GaiaHubConfig, connectToGaiaHub, uploadToGaiaHub } from '@stacks/storage';\nimport { getProfileURLFromZoneFile } from '../utils';\nimport { Account, getGaiaAddress } from './common';\n\nexport const DEFAULT_PROFILE: PublicPersonProfile = {\n  '@type': 'Person',\n  '@context': 'http://schema.org',\n};\n\nexport const DEFAULT_PROFILE_FILE_NAME = 'profile.json';\n\nexport const fetchProfileFromUrl = async (\n  profileUrl: string,\n  fetchFn: FetchFn = createFetchFn()\n) => {\n  try {\n    const res = await fetchFn(profileUrl);\n    if (res.ok) {\n      const json = await res.json();\n      const { decodedToken } = json[0];\n      return decodedToken.payload?.claim as PublicProfileBase;\n    }\n    if (res.status === 404) return null;\n    throw new Error('Network error when fetching profile');\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const fetchAccountProfileUrl = async ({\n  account,\n  gaiaHubUrl,\n}: {\n  account: Account;\n  gaiaHubUrl: string;\n}) => {\n  if (account.username) {\n    try {\n      const url = await getProfileURLFromZoneFile(account.username);\n      if (url) return url;\n    } catch (error) {\n      if (process.env.NODE_ENV !== 'test') {\n        console.warn('Error fetching profile URL from zone file:', error);\n      }\n    }\n  }\n  return `${gaiaHubUrl}${getGaiaAddress(account)}/profile.json`;\n};\n\nexport function signProfileForUpload({\n  profile,\n  account,\n}: {\n  profile: PublicProfileBase;\n  account: Account;\n}) {\n  // the profile is always signed with the stx private key\n  // because a username (if any) is owned by the stx private key\n  const privateKey = account.stxPrivateKey;\n  const publicKey = getPublicKeyFromPrivate(privateKey.slice(0, 64));\n\n  const token = signProfileToken(profile, privateKey, { publicKey });\n  const tokenRecord = wrapProfileToken(token);\n  const tokenRecords = [tokenRecord];\n  return JSON.stringify(tokenRecords, null, 2);\n}\n\nexport async function uploadProfile({\n  gaiaHubUrl,\n  account,\n  signedProfileTokenData,\n  gaiaHubConfig,\n}: {\n  gaiaHubUrl: string;\n  account: Account;\n  signedProfileTokenData: string;\n  gaiaHubConfig?: GaiaHubConfig;\n}) {\n  const identityHubConfig =\n    gaiaHubConfig || (await connectToGaiaHub(gaiaHubUrl, account.dataPrivateKey));\n\n  await uploadToGaiaHub(\n    DEFAULT_PROFILE_FILE_NAME,\n    signedProfileTokenData,\n    identityHubConfig,\n    undefined,\n    undefined,\n    undefined,\n    true\n  );\n}\n\nexport const signAndUploadProfile = async ({\n  profile,\n  gaiaHubUrl,\n  account,\n  gaiaHubConfig,\n}: {\n  profile: PublicProfileBase;\n  gaiaHubUrl: string;\n  account: Account;\n  gaiaHubConfig?: GaiaHubConfig;\n}) => {\n  const signedProfileTokenData = signProfileForUpload({ profile, account });\n  await uploadProfile({ gaiaHubUrl, account, signedProfileTokenData, gaiaHubConfig });\n};\n","import { decodeToken, SECP256K1Client, TokenSigner, TokenVerifier } from 'jsontokens';\nimport { nextYear, makeUUID4 } from '@stacks/common';\nimport { getAddressFromPublicKey } from '@stacks/transactions';\nexport function signProfileToken(profile, privateKey, subject, issuer, signingAlgorithm = 'ES256K', issuedAt = new Date(), expiresAt = nextYear()) {\n    if (signingAlgorithm !== 'ES256K') {\n        throw new Error('Signing algorithm not supported');\n    }\n    const publicKey = SECP256K1Client.derivePublicKey(privateKey);\n    if (!subject) {\n        subject = { publicKey };\n    }\n    if (!issuer) {\n        issuer = { publicKey };\n    }\n    const tokenSigner = new TokenSigner(signingAlgorithm, privateKey);\n    const payload = {\n        jti: makeUUID4(),\n        iat: issuedAt.toISOString(),\n        exp: expiresAt.toISOString(),\n        subject,\n        issuer,\n        claim: profile,\n    };\n    return tokenSigner.sign(payload);\n}\nexport function wrapProfileToken(token) {\n    return {\n        token,\n        decodedToken: decodeToken(token),\n    };\n}\nexport function verifyProfileToken(token, publicKeyOrAddress) {\n    const decodedToken = decodeToken(token);\n    const payload = decodedToken.payload;\n    if (typeof payload === 'string') {\n        throw new Error('Unexpected token payload type of string');\n    }\n    if (payload.hasOwnProperty('subject') && payload.subject) {\n        if (!payload.subject.hasOwnProperty('publicKey')) {\n            throw new Error(\"Token doesn't have a subject public key\");\n        }\n    }\n    else {\n        throw new Error(\"Token doesn't have a subject\");\n    }\n    if (payload.hasOwnProperty('issuer') && payload.issuer) {\n        if (!payload.issuer.hasOwnProperty('publicKey')) {\n            throw new Error(\"Token doesn't have an issuer public key\");\n        }\n    }\n    else {\n        throw new Error(\"Token doesn't have an issuer\");\n    }\n    if (!payload.hasOwnProperty('claim')) {\n        throw new Error(\"Token doesn't have a claim\");\n    }\n    const issuerPublicKey = payload.issuer.publicKey;\n    const address = getAddressFromPublicKey(issuerPublicKey);\n    if (publicKeyOrAddress === issuerPublicKey) {\n    }\n    else if (publicKeyOrAddress === address) {\n    }\n    else {\n        throw new Error('Token issuer public key does not match the verifying value');\n    }\n    const tokenVerifier = new TokenVerifier(decodedToken.header.alg, issuerPublicKey);\n    if (!tokenVerifier) {\n        throw new Error('Invalid token verifier');\n    }\n    const tokenVerified = tokenVerifier.verify(token);\n    if (!tokenVerified) {\n        throw new Error('Token verification failed');\n    }\n    return decodedToken;\n}\nexport function extractProfile(token, publicKeyOrAddress = null) {\n    let decodedToken;\n    if (publicKeyOrAddress) {\n        decodedToken = verifyProfileToken(token, publicKeyOrAddress);\n    }\n    else {\n        decodedToken = decodeToken(token);\n    }\n    let profile = {};\n    if (decodedToken.hasOwnProperty('payload')) {\n        const payload = decodedToken.payload;\n        if (typeof payload === 'string') {\n            throw new Error('Unexpected token payload type of string');\n        }\n        if (payload.hasOwnProperty('claim')) {\n            profile = payload.claim;\n        }\n    }\n    return profile;\n}\n//# sourceMappingURL=profileTokens.js.map","// https://github.com/paulmillr/scure-bip32\n// Secure, audited & minimal implementation of BIP32 hierarchical deterministic (HD) wallets.\nimport { HDKey } from '@scure/bip32';\nimport { makeAuthResponse as _makeAuthResponse } from '@stacks/auth';\nimport { bytesToHex, utf8ToBytes } from '@stacks/common';\n\nimport { FetchFn, createFetchFn } from '@stacks/common';\nimport {\n  getPublicKeyFromPrivate,\n  hashCode,\n  hashSha256Sync,\n  publicKeyToBtcAddress,\n} from '@stacks/encryption';\nimport { NetworkParam, StacksNetwork, StacksNetworkName } from '@stacks/network';\nimport { getAddressFromPrivateKey } from '@stacks/transactions';\nimport {\n  HubInfo,\n  connectToGaiaHubWithConfig,\n  getHubInfo,\n  makeGaiaAssociationToken,\n} from '../utils';\nimport { Account, HARDENED_OFFSET } from './common';\nimport {\n  DEFAULT_PROFILE,\n  fetchAccountProfileUrl,\n  fetchProfileFromUrl,\n  signAndUploadProfile,\n} from './profile';\nimport { PublicProfileBase } from '@stacks/profile';\n\nexport function getStxAddress(\n  account: Account,\n  network?: StacksNetworkName | StacksNetwork\n): string;\nexport function getStxAddress({\n  account,\n  network = 'mainnet',\n}: {\n  account: Account;\n} & NetworkParam): string;\nexport function getStxAddress(\n  accountOrOptions: Account | ({ account: Account } & NetworkParam),\n  network: StacksNetworkName | StacksNetwork = 'mainnet'\n): string {\n  if ('account' in accountOrOptions) {\n    const { account, network = 'mainnet' } = accountOrOptions;\n    return getAddressFromPrivateKey(account.stxPrivateKey, network);\n  }\n\n  return getAddressFromPrivateKey(accountOrOptions.stxPrivateKey, network);\n}\n\n/**\n * Get the display name of an account.\n *\n * If the account has a username, it will return the first part of the username, so `myname.id` => `myname`, and\n * `myname.blockstack.id` => `myname`.\n *\n * If the account has no username, it returns `Account ${acount.index}`\n *\n */\nexport const getAccountDisplayName = (account: Account) => {\n  if (account.username) {\n    return account.username.split('.')[0];\n  }\n  return `Account ${account.index + 1}`;\n};\n\nexport const getAppPrivateKey = ({\n  account,\n  appDomain,\n}: {\n  account: Account;\n  appDomain: string;\n}) => {\n  const hashBytes = hashSha256Sync(utf8ToBytes(`${appDomain}${account.salt}`));\n  const hash = bytesToHex(hashBytes);\n  const appIndex = hashCode(hash);\n  const appsNode = HDKey.fromExtendedKey(account.appsKey);\n  const appKeychain = appsNode.deriveChild(appIndex + HARDENED_OFFSET);\n  if (!appKeychain.privateKey) throw 'Needs private key';\n  return bytesToHex(appKeychain.privateKey);\n};\n\n/** @internal helper */\nasync function optionalGaiaProfileData({\n  gaiaHubUrl,\n  fetchFn,\n  account,\n}: {\n  gaiaHubUrl: string;\n  fetchFn: FetchFn;\n  account: Account;\n}): Promise<{\n  hubInfo?: HubInfo;\n  profileUrl?: string;\n  profile?: PublicProfileBase | null;\n}> {\n  const hubInfo = await getHubInfo(gaiaHubUrl, fetchFn).catch(() => undefined);\n  if (!hubInfo) return {}; // keep data undefined if hub is not available\n\n  const profileUrl = await fetchAccountProfileUrl({ account, gaiaHubUrl: hubInfo.read_url_prefix });\n  const profile = (await fetchProfileFromUrl(profileUrl, fetchFn)) || DEFAULT_PROFILE;\n  return { hubInfo, profileUrl, profile };\n}\n\nexport const makeAuthResponse = async ({\n  account,\n  appDomain,\n  transitPublicKey,\n  scopes = [],\n  gaiaHubUrl,\n  appPrivateKeyFromWalletSalt = null,\n  additionalData = {},\n  fetchFn = createFetchFn(),\n}: {\n  account: Account;\n  appDomain: string;\n  transitPublicKey: string;\n  scopes?: string[];\n  gaiaHubUrl: string;\n  appPrivateKeyFromWalletSalt?: string | null;\n  additionalData?: Record<string, any>;\n  fetchFn?: FetchFn;\n}) => {\n  const appPrivateKey = getAppPrivateKey({ account, appDomain });\n\n  const { hubInfo, profileUrl, profile } = await optionalGaiaProfileData({\n    gaiaHubUrl,\n    fetchFn,\n    account,\n  });\n\n  if (scopes.includes('publish_data') && hubInfo && profile) {\n    if (!profile.apps) {\n      profile.apps = {};\n    }\n    const publicKey = getPublicKeyFromPrivate(appPrivateKey);\n    const address = publicKeyToBtcAddress(publicKey);\n    const storageUrl = `${hubInfo.read_url_prefix}${address}/`;\n    profile.apps[appDomain] = storageUrl;\n    if (!profile.appsMeta) {\n      profile.appsMeta = {};\n    }\n    profile.appsMeta[appDomain] = {\n      storage: storageUrl,\n      publicKey,\n    };\n    const gaiaHubConfig = connectToGaiaHubWithConfig({\n      hubInfo,\n      privateKey: account.dataPrivateKey,\n      gaiaHubUrl,\n    });\n    await signAndUploadProfile({ profile, account, gaiaHubUrl, gaiaHubConfig });\n  }\n\n  const compressedAppPublicKey = getPublicKeyFromPrivate(appPrivateKey.slice(0, 64));\n  const associationToken = makeGaiaAssociationToken({\n    privateKey: account.dataPrivateKey,\n    childPublicKeyHex: compressedAppPublicKey,\n  });\n\n  return _makeAuthResponse(\n    account.dataPrivateKey,\n    {\n      ...(profile || {}),\n      stxAddress: {\n        testnet: getStxAddress({ account, network: 'testnet' }),\n        mainnet: getStxAddress({ account, network: 'mainnet' }),\n      },\n      ...additionalData,\n    },\n    profileUrl ? { profileUrl } : null,\n    undefined,\n    appPrivateKey,\n    undefined,\n    transitPublicKey,\n    gaiaHubUrl,\n    undefined,\n    associationToken,\n    appPrivateKeyFromWalletSalt\n  );\n};\n","import { Signature, verify } from '@noble/secp256k1';\nexport { Signature, verify as verifySignature };\nexport function getAesCbcOutputLength(inputByteLength) {\n    const cipherTextLength = (Math.floor(inputByteLength / 16) + 1) * 16;\n    return cipherTextLength;\n}\nexport function getBase64OutputLength(inputByteLength) {\n    const encodedLength = Math.ceil(inputByteLength / 3) * 4;\n    return encodedLength;\n}\nexport function hashCode(string) {\n    let hash = 0;\n    if (string.length === 0)\n        return hash;\n    for (let i = 0; i < string.length; i++) {\n        const character = string.charCodeAt(i);\n        hash = (hash << 5) - hash + character;\n        hash &= hash;\n    }\n    return hash & 0x7fffffff;\n}\n//# sourceMappingURL=utils.js.map"],"names":["root","factory","exports","module","define","amd","this","leafPrototypes","getProto","number","n","Number","isSafeInteger","Error","bool","b","bytes","lengths","Uint8Array","TypeError","length","includes","hash","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","out","min","Object","defineProperty","value","assert","SHA2","_assert_js_1","utils_js_1","Hash","constructor","padOffset","isLE","super","pos","buffer","view","createView","update","data","default","len","toBytes","take","Math","set","subarray","process","dataView","roundClean","digestInto","fill","i","byteOffset","setBigUint64","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32","oview","outLen","state","get","digest","res","slice","destroy","_cloneInto","to","add","toBig","split","fromBig","U32_MASK64","le","lst","Ah","Uint32Array","Al","Bh","Bl","u64","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","crypto","node","undefined","web","self","hmac","HMAC","_key","key","iHash","pad","oHash","buf","getPrototypeOf","message","pbkdf2Async","pbkdf2","hmac_js_1","pbkdf2Init","_password","_salt","_opts","opts","checkOpts","dkLen","asyncTick","c","password","salt","DK","PRF","PRFSalt","pbkdf2Output","prfW","u","arr","ti","Ti","setInt32","ui","async","asyncLoop","sha224","sha256","_sha2_js_1","Maj","a","SHA256_K","IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","offset","getUint32","W15","W2","s0","rotr","s1","T1","T2","SHA224","wrapConstructor","sha384","sha512_256","sha512_224","sha512","SHA512","_u64_js_1","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","randomBytes","wrapConstructorWithOpts","concatBytes","utf8ToBytes","nextTick","hexToBytes","bytesToHex","u32","u8","crypto_1","byteLength","floor","DataView","word","shift","hexes","Array","from","v","toString","padStart","str","TextEncoder","encode","uint8a","hex","array","j","hexByte","byte","parseInt","isNaN","iters","tick","cb","ts","Date","now","diff","arrays","every","reduce","result","clone","defaults","obj","prototype","call","assign","hashConstructor","hashC","tmp","hashCons","msg","bytesLength","getRandomValues","utils","schnorr","verify","signSync","sign","getSharedSecret","recoverPublicKey","getPublicKey","Signature","Point","CURVE","nodeCrypto","_0n","_1n","_2n","_3n","_8n","freeze","P","Gx","Gy","beta","divNearest","endo","splitScalar","k","a1","b1","a2","b2","POW_2_128","c1","c2","k1","mod","k2","k1neg","k2neg","fieldLen","groupLen","compressedLen","uncompressedLen","weierstrass","x","x2","x3","USE_ENDOMORPHISM","ShaError","assertJacPoint","other","JacobianPoint","y","z","fromAffine","p","equals","ZERO","toAffineBatch","points","toInv","nums","scratch","inverted","invert","acc","num","reduceRight","invertBatch","toAffine","normalizeZ","X1","Y1","Z1","X2","Y2","Z2","Z1Z1","Z2Z2","U1","U2","S1","S2","negate","double","x1b","X3","Y3","Z3","r","HH","HHH","V","subtract","multiplyUnsafe","scalar","P0","normalizeScalar","d","k1p","k2p","precomputeWindow","W","windows","base","window","push","wNAF","affinePoint","BASE","_WINDOW_SIZE","precomputes","pointPrecomputes","f","windowSize","mask","maxNumber","shiftBy","wbits","offset1","offset2","abs","cond1","cond2","constTimeNegate","multiply","point","fake","f1p","f2p","invZ","is0","iz1","iz2","iz3","ax","ay","zz","condition","item","neg","WeakMap","_setWindowSize","delete","hasEvenY","fromCompressedHex","isShort","bytesToNumber","isValidFieldElement","_6n","_11n","_22n","_23n","_44n","_88n","b3","b6","pow2","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","rt","sqrtMod","isYOdd","assertValidity","fromUncompressedHex","fromHex","ensureBytes","header","fromPrivateKey","privateKey","normalizePrivateKey","fromSignature","msgHash","signature","recovery","normalizeSignature","truncateHash","radj","rinv","u1","u2","prefix","R","numTo32bStr","Q","multiplyAndAddUnsafe","toRawBytes","isCompressed","toHex","toHexX","toRawX","left","aP","bQ","sum","sliceDER","parseDERInt","fromCompact","name","hexToNumber","fromDER","sBytes","rBytesLeft","parseDERSignature","isWithinCurveOrder","hasHighS","HALF","normalizeS","toDERRawBytes","toDERHex","sHex","numberToHexUnpadded","rHex","sHexL","rHexL","sLen","rLen","toCompactRawBytes","toCompactHex","POW_2_256","numTo32b","power","modulo","q","m","truncateOnly","delta","bits2int_2","_sha256Sync","_hmacSha256Sync","HmacDrbg","hashLen","qByteLen","counter","values","hmacSha256","hmacSync","checkSync","incr","reseed","seed","reseedSync","generate","sl","generateSync","kmdToSig","kBytes","lowS","kinv","sig","normalizePublicKey","publicKey","error","isProbPub","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","e","finalizeSig","recSig","der","recovered","canonical","hashed","privateA","publicB","privKey","drbg","vopts","strict","schnorrChallengeFinalize","ch","sinv","SchnorrSignature","InternalSchnorrSignature","auxRand","getScalar","px","rand","priv","initNonce","t0h","finalizeNonce","k0h","k0","rx","calc","tag","taggedHash","t","TAGS","aux","nonce","challenge","schnorrVerify","calcSync","taggedHashSync","schnorrVerifySync","initSchnorrVerify","raw","finalizeSchnorrVerify","verifySync","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","minLen","randomPrivateKey","precompute","cached","messages","subtle","createHash","forEach","ckey","importKey","createHmac","sha256Sync","hmacSha256Sync","tagP","tagH","charCodeAt","_JacobianPoint","defineProperties","configurable","val","assertNumber","chain","args","wrap","reverse","decode","alphabet","digits","isArray","input","letter","index","indexOf","join","separator","padding","bits","chr","end","normalize","fn","convertRadix","carry","done","digit","digitBase","stringToBytes","bytesToString","utf8","bech32m","bech32","base58check","base58xmr","base58xrp","base58flickr","base58","base64url","base64","base32crockford","base32hex","base32","base16","gcd","radix2carry","convertRadix2","radix","radix2","revPadding","unsafeWrapper","apply","checksum","payload","newChecksum","oldChecksum","toUpperCase","replace","genBase58","abc","XMR_BLOCK_LEN","block","concat","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","words","encodingConst","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","lowered","toLowerCase","sepIndex","lastIndexOf","endsWith","actualLength","decodeToBytes","decodeUnsafe","TextDecoder","CODERS","coderTypeError","keys","type","hasOwnProperty","_assert_1","pbkdf2_1","sha256_1","sha512_1","utils_1","base_1","nfkd","norm","assertEntropy","entropy","wordlist","strength","getCoder","isJapanese","entropyToMnemonic","calcChecksum","bitsLeft","mnemonic","passphrase","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","log","iFACTOR","source","psz","zeroes","size","b256","it3","it4","vch","ArrayBuffer","isView","pbegin","pend","b58","it1","it2","repeat","string","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","Arr","_byteLength","curByte","revLookup","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","code","start","basex","c32ToB58","b58ToC32","c32addressDecode","c32address","versions","checksum_1","mainnet","p2pkh","p2sh","testnet","ADDR_BITCOIN_TO_STACKS","ADDR_STACKS_TO_BITCOIN","version","hash160hex","match","c32checkEncode","c32addr","c32checkDecode","b58check","addrInfo","hash160String","addrVersion","stacksVersion","c32string","bitcoinVersion","dataBytes","prefixBytes","check","encoding_1","c32checksum","dataHex","dataHash","versionHex","checksumHex","c32str","c32encode","c32","c32data","c32normalize","c32decode","versionChar","substring","c32input","inputHex","minLength","currentCode","nextCode","nextBits","nextLowBits","curC32Digit","unshift","C32leadingZeros","zeroPrefix","numLeadingZeroBytesInHex","count","numLeadingZeroBytes","carryBits","currentValue","currentHexDigit","hexLeadingZeros","hexStr","address_1","enumerable","unescape","escape","base64_js_1","base64Url","cryptoClients","SECP256K1Client","secp256k1_1","ES256K","hmac_1","secp","ecdsaSigFormatter_1","errors_1","msgs","derivePublicKey","compressed","signHash","signingInputHash","format","MissingParametersError","derSignature","derToJose","loadSignature","joseSignature","joseToDer","verifyHash","derSignatureBytes","algorithmName","__awaiter","thisArg","_arguments","generator","Promise","resolve","reject","fulfilled","step","next","rejected","then","hashSha256Async","hashSha256","console","decodeToken","token","tokenParts","JSON","parse","allHeaders","headerValue","base64Url_1","getParamSize","keySize","paramBytesForAlg","ES256","ES384","ES512","getParamBytesForAlg","alg","paramBytes","MAX_OCTET","signatureAsBytes","countPadding","stop","signatureBytes","maxEncodedParamLength","inputLength","TAG_SEQ","seqLength","TAG_INT","rLength","rOffset","sLength","sOffset","rPadding","sPadding","dst","max","o","rsBytes","shortLength","InvalidTokenError","__createBinding","desc","getOwnPropertyDescriptor","__esModule","writable","__exportStar","TokenSigner","createUnsecuredToken","cryptoClients_1","createSigningInput","encodedHeader","stringify","encodedPayload","typ","signingAlgorithm","rawPrivateKey","tokenType","cryptoClient","defaultHeader","expanded","customHeader","signingInput","createWithSignedHash","signAsync","TokenVerifier","rawPublicKey","verifyCompact","verifyExpanded","verifyAsync","performVerify","verified","HASH_UNDEFINED","MAX_SAFE_INTEGER","argsTag","boolTag","dateTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reFlags","reIsHostCtor","reIsUint","cloneableTags","freeGlobal","g","freeSelf","Function","freeExports","nodeType","freeModule","moduleExports","addMapEntry","pair","addSetEntry","arrayReduce","iteratee","accumulator","initAccum","isHostObject","mapToArray","overArg","func","transform","arg","setToArray","uid","arrayProto","funcProto","objectProto","coreJsData","maskSrcKey","exec","IE_PROTO","funcToString","objectToString","reIsNative","RegExp","Buffer","Symbol","getPrototype","objectCreate","propertyIsEnumerable","splice","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeKeys","getNative","Map","Set","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","entries","clear","entry","ListCache","MapCache","Stack","__data__","assignValue","object","objValue","eq","assocIndexOf","baseClone","isDeep","isFull","customizer","stack","isObject","isArr","initCloneArray","copyArray","getTag","isFunc","copy","cloneBuffer","isPrototype","proto","initCloneObject","copyObject","getSymbols","copySymbols","baseAssign","cloneFunc","symbol","Ctor","cloneArrayBuffer","cloneDataView","typedArray","cloneTypedArray","cloneMap","regexp","lastIndex","cloneRegExp","cloneSet","initCloneByTag","stacked","props","keysFunc","symbolsFunc","arrayPush","baseGetAllKeys","getAllKeys","arrayEach","subValue","arrayBuffer","newValue","getMapData","getValue","isFunction","test","baseIsNative","has","pop","cache","pairs","LARGE_ARRAY_SIZE","isIndex","ctorString","isArrayLike","isLength","inherited","isObjectLike","isArrayLikeObject","isArguments","baseTimes","String","skipIndexes","arrayLikeKeys","baseKeys","iterator","bind","$origin","$ttl","ttl","soa","host","ns","ip","aaaa","alias","cname","preference","mx","ptr","txt","priority","weight","port","target","srv","spf","toISOString","round","uri","trim","replacement","minimum","expire","retry","refresh","serial","rname","mname","fullname","jsonZoneFile","toJSON","parseZoneFile","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","getter","mode","def","current","getOwnPropertyNames","definition","globalThis","prop","toStringTag","nmd","paths","children","Rho","Id","_","Pi","idxL","idxR","shifts","shiftsL","idx","shiftsR","Kl","Kr","rotl","group","BUF","RIPEMD160","h0","h2","h3","h4","al","ar","bl","br","cl","cr","dl","dr","el","er","rGroup","hbl","hbr","rl","rr","sr","tl","tr","ripemd160","MASTER_SECRET","BITCOIN_VERSIONS","private","public","HARDENED_OFFSET","toU32","HDKey","opt","depth","chainCode","parentFingerprint","privKeyBytes","pubKey","pubHash","fingerprint","identifier","pubKeyHash","privateExtendedKey","serialize","publicExtendedKey","fromMasterSeed","I","fromExtendedKey","base58key","keyBuffer","keyView","isPriv","fromJSON","json","xpriv","derive","path","child","deriveChild","childTweak","added","err","wipePrivateData","xpub","getTime","performance","random","NO_CRYPTO_LIB","getCryptoLib","lib","NodeCryptoAesCipher","createCipher","createDecipher","encrypt","algorithm","iv","cipher","final","decrypt","WebCryptoAesCipher","subtleCrypto","algo","cryptoKey","cryptoLib","createCipheriv","createDecipheriv","ERROR_CODES","MISSING_PARAMETER","REMOTE_SERVICE_ERROR","INVALID_STATE","NO_SESSION_DATA","DOES_NOT_EXIST","FAILED_DECRYPTION_ERROR","INVALID_DID_ERROR","NOT_ENOUGH_FUNDS_ERROR","INVALID_AMOUNT_ERROR","LOGIN_FAILED_ERROR","SIGNATURE_VERIFICATION_ERROR","CONFLICT_ERROR","NOT_ENOUGH_PROOF_ERROR","BAD_PATH_ERROR","VALIDATION_ERROR","PAYLOAD_TOO_LARGE_ERROR","PRECONDITION_FAILED_ERROR","UNKNOWN","BlockstackError","bugDetails","parameter","FailedDecryptionError","GaiaHubError","response","hubError","statusCode","status","statusText","body","DoesNotExist","ConflictError","NotEnoughProofError","BadPathError","ValidationError","PayloadTooLargeError","maxUploadByteSize","PreconditionFailedError","privateKeyBuffer","NodeCryptoSha2Hash","hashSha512Sync","WebCryptoSha2Hash","BITCOIN_PUBKEYHASH","base58Encode","base58CheckEncode","InvalidPublicKeyReason","content","sharedSecretToKeys","sharedSecret","hashedSecret","encryptionKey","hmacKey","encryptECIES","wasString","cipherTextEncoding","validity","pub","invalidFormat","reason_data","reason","InvalidFormat","invalidPoint","IsNotPoint","firstByte","isValidPublicKey","ephemeralPrivateKey","ephemeralPublicKey","sharedKeys","initializationVector","cipherText","plaintext","aes256CbcEncrypt","macData","mac","cipherTextString","ephemeralPK","writeUInt32BE","destination","NodeCryptoPbkdf2","nodePbkdf2","iterations","keyLength","WebCryptoPbkdf2","passwordBytes","deriveBits","WebCryptoPartialPbkdf2","algoOpts","hmacDigest","saltLength","block1","destPos","hLen","ceil","T","U","PRIVATE_KEY_BYTES_COMPRESSED","defaultFetchOpts","referrerPolicy","headers","fetchWrapper","init","fetchOpts","fetch","fetchLib","middlewares","argsForCreateFetchFn","url","fetchParams","middleware","post","ChainId","PeerNetworkId","AddressVersion","TransactionVersion","Mainnet","chainId","transactionVersion","peerNetworkId","magicBytes","bootAddress","addressVersion","singleSig","MainnetSingleSig","multiSig","MainnetMultiSig","client","baseUrl","STACKS_TESTNET","Testnet","TestnetSingleSig","TestnetMultiSig","STACKS_DEVNET","STACKS_MOCKNET","network","networkFromName","ClarityVersion","AnchorMode","PayloadType","PostConditionMode","PostConditionType","AuthType","FungibleConditionCode","NonFungibleConditionCode","PostConditionPrincipalId","AssetType","TenureChangeCause","AuthFieldType","TxRejectedReason","PubKeyEncoding","AddressHashMode","OnChainOnly","OffChainOnly","Any","StacksWireType","getAddressFromPrivateKey","addrVer","hashMode","P2PKH","P2SH","P2SHNonSequential","P2WPKH","P2WSH","P2WSHNonSequential","addressHashModeToVersion","address","Address","hash160","privateKeyIsCompressed","privateKeyToPublic","compressPrivateKey","getGaiaAddress","account","dataPrivateKey","getRootNode","wallet","rootKey","fetchFirstName","namesResponse","namesJson","names","assertIsTruthy","getProfileURLFromZoneFile","fetchFn","ok","nameInfo","zonefile","getHubInfo","gaiaHubUrl","connectToGaiaHubWithConfig","hubInfo","readURL","read_url_prefix","challengeText","challenge_text","iss","gaiaChallenge","makeGaiaAuthToken","url_prefix","max_file_upload_size_megabytes","server","makeGaiaAssociationToken","secretKeyHex","childPublicKeyHex","signerKeyHex","compressedPublicKeyHex","childToAssociate","exp","iat","whenChainId","chainIdMap","DATA_DERIVATION_PATH","deriveWalletKeys","rootNode","deriveSalt","configPrivateKey","deriveConfigPrivateKey","derivedConfigKey","deriveLegacyConfigPrivateKey","derivedLegacyKey","publicKeyHex","sha2Hash","DerivationType","selectStxDerivation","username","stxDerivationType","selectDerivationTypeForUsername","derivationType","selectUsernameForAccount","nameLookupURL","resp","getNameInfo","derivedAddress","deriveStxPrivateKey","deriveDataPrivateKey","fetchUsernameForAccountByDerivationType","derivePrivateKeyByType","childKey","deriveAccount","stxPrivateKey","identityKeychain","appsKey","randomSeedPhrase","generateSecretKey","generateWallet","secretKey","encryptedSecretKey","phrase","mnemonicEntropy","plaintextNormalized","getRandomBytes","keysAndIV","encKey","macKey","hmacPayload","encryptMnemonic","rootPrivateKey","walletKeys","accounts","config","generateNewAccount","accountIndex","newAccount","Wallet","decryptContent","options","cipherObject","ivBytes","cipherTextBytes","actualMac","equalsConstTime","plainText","ciphertext","aes256CbcDecrypt","SyntaxError","fetchLegacyWalletConfig","gaiaHubConfig","legacyConfigKey","encrypted","text","configJSON","levels","levelToInt","intToLevel","level","shouldLog","logMessage","warn","info","debug","uploadToGaiaHub","filename","contents","hubConfig","contentType","newFile","etag","dangerouslyIgnoreEtag","Authorization","method","errorMsg","gaiaResponse","responseJson","responseMsg","getGaiaErrorResponse","maxBytes","megabytes","isFinite","getBlockstackErrorFromResponse","responseText","connectToGaiaHub","challengeSignerHex","associationToken","hubUrl","handlesV1Auth","latest_auth_version","parsedChallenge","publickey","makeLegacyAuthToken","makeV1GaiaAuthToken","createWalletGaiaConfig","getOrCreateWalletConfig","skipUpload","fetchWalletConfig","newConfig","makeWalletConfig","updateWalletConfig","walletConfig","_walletConfig","encryptWalletConfig","apps","contentBytes","cipherPayload","signatureObject","signECDSA","signedCipherObject","encryptContent","updateWalletConfigWithApp","app","configApp","configAccount","origin","restoreWalletAccounts","_client","legacyGaiaConfig","currentGaiaConfig","legacyWalletConfig","all","identities","newAccounts","existingAccount","meta","hideWarningForReusingIdentity","identity","encryptPrivateKey","encryptedObj","DEFAULT_PROFILE","DEFAULT_PROFILE_FILE_NAME","fetchProfileFromUrl","profileUrl","decodedToken","claim","fetchAccountProfileUrl","signProfileForUpload","profile","tokenRecord","subject","issuer","issuedAt","expiresAt","setFullYear","getFullYear","nextYear","tokenSigner","jti","signProfileToken","tokenRecords","uploadProfile","signedProfileTokenData","identityHubConfig","signAndUploadProfile","getStxAddress","accountOrOptions","getAccountDisplayName","getAppPrivateKey","appDomain","appIndex","hashCode","appKeychain","transitPublicKey","scopes","appPrivateKeyFromWalletSalt","additionalData","appPrivateKey","catch","optionalGaiaProfileData","storageUrl","appsMeta","storage","compressedAppPublicKey","metadata","coreToken","setMonth","getMonth","blockstackAPIUrl","privateKeyPayload","coreTokenPayload","additionalProperties","email","profile_url","private_key","public_keys","core_token","stxAddress"],"sourceRoot":""}